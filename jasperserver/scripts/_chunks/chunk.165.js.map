{"version":3,"sources":["webpack://jrs-ui/./src/config/requestSettings.js","webpack://jrs-ui/./src/i18n/all.properties.js","webpack://jrs-ui/./src/dataSource/model/BaseDataSourceModel.js","webpack://jrs-ui/../js-sdk/src/common/util/featureDetection.js","webpack://jrs-ui/./src/util/redirectToUrlUtil.js","webpack://jrs-ui/./src/util/historyHelper.js","webpack://jrs-ui/./src/settings/userTimeZones.settings.js","webpack://jrs-ui/./src/dataSource/view/BaseDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/timezoneTemplate.htm","webpack://jrs-ui/./src/dataSource/template/testConnectionTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/connectionTypes.js","webpack://jrs-ui/./src/i18n/jasperserver_config.properties.js","webpack://jrs-ui/../js-sdk/src/common/templates/dialogErrorPopupTemplate.htm","webpack://jrs-ui/./src/dataSource/model/CustomDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/CustomDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/customDataSourceTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/dataSourceResourceTypes.js","webpack://jrs-ui/./src/settings/dataSourcePatterns.settings.js","webpack://jrs-ui/./src/dataSource/util/settingsUtility.js","webpack://jrs-ui/./src/dataSource/model/JdbcDriverModel.js","webpack://jrs-ui/./src/dataSource/collection/JdbcDriverCollection.js","webpack://jrs-ui/./src/dataSource/model/JdbcDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/dialog/BaseDialog.js","webpack://jrs-ui/./src/dataSource/template/dialog/baseDialogTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/transport/AjaxFormSubmitter.js","webpack://jrs-ui/../js-sdk/src/components/loadingOverlay/LoadingOverlay.js","webpack://jrs-ui/../js-sdk/src/components/loadingOverlay/template/overlayLayout.htm","webpack://jrs-ui/./src/dataSource/view/dialog/UploadJdbcDriverDialog.js","webpack://jrs-ui/./src/dataSource/template/dialog/uploadJdbcDriverDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/template/dialog/fileUploadTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcCustomFieldTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/templates/components.pickers.htm","webpack://jrs-ui/./src/settings/awsSettings.settings.js","webpack://jrs-ui/./src/dataSource/template/jdbcOptionalFieldTemplate.htm","webpack://jrs-ui/./src/dataSource/view/JdbcDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/jdbcSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcAthenaAwsRegionTemplate.htm","webpack://jrs-ui/./src/dataSource/template/jdbcfileLocationTemplate.htm","webpack://jrs-ui/./src/dataSource/model/JndiDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/JndiDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/jndiSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/model/AwsDataSourceModel.js","webpack://jrs-ui/./src/dataSource/template/awsSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/AwsDataSourceView.js","webpack://jrs-ui/./src/dataSource/model/AzureSqlDataSourceModel.js","webpack://jrs-ui/./src/dataSource/template/azureSqlSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/AzureSqlDataSourceView.js","webpack://jrs-ui/./src/dataSource/model/SubDataSourceModel.js","webpack://jrs-ui/./src/dataSource/collection/SubDataSourceCollection.js","webpack://jrs-ui/./src/dataSource/model/VirtualDataSourceModel.js","webpack://jrs-ui/./src/components/components.dependent.dialog.js","webpack://jrs-ui/./src/dataSource/view/SubDataSourceItemView.js","webpack://jrs-ui/./src/dataSource/template/subDataSourceItemTemplate.htm","webpack://jrs-ui/./src/dataSource/view/SubDataSourcesListView.js","webpack://jrs-ui/./src/dataSource/template/subDataSourcesListTemplate.htm","webpack://jrs-ui/./src/dataSource/view/VirtualDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/virtualSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/dialog/dependenciesTemplate.htm","webpack://jrs-ui/./src/dataSource/model/BeanDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/BeanDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/beanSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/view/MongoDbDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/mongoDbSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/enum/mongoJdbcFileSourceTypes.js","webpack://jrs-ui/./src/dataSource/model/MongoDbJdbcDataSourceModel.js","webpack://jrs-ui/./src/dataSource/view/MongoDbJdbcDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/mongoDbJdbcSpecificTemplate.htm","webpack://jrs-ui/./src/dataSource/template/mongoDbJdbcFileLocationSectionTemplate.htm","webpack://jrs-ui/./src/dataSource/view/DiagnosticCustomDataSourceView.js","webpack://jrs-ui/./src/dataSource/template/InternalDiagnosticTemplate.htm","webpack://jrs-ui/./src/dataSource/factory/dataSourceViewFactory.js","webpack://jrs-ui/./src/dataSource/saveDialog/BaseSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/baseSaveDialogTemplate.htm","webpack://jrs-ui/../js-sdk/src/common/enum/javaTypeMapper.js","webpack://jrs-ui/./src/dataSource/fileDataSource/enum/javaTypes.js","webpack://jrs-ui/./src/dataSource/fileDataSource/SimpleDomainModel.js","webpack://jrs-ui/../js-sdk/src/common/templates/standardConfirm.htm","webpack://jrs-ui/./src/dataSource/saveDialog/DomainSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/domainSaveDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/fileDataSource/template/simpleDomainDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/fileDataSource/SimpleDomainView.js","webpack://jrs-ui/./src/dataSource/saveDialog/TextDataSourceSaveDialogView.js","webpack://jrs-ui/./src/dataSource/saveDialog/template/textDataSourceSaveDialogTemplate.htm","webpack://jrs-ui/./src/dataSource/factory/saveDialogViewFactory.js","webpack://jrs-ui/./src/dataSource/collection/CustomDataSourceCollection.js","webpack://jrs-ui/./src/dataSource/DataSourceController.js","webpack://jrs-ui/./src/dataSource/template/dataSourceMainTemplate.htm"],"names":["locale","configs","settings","defaultSettings","headers","bundle","Object","keys","reduce","acc","key","ResourceModel","defaults","_","connectionType","undefined","validation","initialize","attributes","options","contextPath","jrsConfigs","this","isNew","parentFolderUri","set","silent","name","uri","isEditMode","testConnection","validate","_isValid","dfr","$","loadingDialog","ajax","loadingDialogOpened","responseTimer","window","setTimeout","dialogs","AjaxRequester","data","toJSON","Backbone","type","url","contentType","JSON","stringify","always","clearTimeout","done","resolve","fail","reject","promise","supportsTouch","navigator","msMaxTouchPoints","location","href","token","document","referrer","indexOf","JSCookie","encodeURIComponent","defaultUrl","currentUrl","tokenUrl","value","decodeURIComponent","redirectToUrl","settingsStore","testConnectionInProgress","testConnectionDetailsMessage","PAGE_TITLE_NEW_MESSAGE_CODE","PAGE_TITLE_EDIT_MESSAGE_CODE","modelConstructor","BaseDataSourceModel","events","timezones","modelAttrs","dataSource","model","Validation","valid","fieldIsValid","invalid","fieldIsInvalid","forceUpdate","selector","initialization","self","render","apply","setPageTitle","msg","button","rc","$el","find","addClass","removeClass","parent","text","i18n","xhr","errMsg","getTestConnectionErrorMessage","details","showTestConnectionMessageDetails","response","parse","responseText","e","parameters","updateModelProperty","$targetEl","target","update","attr","is","val","get","_idUpdatedManually","newId","empty","renderTimezoneSection","append","templateData","renderTestConnectionSection","renderOrAddAnyBlock","container","html","fragmentName","first","length","children","modelAttributes","title","$pageTitleEl","view","$parentEl","error","validField","invalidField","toString","remove","CustomDataSourceModel","extend","repositoryResourceTypes","constructor","dataSourceName","dataSourceType","connectionTypes","arguments","result","prototype","customFields","testable","queryTypes","getCustomFieldsDefinition","requestSettings","getCustomFieldsDefinitionDone","getCustomFieldsDefinitionFail","propertyDefinitions","resetValidation","definition","validationRule","properties","memo","property","push","defaultValue","jasperserverConfig","mandatory","required","errTempl","dialogErrorMessageTemplate","message","errorCode","errorMsg","respText","parseProperties","element","customFieldsToJSON","field","isPassword","BaseDataSourceView","customFieldsTemplate","renderCustomFieldsSection","JDBC","AWS","AZURE_SQL","JNDI","VIRTUAL","CUSTOM","BEAN","MONGODB","MONGODBJDBC","item","JdbcDriverModel","idAttribute","defaultValues","jdbcDriverClass","label","available","isDefault","jdbcUrl","uploaded","mergedOptions","settingsUtility","dataSourcePatterns","DYNAMIC_URL_PART_PATTERN","dynamicUrlPartPattern","DYNAMIC_Address_PATTERN","dynamicServerAddressPattern","OAUTH_SERVICE_EMAIL_PATTERN","dynamicServiceAcctEmailPattern","OAUTH_PVTKEY_PATH_PATTERN","dynamicPvtKeyPathPattern","ACCESS_KEY","dynamicAccessKey","ARN","dynamicARN","AWS_Region","dynamicAwsRegion","S3OUTPUT_LOCATION","dynamicS3OutputLocation","SECRET_KEY","dynamicSecretKey","ROLE","dynamicRole","VIRTUAL_WAREHOUSE","dynamicWarehouse","SNOWFLAKE_DB","dynamicSnowflakeDB","VALIDATION_PATTERNS","obj","propName","XRegExp","isOtherDriver","OTHER_DRIVER","isUploadedDriver","getCustomAttributes","groups","_getRegExpFieldGroupsFromConnectionUrlTemplate","fields","group","convertUrlTemplateToRegex","placeholderPattern","patternTemplate","replace","patternTemplateMap","serverAddress","patternTemplateRegex","oAuthServiceAcctEmail","oAuthPvtKeyPath","accessKey","secretKey","arn","awsRegion","s3OutputLocation","role","warehouse","snowflakeDB","patternName","RegExp","converter","groupSet","FIELD_TEMPLATE_REGEXP","exec","models","driverUploadEnabled","getDefaultDriver","defaultDriver","driver","getDriverByClass","className","findWhere","getDriverByName","getAllPossibleCustomAttributes","fetch","Accept","_links","create","edit","jdbcDrivers","markDriverAsAvailable","driverId","driverModel","id","forbidWhitespacesPattern","BASE_VALIDATION_OBJECT","connectionUrl","fn","state","drivers","selectedDriverClass","test","JDBC_BUNDLE_PREFIX","otherDriverIsPresent","driverClass","username","password","timezone","JdbcDriverCollection","fetchDrivers","then","setCustomAttributesDefaultValues","getCustomAttributeValuesFromConnectionUrl","extendValidation","customAttributesChangeEventString","join","on","setConnectionUrlFromCustomAttributes","setCustomAttributesFromConnectionUrl","changeSelectedDriver","reset","driversModels","index","finalModelsSet","concat","add","getCurrentDriver","trigger","customAttributesHash","currentDriver","driverCustomAttributes","currentCustomAttributeValues","pick","replaceConnectionUrlTemplatePlaceholdersWithValues","getAttributeValueFromUrl","regExp","slice","call","foundParts","addMissingProperties","jdbcFields","fieldsWithValues","i","unsetCustomAttributes","unset","urlTemplate","valuesMap","getRegExpFieldGroupsFromConnectionUrlTemplate","extendedValidationObject","customDriverFields","xRegExpPattern","isModal","TITLE","PRIMARY_BUTTON_LABEL","SECONDARY_BUTTON_LABEL","el","primaryButtonLabel","secondaryButtonLabel","show","hide","primaryButtonOnClick","Error","secondaryButtonOnClick","parseResponse","firstDocChild","firstChild","innerText","body","ActiveXObject","async","loadXML","nodeName","toLowerCase","parseChildren","nextSibling","node","ob","l","childNodes","nodeValue","AjaxUploader","uploadForm","method","enctype","form","parceXmlDocToObject","submit","FormData","res","preventDefault","request","cache","processData","responseJSON","off","iframe","contentWindow","iframeUpload","template","delay","$elSpinner","$elOverlay","_timer","stopListening","BaseDialog","driverAvailable","fileIndex","_overlay","LoadingOverlay","onFileChange","$validationEl","next","match","selectedFiles","inputs","input","addFileInput","onSuccessCallback","onErrorCallback","errorMessage","AjaxFormSubmitter","detach","JdbcDataSourceModel","deepDefaults","awsSettings","listenTo","updateConnectionUrl","updateCustomAttributes","changeDriver","updateDriverOption","addDriverOption","$option","optionText","changeUploadDriverButtonState","$otherDriverOption","before","manuallySetDriverClass","valueObj","customAttributes","renderDriverCustomAttributeFields","$driverUploadButton","buttonManager","buttonLabel","uploadDriver","driverUploadDialog","initDriverUploadDialog","UploadJdbcDriverDialog","_onDriverUploadFinished","renderJdbcSpecificSection","otherDriverValue","awsRegions","resultingHtml","jdbcCustomFieldTemplate","hint","driverSpecificFields","FieldToTemplateMap","jdbcOptionalFieldTemplate","FieldToTitleMap","FieldToHintMap","fieldType","requiredTitle","Title","Hint","currentDriverName","changed","renderFileLocationSection","insertAfter","browseButton","resourceLocator","selectDialogTemplate","resourceInput","providerId","dialogTitle","selectLeavesOnly","onChange","jndiName","JndiDataSourceModel","renderJndiSpecificSection","AwsDataSourceModel","dbName","dbInstanceIdentifier","dbService","roleArn","region","credentialsType","computedState","isEc2Instance","suppressEc2CredentialsWarnings","EC2","changeCredentialsType","sName","getFullDbTreePath","JdbcDataSourceView","onCredentialsTypeChange","updateInput","recheckDriver","availableDriver","changedAttributes","newValue","ec2CredentialsSelected","showAwsDsTree","refreshAwsDataSourceTree","renderAwsSpecificSection","initDataSourceTree","path","isValid","awsDataSourceTree","showTreePrefetchNodes","disableAwsDefaults","hasSecurityCredentials","isEdit","treeOptions","hideLoader","bShowRoot","treeId","additionalParams","awsAccessKey","awsSecretKey","datasourceUri","dynamicTree","httpErrorHandler","ajaxAgent","alertDialog","customTitle","AlertDialog","modal","setMessage","open","observe","ev","param","extra","uriComponents","dbUri","split","connectionUrlTemplate","jdbcTemplate","dBName","dbHost","dnsAddress","dbPort","openAndSelectNode","stopObserving","subscriptionId","keyStorePassword","keyStoreUri","serverName","useMicrosoftDriver","microsoftDriverAvailable","sqlServerStandardDriver","updateDriverClass","driverName","driverClassName","AzureSqlDataSourceModel","onModelChange","updateDatabaseTree","showAzureSqlDsTree","renderAzureSqlSpecificSection","azureSqlDataSourceTree","messageCodes","messageCode","jsExceptionsMessages","jdbcDriver","selectedNode","getSelectedNode","readOnly","maxLength","startsWithLetter","containsOnlyWordCharacters","SubDataSourceModel","hasNonReadOnlyItems","some","subDataSources","arrayMinLength","subDataSourceIds","subDataSource","countMap","duplicateIds","SubDataSourceCollection","updateSubDataSourcesArray","dependentResources","forEach","dependenciesPanel","resources","actionsMap","jQuery","_$title","_titleBackup","_changeMessage","_switchButtons","list","_initList","event","buttonId","closest","action","setItems","stopPropagation","topMessage","bottomMessage","dynamicList","listTemplateDomId","itemTemplateDomId","items","collect","resource","resourceItem","cssClassName","layoutModule","processTemplate","uriElement","getValue","uristring","URIString","xssUtil","buttons","$buttonElements","save","saveAs","ok","cancel","okOnly","canSave","$button","_listItem","tooltipText","updateDataSourceId","setValue","getListItem","setRootElement","setElement","_getElement","subviews","_list","dragPattern","multiSelect","selectOnMousedown","featureDetection","_itemUnselected","_itemSelected","collection","disableSelection","disableSelectionWithoutCursorStyle","enableSelection","getSubviewByListItem","resetSelected","modelsToAdd","modelsToRemove","previousModelUris","selectAfterAdd","currentModelUris","map","previousModels","SubDataSourceItemView","addItems","selectedViews","getSubviewByModel","selectItem","removeSubview","getList","getListLength","_items","getSelectedModels","getSelectedItems","listItem","removeItems","removeSubviews","listItems","hasDependedResources","VirtualDataSourceModel","_subDataSourcesHiddenNodes","showDependentResources","updateAllToLeftButtonState","chooseTreeNodes","nodes","subDataSourcesTree","selectedNodes","nodeUris","_hideAvailableSubDataSources","removeAllSubDataSources","_deselectAllNodes","_unhideAvailableSubDataSources","updateRightButtonState","removeSelectedSubDataSources","selectedModels","selectedSubDataSourcesList","newCollection","removeAttr","$btn","hasMovables","hasUnmovables","isParent","where","updateLeftButtonState","renderVirtualSpecificSection","dependentResourcesDialog","hideNodesFn","SubDataSourcesListView","multiSelectEnabled","uriItem","findLastLoadedNode","child","removeChild","resortChilds","expandTreePath","tree","treePathUri","processNodePath","rootNode","getState","handleNode","select","notLoadedHiddenNodes","hiddenNode","addChild","refreshNode","beanName","beanMethod","BeanDataSourceModel","renderBeanSpecificSection","CustomDataSourceView","renderMongoDbSpecificSection","REPOSITORY","SERVER_FILE_SYSTEM","MongoDbJdbcDataSourceModel","fileTypes","fileSourceType","timeZone","portNumber","repositoryFileName","autoSchemaDefinition","serverFileName","isLocalFileSystemAccessAllowed","adminWorkflows","_embedded","workflow","fileName","mongoJdbcFileSourceTypes","adminWorkflowsLoadingPromise","adjustFileSystemConnectButton","loadAdminWorkflows","dataType","changeFileSourceType","changeAutoSchemaDefinition","focus","validationMethodOnSaveClick","callback","dryRun","errors","fileSourceTypes","fileSourceTypeOptions","renderBlankBody","registeredViews","dataSourceResourceTypes","JndiDataSourceView","AwsDataSourceView","AzureSqlDataSourceView","VirtualDataSourceView","BeanDataSourceView","MongoDbDataSourceView","MongoDbJdbcDataSourceView","DiagnosticCustomDataSourceView","viewType","DialogWithModelInputValidation","theDialogIsOpen","autoUpdateResourceID","saveDialogTemplate","extendModel","saveButtonLabel","_getLabelForSaveButton","preSelectedFolder","skipLocation","minHeight","minWidth","setMinSizeAsSize","resizable","additionalCssClasses","content","isEmbedded","primary","_onSaveDialogSaveButtonClick","_onSaveDialogCancelButtonClick","initializeTree","_onDataSourceNameChange","$contentContainer","change","_onResourceIDInputChange","restoreModel","originalModelValidation","doesNotContainSymbols","description","foldersTree","repositoryTreeFactory","processors","treeBufferSize","types","tooltipOptions","selection","$scrollContainer","_selectTreeNode","startSaveDialog","_openDialog","bindValidation","_closeDialog","unbindValidation","clearValidationErrors","_onDialogResize","otherElementsHeight","treeBox","dialogBody","not","each","outerHeight","height","resourceId","performSave","saveFn","success","_saveSuccessCallback","_saveErrorCallback","handled","substr","columns","dataSourceUri","column","rowId","parseMetadata","dataSourceReference","metadata","queryLanguage","fetchMetadata","BaseSaveDialogView","_onOpenInAdHocDesignerChange","sourceModel","domainName","domainResourceId","doesNotContainCharacters","textId","changeButtonLabel","confirm","standardConfirmTemplate","okButtonSelector","cancelButtonSelector","hasChanges","modelIsValid","SimpleDomainModel","width","_onSaveButtonClick","_onCancelButtonClick","validationFailed","fieldId","parents","startDialog","simpleDomainDialogTemplate","javaTypes","javaTypeMapper","setContent","_center","errorRow","saveDialog","DomainSaveDialogView","SimpleDomainView","registeredDialogs","TextDataSourceSaveDialogView","CreateDomainLink","dataSourceView","historyBackToken","args","Array","initSwipeScroll","history","fetchingCustomDataSourcesDeferred","fetchingTheModelDeferred","customDataSourceCollection","CustomDataSourcesCollection","renderDataSourceContainer","resourceUri","modelToEdit","textStatus","jqXHR","dataSourceViewFactory","getResponseHeader","dataSourceClientType","productTypeIsEc2","dataSourceTypeOptions","currentCustomDataSourceType","option","display","TouchController","_render","saveParams","onDataSourceTypeChange","selectedType","_prepareSaveDialog","createDomainMode","SaveDialog","saveDialogViewFactory","_onSaveAndCreateDomainDone","_onSaveDone","_onSaveFail","onSaveClick","currentTarget","funcOnceValidationPassed","resourceModel","close","onCancelClick","cancelFn"],"mappings":"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","file":"_chunks/chunk.165.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport defaultSettings from 'js-sdk/src/common/config/requestSettings';\nimport configs from 'js-sdk/src/jrs.configs';\n\nexport default () => {\n    const locale = configs.userLocale.replace(/_/g, '-');\n    const settings = defaultSettings();\n\n    return {\n        ...settings,\n        headers: {\n            ...settings.headers,\n            'Accept-Language': locale\n        }\n    }\n};","\n        import {store, MERGED_BUNDLES_NAME} from 'bundleStore';\n        \n        let bundle;\n        \n        if ('all' !== MERGED_BUNDLES_NAME) {\n            store['all'] = store['all'] || {};\n            bundle = store['all'];\n        } else {\n            bundle = Object.keys(store).reduce((acc, key) => {\n                return {\n                    ...acc,\n                    ...store[key]\n                }\n            }, {});\n        }\n                                     \n        export default bundle;\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport Backbone from 'backbone';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport {ajax, AjaxRequester} from \"../../core/core.ajax\";\nimport dialogs from '../../components/components.dialogs';\n\nexport default ResourceModel.extend({\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, ResourceModel.prototype.defaults, { connectionType: undefined });\n        return defaults;\n    }(),\n    validation: {},\n    initialize: function (attributes, options) {\n        options = _.defaults(options || {}, { contextPath: jrsConfigs.contextPath });\n        this.options = options;\n        if (this.isNew()) {\n            options.parentFolderUri && this.set('parentFolderUri', options.parentFolderUri, { silent: true });\n        }\n        var parentFolderUri = options.parentFolderUri ? options.parentFolderUri : attributes.parentFolderUri;\n        if (attributes.name && parentFolderUri && !attributes.uri && options.isEditMode === true) {\n            // if resource name and parent folder URI is given, but resource URI isn't set,\n            // then let's generate it and set to the model for consistency purpose\n            // but we'll do it only in case of when we are in the editing mode\n            this.set('uri', ResourceModel.constructUri(parentFolderUri, attributes.name), { silent: true });\n        }\n        ResourceModel.prototype.initialize.call(this, attributes, options);\n    },\n    testConnection: function () {\n        this.validate();\n        if (!this._isValid)\n            return;    // launch the loading timer and create a deferred object to encapsulate this timer\n        // launch the loading timer and create a deferred object to encapsulate this timer\n        var dfr = $.Deferred(), loadingDialog = $('#' + ajax.LOADING_ID)[0], loadingDialogOpened = false, responseTimer = window.setTimeout(function () {\n            loadingDialogOpened = true;\n            dialogs.popup.show(loadingDialog, true);\n        }, AjaxRequester.prototype.MAX_WAIT_TIME);\n        var data = this.toJSON();\n        Backbone.ajax({\n            type: 'POST',\n            url: jrsConfigs.contextPath + '/rest_v2/connections',\n            contentType: data.connectionType,\n            headers: { 'Accept': 'application/json' },\n            data: JSON.stringify(data)\n        }).always(function () {\n            // remove that timer and close the dialog if it was open\n            window.clearTimeout(responseTimer);\n            loadingDialogOpened && dialogs.popup.hide(loadingDialog);\n        }).done(dfr.resolve).fail(dfr.reject);\n        return dfr.promise();\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    supportsTouch: function () {\n        return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n    }()\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    redirect: function (url) {\n        window.location.href = url;\n    }\n}","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport redirectToUrl from '../util/redirectToUrlUtil';\nimport {JSCookie} from \"./utils.common\";\n\nexport default {\n    saveCurrent: function (token) {\n        new JSCookie(token, encodeURIComponent(document.location.href));\n    },\n    saveReferrer: function (token) {\n        if (document.referrer.indexOf('login.html') === -1) {\n            new JSCookie(token, encodeURIComponent(document.referrer));\n        }\n    },\n    restore: function (token, defaultUrl) {\n        var currentUrl = encodeURIComponent(document.location.href);\n        var tokenUrl = new JSCookie(token).value;\n        if (tokenUrl && tokenUrl !== currentUrl) {\n            var url = decodeURIComponent(tokenUrl);\n            if (url) {\n                redirectToUrl.redirect(url);\n                return;\n            }\n        }    // in worse scenario, we need to get to the starting point\n        // in worse scenario, we need to get to the starting point\n        defaultUrl = defaultUrl || '/';\n        redirectToUrl.redirect(jrsConfigs.contextPath + defaultUrl);\n    }\n};","\n        import settingsStore from 'settingsStore';\n        settingsStore['userTimeZones'] = settingsStore['userTimeZones'] || {};\n        export default settingsStore['userTimeZones'];\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport BaseDataSourceModel from '../model/BaseDataSourceModel';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport timezones from '../../settings/userTimeZones.settings';\nimport Backbone from 'backbone';\nimport timezoneTemplate from '../template/timezoneTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\nimport testConnectionTemplate from '../template/testConnectionTemplate.htm';\nimport Validation from 'js-sdk/src/common/extension/backboneValidationExtension';\n\nvar testConnectionInProgress;\nvar testConnectionDetailsMessage;\n\nexport default Backbone.View.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: undefined,\n    PAGE_TITLE_EDIT_MESSAGE_CODE: undefined,\n\n    modelConstructor: BaseDataSourceModel,\n\n    events: {\n        \"keyup input[type='text'], input[type='password'], textarea, select\": \"updateModelProperty\",\n        \"change input[type='text'], input[type='password'], input[type='radio'], input[type='checkbox'], textarea, select\": \"updateModelProperty\",\n        \"click #testDataSource\": \"testConnection\",\n        \"click [name=testConnectionMessageDetails]\" : \"showTestConnectionMessageDetails\"\n    },\n\n    initialize: function(options) {\n        this.options = options;\n        this.isEditMode = options.isEditMode;\n        this.timezones = options.timezones ? options.timezones : timezones;\n\n        var modelAttrs = {};\n        if (options.dataSource) {\n            modelAttrs = _.extend(modelAttrs, options.dataSource);\n        }\n        this.model = new this.modelConstructor(modelAttrs, options);\n\n        Validation.bind(this, {\n            valid: this.fieldIsValid,\n            invalid: this.fieldIsInvalid,\n            forceUpdate: true,\n            selector: \"name\"\n        });\n        if (this.model.initialization) {\n            var self = this;\n            this.model.initialization.done(function() {\n                self.render.apply(self);\n            });\n        } else {\n            this.render();\n        }\n        this.setPageTitle();\n    },\n\n    testConnection: function() {\n        if (testConnectionInProgress === true) return;\n\n        var rc = this.model.testConnection(), self = this, msg, button;\n        if (!rc) return;\n\n        // set flag variable\n        testConnectionInProgress = true;\n\n        // disable the \"Test Connection\" button\n        button = self.$el.find(\"#testDataSource\");\n        button.addClass(\"disabled\");\n\n        // clear the test connection message near the button\n        msg = this.$el.find(\"[name=testConnectionMessage]\");\n\n        // next goes magic !\n        msg.removeClass(\"warning success\").addClass(\"hidden\");\n        msg.parent().addClass(\"error\"); // special class name goes to parent\n        msg.find(\"a\").addClass(\"hidden\"); // this hides the \"Show Details\" link\n\n        rc.done(function() {\n\n            msg.addClass(\"success\").find(\"span\").text(i18n[\"resource.dataSource.connectionState.passed\"]);\n\n        }).fail(function(xhr) {\n\n            // now, compose the message\n            var errMsg = self.getTestConnectionErrorMessage(xhr);\n\n            // and display it !\n            msg.addClass(\"warning\").find(\"span\").text(errMsg.text);\n            if (errMsg.details) {\n                msg.find(\"a\").removeClass(\"hidden\");\n                testConnectionDetailsMessage = errMsg.details;\n            }\n\n        }).always(function() {\n\n            testConnectionInProgress = false;\n            msg.removeClass(\"hidden\"); // this line actually shows the test connection message\n            button.removeClass(\"disabled\");\n\n        });\n    },\n\n    showTestConnectionMessageDetails: function() {\n        dialogs.errorPopup.show(testConnectionDetailsMessage);\n    },\n\n    getTestConnectionErrorMessage: function(xhr) {\n\n        //parse the response\n        var response = false, text = i18n[\"resource.dataSource.connectionState.failed\"], details = false;\n        try { response = JSON.parse(xhr.responseText) } catch(e){\n            // in this case show at least what was sent ot us\n            details = xhr.responseText;\n        }\n\n        if (response) {\n            if(response.parameters && response.parameters[2]){\n                // if 3rd parameter exist, then it's an exception message and should be shown as connection error text\n                text = response.parameters[2];\n            }\n            if(response.parameters && response.parameters[3]){\n                // if 4th parameter exist, then it's an exception stack trace, which should be shown as error details\n                details = response.parameters[3];\n            }\n        }\n\n        return {\n            text: text,\n            details: details\n        };\n    },\n\n    updateModelProperty: function(e) {\n        var $targetEl = $(e.target),\n            update = {},\n            attr = $targetEl.attr(\"name\"),\n            value = \"checkbox\" === $targetEl.attr(\"type\") ? $targetEl.is(':checked') : $.trim($targetEl.val());\n\n        update[attr] = value;\n\n        this.model.set(update);\n\n        if (!this.isEditMode) {\n            if (attr === \"name\") {\n                var generatedId = ResourceModel.generateResourceName(this.model.get(\"label\"));\n                if (value !== generatedId) {\n                    this._idUpdatedManually = true;\n                }\n            } else if (attr === \"label\" && !this._idUpdatedManually) {\n                var newId = ResourceModel.generateResourceName(value);\n                this.model.set(\"name\", newId);\n                this.$(\"input[name='name']\").val(newId);\n            }\n        }\n\n        this.model.validate(update);\n    },\n\n    render: function() {\n        this.$el.empty();\n        return this;\n    },\n\n    renderTimezoneSection: function() {\n        this.$el.append(_.template(timezoneTemplate, this.templateData()));\n    },\n\n    renderTestConnectionSection: function() {\n        this.$el.append(_.template(testConnectionTemplate, this.templateData()));\n    },\n\n    renderOrAddAnyBlock: function(container, html) {\n\n        if (_.isString(html)) {\n            try{\n                html = $(html);\n            } catch(e){\n                html = false;\n            }\n            if (!html) {\n                return false;\n            }\n        }\n\n        // check if html has already been rendered in the container\n        // (it's possible because each html fragment is covered with \"fieldset\" tag\n        var fragmentName = html.first().attr(\"name\");\n        if (!fragmentName) {\n            return false;\n        }\n\n        if (container.find(\"[name=\" + fragmentName + \"]\").length > 0) {\n            // the render has happened already, so we need to clean the container\n            // and put dom fragment inside it\n            container.find(\"[name=\" + fragmentName + \"]\").empty().append(html.children());\n        } else {\n            // the render happens first time, there is no any custom field elements and there is no custom\n            // container, so we can simply put it there\n            container.append(html);\n        }\n        return true;\n    },\n\n    templateData: function() {\n        return {\n            _: _,\n            i18n: i18n,\n            modelAttributes: _.clone(this.model.attributes),\n            timezones: this.timezones,\n            isEditMode: this.isEditMode\n        }\n    },\n\n    setPageTitle: function() {\n        var title, $pageTitleEl = $(\"#display .showingToolBar > .content > .header > .title\");\n\n        if (this.isEditMode) {\n            title = i18n[this.PAGE_TITLE_EDIT_MESSAGE_CODE] + \": \" + this.model.get(\"label\");\n        } else {\n            title = i18n[this.PAGE_TITLE_NEW_MESSAGE_CODE];\n        }\n\n        $pageTitleEl.text(title);\n    },\n\n    fieldIsValid: function(view, attr, selector) {\n        var $parentEl = view.$('[' + selector + '=\"' + attr + '\"]').parent();\n        $parentEl.removeClass(\"error\");\n        $parentEl.find(\".message.warning\").text(\"\");\n    },\n\n    fieldIsInvalid: function(view, attr, error, selector) {\n        if (error === true) {\n            // don't show anything since this type of error is used when you need to\n            // mark model as invalid and at the same time don't show any error message\n            return;\n        }\n        var $parentEl = view.$('[' + selector + '=\"' + attr + '\"]').parent();\n        $parentEl.addClass(\"error\");\n        $parentEl.find(\".message.warning\").text(error);\n    },\n\n    // simpler version of 'validField' which works always on the same\n    // context ('view' parameter is absent), and selector does not build from two parameters\n    validField: function(selector) {\n        var $parentEl = this.$(selector).parent();\n        $parentEl.removeClass(\"error\");\n        $parentEl.find(\".message.warning\").text(\"\");\n    },\n\n    // simpler version of 'fieldIsInvalid' which works always on the same\n    // context ('view' parameter is absent), and selector does not build from two parameters\n    // also, the order of parameters has changed\n    invalidField: function(selector, error) {\n        var $parentEl = this.$(selector).parent();\n        $parentEl.addClass(\"error\");\n        $parentEl.find(\".message.warning\").text(error.toString());\n    },\n\n    remove: function() {\n        // remove all resource locator DOM elements\n        // 1 and 2 are the beginning of timestamp\n        $(\"div[id^='selectFromRepository1'], div[id^='selectFromRepository2']\").remove();\n        Validation.unbind(this);\n        Backbone.View.prototype.remove.call(this);\n        return this;\n    }\n});\n","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <label title=\\\"{{- i18n['resource.analysisConnection.timeZone'] }}\\\" class=\\\"control select\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.timezone\\\"] }}</span>\\n        <select class=\\\"fnormal timeZone\\\" name=\\\"timezone\\\">\\n            <option {{ if (modelAttributes.timezone === \\\"\\\") { }}selected=\\\"selected\\\"{{ } }} value=\\\"\\\">{{- i18n[\\\"jsp.jdbcPropsForm.timezone.default.option\\\"] }}</option>\\n            {{ _.each(timezones, function(timezone) { }}\\n            <option value=\\\"{{- timezone.code }}\\\" {{ if (timezone.code === modelAttributes.timezone) { }}selected=\\\"selected\\\"{{ } }}>\\n                {{- i18n['timezone.option'].replace('{0}', timezone.code).replace('{1}', timezone.description) }}\\n            </option>\\n            {{ }); }}\\n        </select>\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.hint3\\\"] }}</span>\\n    </label>\\n</fieldset>\";","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <span id=\\\"testDataSource\\\" class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- i18n['button.testConnection']}}</span></span>\\n    <div class=\\\"message warning\\\" name=\\\"testConnectionMessage\\\">\\n        <span></span>\\n        <a class=\\\"details\\\" name=\\\"testConnectionMessageDetails\\\" href=\\\"#\\\">{{- i18n['button.details']}}</a>\\n    </div>\\n\\n</fieldset>\\n\\n<br/>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    AWS: 'application/repository.awsDataSource+json',\n    AZURE_SQL: 'application/repository.azureSqlDataSource+json',\n    BEAN: 'application/repository.beanDataSource+json',\n    JDBC: 'application/repository.jdbcDataSource+json',\n    JNDI: 'application/repository.jndiJdbcDataSource+json',\n    VIRTUAL: 'application/repository.virtualDataSource+json',\n    MONGODB: 'application/connections.mongodb+json',\n    HIVE: 'application/connections.hive+json',\n    TEXT_FILE: 'application/connections.txtFile+json',\n    XLS_FILE: 'application/connections.xlsFile+json',\n    CUSTOM: 'application/repository.customDataSource+json'\n};","\n        import {store, MERGED_BUNDLES_NAME} from 'bundleStore';\n        \n        let bundle;\n        \n        if ('jasperserver_config' !== MERGED_BUNDLES_NAME) {\n            store['jasperserver_config'] = store['jasperserver_config'] || {};\n            bundle = store['jasperserver_config'];\n        } else {\n            bundle = Object.keys(store).reduce((acc, key) => {\n                return {\n                    ...acc,\n                    ...store[key]\n                }\n            }, {});\n        }\n                                     \n        export default bundle;\n    ","export default \"{{- message }}\\n\\n{{\\nvar errorLbl = (typeof errorLabel !== 'undefined' ? errorLabel : 'The reason is');\\n}}\\n\\n{{ if (typeof message2 !== 'undefined') { }}\\n<br/>{{- errorLbl }}: {{- message2 }}\\n{{ } else if (errorCode) { }}\\n<br/>{{- errorLbl }}: {{- errorCode }}\\n{{ } else if (errorMsg) { }}\\n<br/>{{- errorLbl }}: {{- errorMsg }}\\n{{ } }}\\n\\n{{ var respTextLbl = (typeof respTextLabel  !== 'undefined' ? respTextLabel : 'The full response from the server is') }}\\n<br/><br/>{{- respTextLbl }}: {{- respText }}\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport requestSettings from '../../config/requestSettings';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport dialogs from '../../components/components.dialogs';\nimport i18n from '../../i18n/all.properties';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\nimport dialogErrorMessageTemplate from 'js-sdk/src/common/templates/dialogErrorPopupTemplate.htm';\n\nvar CustomDataSourceModel = BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.CUSTOM_DATA_SOURCE,\n    constructor: function (attributes, options) {\n        this.defaults = _.extend({}, this.defaults, {\n            dataSourceName: options.dataSourceType,\n            connectionType: connectionTypes.CUSTOM\n        });\n        BaseDataSourceModel.prototype.constructor.apply(this, arguments);\n    },\n    initialize: function (attributes, options) {\n        var result = BaseDataSourceModel.prototype.initialize.apply(this, arguments);    // define attributes which specific for custom model (we will fetch their values from the server)\n        // define attributes which specific for custom model (we will fetch their values from the server)\n        this.customFields = [];\n        this.testable = false;\n        this.queryTypes = null;\n        this.initialization = $.Deferred();\n        this.getCustomFieldsDefinition();\n        return result;\n    },\n    getCustomFieldsDefinition: function () {\n        var headers = {}, dfr;\n        _.extend(headers, requestSettings(), { 'Accept': 'application/json' });\n        dfr = $.ajax({\n            type: 'GET',\n            headers: headers,\n            url: jrsConfigs.contextPath + '/rest_v2/customDataSources/' + this.get('dataSourceName')\n        }).done(_.bind(this.getCustomFieldsDefinitionDone, this)).fail(_.bind(this.getCustomFieldsDefinitionFail, this));\n        return dfr;\n    },\n    getCustomFieldsDefinitionDone: function (response) {\n        var self = this;\n        if (response && response.propertyDefinitions && _.isArray(response.propertyDefinitions)) {\n            this.resetValidation();    // reset validation to initial state\n            // reset validation to initial state\n            this.testable = !!response.testable;\n            this.queryTypes = response.queryTypes ? response.queryTypes : null;\n            _.each(response.propertyDefinitions, function (definition) {\n                var validationRule = {};\n                if (definition.properties) {\n                    definition.properties = _(definition.properties).reduce(function (memo, property) {\n                        memo[property.key] = property.value;\n                        return memo;\n                    }, {});\n                }\n                self.customFields.push(definition);\n                self.defaults[definition.name] = definition.defaultValue;\n                if (!self.options.isEditMode) {\n                    self.set(definition.name, definition.defaultValue);\n                }\n                if (definition.name === 'password' && self.options.isEditMode && !self.isNew()) {\n                    self.set('password', jasperserverConfig['input.password.substitution']);\n                }    // now, extend the validation object with required fields\n                // now, extend the validation object with required fields\n                if (definition.properties && definition.properties.mandatory) {\n                    validationRule[definition.name] = {\n                        required: true,\n                        msg: i18n[self.get('dataSourceName') + '.' + definition.name + '.required'] || i18n['required.field.specify.value']\n                    };\n                    _.extend(self.validation, validationRule);\n                }\n            });\n        }\n        if (!this.options.isEditMode) {\n            this.set(this.parse(this.attributes), { silent: true });\n        }\n        this.initialization.resolve();\n    },\n    getCustomFieldsDefinitionFail: function (xhr) {\n        var response = false;\n        try {\n            response = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        var errTempl = _.template(dialogErrorMessageTemplate, {\n            message: 'Failed to load custom data source definition. ',\n            errorCode: response && response[0] ? response[0].errorCode : null,\n            errorMsg: response && response.message,\n            respText: xhr.responseText\n        });\n        dialogs.errorPopup.show(errTempl);\n    },\n    parse: function (response) {\n        var result = BaseDataSourceModel.prototype.parse.apply(this, arguments);\n        result = _.extend(result, this.parseProperties(response.properties));\n        delete response.properties;\n        return result;\n    },\n    parseProperties: function (properties) {\n        var result = {};\n        if (!_.isEmpty(properties)) {\n            _.each(properties, function (element) {\n                result[element.key] = 'password' === element.key ? jasperserverConfig['input.password.substitution'] : element.value;\n            });\n        }\n        return result;\n    },\n    toJSON: function () {\n        var result = BaseDataSourceModel.prototype.toJSON.apply(this, arguments);\n        return this.customFieldsToJSON(result, this.customFields);\n    },\n    customFieldsToJSON: function (data, customFields) {\n        if (!_.isEmpty(customFields)) {\n            data.properties = [];\n            _.each(customFields, function (field) {\n                var value = data[field.name], isPassword = 'password' === field.name;\n                if (!_.isUndefined(value)) {\n                    if (!isPassword || isPassword && value !== jasperserverConfig['input.password.substitution']) {\n                        data.properties.push({\n                            key: field.name,\n                            value: value\n                        });\n                        delete data[field.name];\n                    }\n                }\n            });\n        }\n        return data;\n    },\n    resetValidation: function () {\n        this.validation = _.clone(CustomDataSourceModel.prototype.validation);\n    }\n});\nexport default CustomDataSourceModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport customDataSourceTemplate from '../template/customDataSourceTemplate.htm';\nimport CustomDataSourceModel from '../model/CustomDataSourceModel';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.custom.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.custom.page.title.edit',\n    modelConstructor: CustomDataSourceModel,\n    // to be defined in specific view if you want to re-define it\n    customFieldsTemplate: customDataSourceTemplate,\n    // to be defined in specific view if you want to re-define it\n    render: function () {\n        this.$el.empty();\n        this.renderCustomFieldsSection();\n        if (this.model.testable) {\n            this.renderTestConnectionSection();\n        }\n        return this;\n    },\n    templateData: function () {\n        return _.extend({}, BaseDataSourceView.prototype.templateData.apply(this, arguments), {\n            i18n: i18n,\n            // this redefines the basic 'jasperserver_messages' bundle with 'all' bundle\n            customFields: this.model.customFields\n        });\n    },\n    renderCustomFieldsSection: function () {\n        var html = _.template(this.customFieldsTemplate, this.templateData()), container = this.$el.find('[name=customFieldsContainer]');\n        if (container.length > 0) {\n            // the render has happened already, so we need to clean the container\n            // and put custom field elements inside it\n            container.empty().append($(html).children());\n        } else {\n            // the render happens first time, there is no any custom field elements and there is no custom\n            // container, so we can simply put it there\n            this.$el.append(html);\n        }\n    }\n}, {});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n\\t{{\\n\\n\\tvar buildAttrs = function(attrs) {\\n\\t\\treturn _.map(attrs, function(v, k){\\n\\t\\t\\tv = v.toString().replace(/\\\"/g, \\\"\\\\&quot\\\\;\\\");\\n\\t\\t\\treturn k + '=\\\"' + _.xssHardEscape(v) + '\\\"';\\n\\t\\t}).join(\\\" \\\");\\n\\t};\\n\\n\\t_.each(customFields, function(field){\\n\\n\\t\\tvar\\n\\t\\t\\tattrs = {},\\n\\t\\t\\tlabel = i18n[field.label] || field.label;\\n\\n\\t\\tif (field.mandatory) {\\n\\t\\t\\tlabel = label + \\\" (\\\" + i18n[\\\"required.field\\\"] + \\\")\\\";\\n\\t\\t}\\n\\t}}\\n\\n\\t\\t<label title=\\\"{{- label }}\\\" class=\\\"control input text\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- label }}:</span>\\n\\t\\t\\t{{\\n\\n\\t\\t\\t\\tvar properties = field.properties || {};\\n                var value = modelAttributes[field.name] ? modelAttributes[field.name] : \\\"\\\";\\n                if(\\\"password\\\" === field.name && value !== \\\"\\\"){\\n                    value = i18n['input.password.substitution']\\n                }\\n\\n\\t\\t\\t\\tif (properties.type === \\\"boolean\\\") {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.type = \\\"checkbox\\\";\\n\\t\\t\\t\\t\\tif (value == 'on' || value == 'true') {\\n\\t\\t\\t\\t\\t\\tattrs.checked = \\\"true\\\";\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<input {{ print(buildAttrs(attrs)) }} />\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} else if (properties.displayHeight != null) {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.rows = properties.displayHeight;\\n\\t\\t\\t\\t\\tattrs.cols = properties.displayWidth != null ? properties.displayWidth : 40;\\n\\t\\t\\t\\t\\tattrs[\\\"class\\\"] = \\\"fnormal\\\";\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<textarea {{ print(buildAttrs(attrs)) }} >{{- value }}</textarea>\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tattrs.name = field.name;\\n\\t\\t\\t\\t\\tattrs.type = field.name === \\\"password\\\" ? \\\"password\\\" : \\\"text\\\";\\n\\t\\t\\t\\t\\tattrs.size = properties.displayWidth != null ? properties.displayWidth : 40;\\n\\t\\t\\t\\t\\tattrs[\\\"class\\\"] = \\\"fnormal\\\";\\n\\t\\t\\t\\t\\tattrs.value = value;\\n\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t<input {{ print(buildAttrs(attrs)) }} />\\n\\t\\t\\t\\t\\t{{\\n\\t\\t\\t\\t} }}\\n\\n\\t\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\n\\t{{ }); }}\\n\\n</fieldset>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    JDBC: 'jdbcDataSource',\n    AWS: 'awsDataSource',\n    AZURE_SQL: 'azureSqlDataSource',\n    JNDI: 'jndiJdbcDataSource',\n    VIRTUAL: 'virtualDataSource',\n    CUSTOM: 'customDataSource',\n    BEAN: 'beanDataSource',\n    MONGODB: 'MongoDbDataSource',\n    MONGODBJDBC: 'mongoDbJDBCDataSource'\n};","\n        import settingsStore from 'settingsStore';\n        settingsStore['dataSourcePatterns'] = settingsStore['dataSourcePatterns'] || {};\n        export default settingsStore['dataSourcePatterns'];\n    ","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nexport default {\n    deepDefaults: function (options, defaults) {\n        return _.reduce(defaults, function (memo, item, key) {\n            memo[key] = options[key] ? _.defaults(options[key], item) : item;\n            return memo;\n        }, {});\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport XRegExp from 'xregexp';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport settingsUtility from '../util/settingsUtility';\n\nvar JdbcDriverModel = Backbone.Model.extend({\n    idAttribute: 'jdbcDriverClass',\n    defaults: {\n        defaultValues: {},\n        jdbcDriverClass: '',\n        label: '',\n        available: false,\n        isDefault: false,\n        jdbcUrl: '',\n        uploaded: false\n    },\n    initialize: function (attributes, options) {\n        var mergedOptions = settingsUtility.deepDefaults(options, { dataSourcePatterns: dataSourcePatterns });\n        JdbcDriverModel.DYNAMIC_URL_PART_PATTERN = mergedOptions.dataSourcePatterns.dynamicUrlPartPattern;\n        JdbcDriverModel.DYNAMIC_Address_PATTERN = mergedOptions.dataSourcePatterns.dynamicServerAddressPattern;\n        JdbcDriverModel.OAUTH_SERVICE_EMAIL_PATTERN = mergedOptions.dataSourcePatterns.dynamicServiceAcctEmailPattern;\n        JdbcDriverModel.OAUTH_PVTKEY_PATH_PATTERN = mergedOptions.dataSourcePatterns.dynamicPvtKeyPathPattern;\n        JdbcDriverModel.ACCESS_KEY = mergedOptions.dataSourcePatterns.dynamicAccessKey;\n        JdbcDriverModel.ARN = mergedOptions.dataSourcePatterns.dynamicARN;\n        JdbcDriverModel.AWS_Region = mergedOptions.dataSourcePatterns.dynamicAwsRegion;\n        JdbcDriverModel.S3OUTPUT_LOCATION = mergedOptions.dataSourcePatterns.dynamicS3OutputLocation;\n        JdbcDriverModel.SECRET_KEY = mergedOptions.dataSourcePatterns.dynamicSecretKey;\n        JdbcDriverModel.ROLE = mergedOptions.dataSourcePatterns.dynamicRole;\n        JdbcDriverModel.VIRTUAL_WAREHOUSE = mergedOptions.dataSourcePatterns.dynamicWarehouse;\n        JdbcDriverModel.SNOWFLAKE_DB = mergedOptions.dataSourcePatterns.dynamicSnowflakeDB;\n        JdbcDriverModel.VALIDATION_PATTERNS = _.reduce(mergedOptions.dataSourcePatterns, function (obj, value, propName) {\n            obj[propName] = XRegExp(value);\n            return obj;\n        }, {});\n    },\n    isOtherDriver: function () {\n        return this.get('jdbcDriverClass') === JdbcDriverModel.OTHER_DRIVER;\n    },\n    isUploadedDriver: function () {\n        return this.get('uploaded') === true;\n    },\n    getCustomAttributes: function () {\n        if (this.isOtherDriver()) {\n            return [];\n        }\n        var groups = this._getRegExpFieldGroupsFromConnectionUrlTemplate(), fields = [];\n        _.each(groups, function (group) {\n            return fields.push(group[1]);\n        });\n        return fields;\n    },\n    // Convert url template to regexp template\n    convertUrlTemplateToRegex: function () {\n        var placeholderPattern, patternTemplate = this.get('jdbcUrl');    // escaping ? otherwise regexp will not match to url \"jdbc:sybase:Tds:localhost:5433?ServiceName=name\"\n        // escaping ? otherwise regexp will not match to url \"jdbc:sybase:Tds:localhost:5433?ServiceName=name\"\n        patternTemplate = patternTemplate.replace(/\\?/g, '\\\\?');\n        patternTemplate = patternTemplate.replace(/\\[TMPDIR\\/\\]/g, '\\\\[TMPDIR/\\\\]');    // replacing dynamic parts\n        const patternTemplateMap = {\n            serverAddress: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.DYNAMIC_Address_PATTERN),\n            oAuthServiceAcctEmail: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.OAUTH_SERVICE_EMAIL_PATTERN),\n            oAuthPvtKeyPath: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.OAUTH_PVTKEY_PATH_PATTERN),\n            accessKey: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ACCESS_KEY),\n            secretKey: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.SECRET_KEY),\n            arn: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ARN),\n            awsRegion: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.AWS_Region),\n            s3OutputLocation: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.S3OUTPUT_LOCATION),\n            role: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.ROLE),\n            warehouse: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.VIRTUAL_WAREHOUSE),\n            snowflakeDB: (patternTemplateRegex) => patternTemplateRegex.replace(placeholderPattern, JdbcDriverModel.SNOWFLAKE_DB)\n        };\n        // replacing dynamic parts\n        for (var patternName in JdbcDriverModel.VALIDATION_PATTERNS) {\n            placeholderPattern = new RegExp('\\\\$\\\\[' + patternName + '\\\\]', 'g');\n            const converter = patternTemplateMap[patternName]\n            patternTemplate = converter ? converter(patternTemplate) : patternTemplate.replace(placeholderPattern, JdbcDriverModel.DYNAMIC_URL_PART_PATTERN);\n        }\n        return '^' + patternTemplate;\n    },\n    parse: function (response) {\n        response.isDefault = response.isDefault ? true : false;\n        if (response.defaultValues) {\n            response.defaultValues = _.reduce(response.defaultValues, function (memo, element) {\n                memo[element.key] = element.value;\n                return memo;\n            }, {});\n        }\n        return response;\n    },\n    // Evaluate regexp on urlTemplate and return all found groups.\n    _getRegExpFieldGroupsFromConnectionUrlTemplate: function () {\n        var groups = [], group;\n        var groupSet = [];\n        while (!_.isNull(group = JdbcDriverModel.FIELD_TEMPLATE_REGEXP.exec(this.get('jdbcUrl')))) {\n            if (_.isArray(group) && group.length === 2) {\n                if (groupSet.indexOf(group[0]) === -1) {\n                    groups.push(group);\n                    groupSet.push(group[0]);\n                }\n            }\n        }\n        return groups;\n    }\n}, {\n    FIELD_TEMPLATE_REGEXP: /\\$\\[([^\\]]+)\\]/g,\n    OTHER_DRIVER: 'other'\n});\nexport default JdbcDriverModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport JdbcDriverModel from '../model/JdbcDriverModel';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\n\nexport default Backbone.Collection.extend({\n    model: JdbcDriverModel,\n    url: jrsConfigs.contextPath + '/rest_v2/jdbcDrivers',\n    initialize: function (models, options) {\n        this.options = options;\n        this.driverUploadEnabled = false;\n    },\n    getDefaultDriver: function () {\n        var defaultDriver = this.find(function (driver) {\n            return !_.isUndefined(driver.get('isDefault')) && driver.get('isDefault') !== false;\n        });\n        return defaultDriver ? defaultDriver : this.first();\n    },\n    set: function (models, options) {\n        if (typeof options === 'undefined') {\n            options = {};\n        }\n        _.extend(options, this.options);\n        return Backbone.Collection.prototype.set.call(this, models, options);\n    },\n    getDriverByClass: function (className) {\n        var driver = this.findWhere({ jdbcDriverClass: className });\n        return driver ? driver : this.findWhere({ jdbcDriverClass: JdbcDriverModel.OTHER_DRIVER });\n    },\n    getDriverByName: function (name) {\n        return this.findWhere({ name: name });\n    },\n    getAllPossibleCustomAttributes: function () {\n        return _.keys(JdbcDriverModel.VALIDATION_PATTERNS);\n    },\n    fetch: function (options) {\n        _.defaults(options || (options = {}), { headers: { Accept: 'application/hal+json' } });\n        return Backbone.Collection.prototype.fetch.call(this, options);\n    },\n    parse: function (response) {\n        var result = Backbone.Collection.prototype.parse.apply(this, arguments);\n        if (result._links && result._links.create && result._links.edit) {\n            this.driverUploadEnabled = true;\n        }\n        return result.jdbcDrivers ? result.jdbcDrivers : result;\n    },\n    markDriverAsAvailable: function (driverId) {\n        var model = this.models.find(function (driverModel) {\n            return driverModel.id === driverId;\n        });\n        model.set('available', true);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport XRegExp from 'xregexp';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverModel from './JdbcDriverModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport connectionTypes from '../enum/connectionTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\n\nvar forbidWhitespacesPattern = XRegExp(dataSourcePatterns.forbidWhitespacesPattern);\nvar oAuthServicePrivateKeyPattern=XRegExp(dataSourcePatterns.oAuthPvtKeyPath);\nvar BASE_VALIDATION_OBJECT = function () {\n    var validation = {};\n    _.extend(validation, BaseDataSourceModel.prototype.validation, {\n        connectionUrl: [\n            {\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl']\n            },\n            {\n                fn: function (value, attr, state) {\n                    var allowSpaces = this.drivers.getDriverByClass(state.selectedDriverClass).get('allowSpacesInDbName');\n                    if (!allowSpaces && !forbidWhitespacesPattern.test(value)) {\n                        return i18n['ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl'];\n                    }\n                }\n            }\n        ]\n    });\n    return validation;\n}();\nexport default BaseDataSourceModel.extend({\n    JDBC_BUNDLE_PREFIX: 'resource.dataSource.jdbc.',\n    otherDriverIsPresent: true,\n    type: repositoryResourceTypes.JDBC_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            driverClass: '',\n            // this is the value of the selected driver class. Keep in mind, what \"other\" driver has (and should have) empty driver class name (i.e. \"\")\n            selectedDriverClass: '',\n            // this is the pointer to the \"selected\" element in the <select> html tag on the page\n            username: '',\n            password: '',\n            timezone: '',\n            connectionUrl: '',\n            isOtherDriver: false,\n            connectionType: connectionTypes.JDBC\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        return _.extend({}, BASE_VALIDATION_OBJECT);\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.fetchDrivers().then(function () {\n            if (self.isNew()) {\n                self.setCustomAttributesDefaultValues(self.drivers.getDefaultDriver());\n            } else {\n                self.set('selectedDriverClass', self.get('driverClass'));\n                self.set(self.getCustomAttributeValuesFromConnectionUrl());    // use password substitution\n                // use password substitution\n                self.set('password', jasperserverConfig['input.password.substitution']);\n                self.extendValidation();\n            }\n            var customAttributesChangeEventString = _.map(self.drivers.getAllPossibleCustomAttributes(), function (attr) {\n                return 'change:' + attr;\n            }).join(' ');\n            self.on(customAttributesChangeEventString, self.setConnectionUrlFromCustomAttributes);\n            self.on('change:connectionUrl', self.setCustomAttributesFromConnectionUrl);\n            self.on('change:selectedDriverClass', self.changeSelectedDriver);\n            self.initialization.resolve();\n        });\n    },\n    fetchDrivers: function () {\n        var self = this;\n        return this.drivers.fetch({ reset: true }).done(function () {\n            // set default driver\n            // implementing issue JRS-9120: sorting of Driver List:\n            // let's group drivers by their \"installed\" state and then sort them by alphabet\n            var driversModels = _.groupBy(self.drivers.models, function (model) {\n                return model.attributes.available;\n            });    // from now the 'driversModels' is grouped like this:\n            //      {true: Array[16], false: Array[4]}\n            // Let's sort these two groups\n            // from now the 'driversModels' is grouped like this:\n            //      {true: Array[16], false: Array[4]}\n            // Let's sort these two groups\n            _.each(driversModels, function (groupSet, index) {\n                driversModels[index] = _.sortBy(groupSet, function (model) {\n                    return model.attributes.label;\n                });\n            });\n            var finalModelsSet = [];    // first, add installed drivers\n            // first, add installed drivers\n            if (driversModels['true']) {\n                finalModelsSet = finalModelsSet.concat(driversModels['true']);\n            }    // then add not installed\n            // then add not installed\n            if (driversModels['false']) {\n                finalModelsSet = finalModelsSet.concat(driversModels['false']);\n            }    // store it back to original variable\n            // store it back to original variable\n            self.drivers.models = finalModelsSet;    // not, let's add \"other\" and item if we need it\n            // not, let's add \"other\" and item if we need it\n            if (self.drivers.driverUploadEnabled && self.otherDriverIsPresent) {\n                self.drivers.add({\n                    defaultValues: {},\n                    jdbcDriverClass: JdbcDriverModel.OTHER_DRIVER,\n                    label: i18n['resource.dataSource.jdbc.otherDriver'],\n                    available: false,\n                    'default': false,\n                    jdbcUrl: '',\n                    uploaded: false\n                });\n            }\n        });\n    },\n    getCurrentDriver: function () {\n        return this.drivers.getDriverByClass(this.get('selectedDriverClass'));\n    },\n    changeSelectedDriver: function () {\n        var driver = this.drivers.getDriverByClass(this.get('selectedDriverClass'));\n        if (driver) {\n            this.setCustomAttributesDefaultValues(driver);\n            this.setConnectionUrlFromCustomAttributes();\n            this.trigger('driverClassChange', this);\n        }\n    },\n    setCustomAttributesFromConnectionUrl: function () {\n        var customAttributesHash = this.getCustomAttributeValuesFromConnectionUrl();\n        this.set(customAttributesHash, { silent: true });    // trigger custom event in order to prevent event loop\n        // trigger custom event in order to prevent event loop\n        this.trigger('customAttributesUpdate', this);\n    },\n    setConnectionUrlFromCustomAttributes: function () {\n        var currentDriver = this.getCurrentDriver(), driverCustomAttributes = currentDriver.getCustomAttributes(), currentCustomAttributeValues = this.pick(driverCustomAttributes), connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(currentDriver.get('jdbcUrl'), currentCustomAttributeValues);\n        this.set('connectionUrl', connectionUrl, { silent: true });    // trigger custom event in order to prevent event loop\n        // trigger custom event in order to prevent event loop\n        this.trigger('connectionUrlUpdate', this);\n    },\n    // Extract jdbc field values from url accordingly to template.\n    getAttributeValueFromUrl: function (url, regExp) {\n        var groups = regExp.exec(url);\n        return [].slice.call(groups || [], 1);\n    },\n    getCustomAttributeValuesFromConnectionUrl: function () {\n        var foundParts, currentDriver = this.getCurrentDriver();\n        // the below line of code is added just for mysql old version datasource where allowPublicKeyRetrieval=true is not available '\n        if (currentDriver.get('name') === \"mysql\" && currentDriver.get('jdbcDriverClass').indexOf('mariadb') != -1) {\n            this.addMissingProperties(currentDriver, this.get('connectionUrl'));\n        }\n        var url = this.get('connectionUrl'), regExp = XRegExp(currentDriver.convertUrlTemplateToRegex()), jdbcFields = currentDriver.getCustomAttributes(), fieldsWithValues = {};\n        foundParts = this.getAttributeValueFromUrl(url, regExp);\n        _.each(foundParts, function (group, i) {\n            fieldsWithValues[jdbcFields[i]] = group;\n        });\n        return fieldsWithValues;\n    },\n    addMissingProperties: function (currentDriver, url) {\n        let isAllowPublicKey = url && url.indexOf('allowPublicKeyRetrieval') == -1 && currentDriver.get('jdbcUrl').indexOf('allowPublicKeyRetrieval') != -1;\n        if (isAllowPublicKey) {\n            this.set('connectionUrl', url + \"&allowPublicKeyRetrieval=true\")\n        }\n    },\n    setCustomAttributesDefaultValues: function (driver) {\n        this.unsetCustomAttributes();\n        var defaultValues = {};\n        if (!driver.isOtherDriver()) {\n            _.extend(defaultValues, driver.get('defaultValues'));\n            defaultValues['selectedDriverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['driverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['isOtherDriver'] = false;\n            defaultValues['connectionUrl'] = this.replaceConnectionUrlTemplatePlaceholdersWithValues(driver.get('jdbcUrl'), driver.get('defaultValues'));\n        } else {\n            defaultValues['selectedDriverClass'] = driver.get('jdbcDriverClass');\n            defaultValues['driverClass'] = '';\n            defaultValues['isOtherDriver'] = true;\n        }\n        this.set(defaultValues, { silent: true });\n        this.extendValidation();\n    },\n    unsetCustomAttributes: function () {\n        var self = this;\n        _.each(this.drivers.getAllPossibleCustomAttributes(), function (attr) {\n            self.unset(attr, { silent: true });\n        });\n    },\n    // Replace placeholders with values, if value is not present, set empty string.\n    replaceConnectionUrlTemplatePlaceholdersWithValues: function (urlTemplate, valuesMap) {\n        var groups = this.getRegExpFieldGroupsFromConnectionUrlTemplate(urlTemplate);\n        _.each(groups, function (group) {\n            urlTemplate = urlTemplate.replace(group[0], !_.isUndefined(valuesMap[group[1]]) ? valuesMap[group[1]] : '');\n        });\n        return urlTemplate;\n    },\n    // Evaluate regexp on urlTemplate and return all found groups.\n    getRegExpFieldGroupsFromConnectionUrlTemplate: function (urlTemplate) {\n        var groups = [], group;\n        while (!_.isNull(group = JdbcDriverModel.FIELD_TEMPLATE_REGEXP.exec(urlTemplate))) {\n            if (_.isArray(group) && group.length === 2) {\n                groups.push(group);\n            }\n        }\n        return groups;\n    },\n    extendValidation: function () {\n        var self = this, extendedValidationObject = {}, customDriverFields = this.getCurrentDriver().getCustomAttributes();\n        _.extend(extendedValidationObject, BASE_VALIDATION_OBJECT);\n        _.each(customDriverFields, function (field) {\n            extendedValidationObject[field] = [{\n                xRegExpPattern: JdbcDriverModel.VALIDATION_PATTERNS[field],\n                msg: i18n[self.JDBC_BUNDLE_PREFIX + 'invalidField'].replace('{0}', i18n[self.JDBC_BUNDLE_PREFIX + field])\n            }];\n        });\n        this.validation = extendedValidationObject;\n    },\n    toJSON: function () {\n        var data = BaseDataSourceModel.prototype.toJSON.apply(this, arguments);\n        if (this.options.isEditMode && data.password === jasperserverConfig['input.password.substitution']) {\n            data.password = null;\n        }\n        return data;\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport dialogs from '../../../components/components.dialogs';\nimport dialogTemplate from '../../template/dialog/baseDialogTemplate.htm';\n\nexport default Backbone.View.extend({\n    events: {\n        'click button.action.primary': 'primaryButtonOnClick',\n        'click button.action:not(.primary)': 'secondaryButtonOnClick'\n    },\n    isModal: true,\n    TITLE: '',\n    PRIMARY_BUTTON_LABEL: '',\n    SECONDARY_BUTTON_LABEL: '',\n    el: function () {\n        return _.template(dialogTemplate, {\n            title: this.TITLE,\n            primaryButtonLabel: this.PRIMARY_BUTTON_LABEL,\n            secondaryButtonLabel: this.SECONDARY_BUTTON_LABEL\n        });\n    },\n    initialize: function () {\n        $('body').append(this.render().$el);\n    },\n    show: function () {\n        // TODO: get rid of using \"dialogs\" module\n        dialogs.popup.show(this.el, this.isModal);\n    },\n    hide: function () {\n        // TODO: get rid of using \"dialogs\" module\n        dialogs.popup.hide(this.el);\n    },\n    render: function () {\n        return this;\n    },\n    primaryButtonOnClick: function () {\n        throw new Error('Method not implemented');\n    },\n    secondaryButtonOnClick: function () {\n        this.hide();\n    }\n});","export default \"<div id=\\\"select\\\" class=\\\"panel dialog select overlay moveable centered_horz centered_vert hidden\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"sizer diagonal\\\"></div>\\n    <div class=\\\"content hasFooter\\\">\\n        <div class=\\\"header mover\\\">\\n            <div class=\\\"title\\\">{{- title }}</div>\\n        </div>\\n        <div class=\\\"body\\\"></div>\\n        <div class=\\\"footer \\\">\\n            <button class=\\\"button action primary up\\\"><span class=\\\"wrap\\\">{{- primaryButtonLabel }}</span><span class=\\\"icon\\\"></span></button>\\n            <button class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- secondaryButtonLabel }}</span><span class=\\\"icon\\\"></span></button>\\n        </div>\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: ztomchenco\n * @version: $Id: AjaxFormSubmitter.js 9178 2015-08-10 16:48:28Z ztomchen $\n */\n\n\n\nimport _ from 'underscore';\nimport request from '../transport/request';\nimport $ from 'jquery';\n\nfunction parseResponse(document) {\n    var result, firstDocChild = null;\n    if (document.firstChild.innerText && document.firstChild.innerText !== \"\") {\n        if (document.body) {\n            result = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            result.async = false;\n            //remove injected by IE symbols\n            result.loadXML(document.firstChild.innerText.replace(\"\\r\\n-\", \"\\r\\n\"));\n        } else {\n            result = document;\n        }\n    } else {\n        result = document;\n    }\n\n    result.firstChild && (firstDocChild = result.firstChild.nodeName.toLowerCase());\n    if (!firstDocChild || firstDocChild === \"html\" || firstDocChild === \"#comment\") {\n        return {errorCode: \"unexpected.error\"}\n    }\n\n    return parseChildren((result.firstChild.nodeName.toLowerCase() === \"xml\")\n        ? result.firstChild.nextSibling : result.firstChild);\n}\n\nfunction parseChildren(node) {\n    var children, ob;\n    if (!node.children) {\n        children = [];\n        for (let i = 0, l = node.childNodes.length; i < l; i++) {\n            if (node.childNodes[i].nodeValue === null) {\n                children.push(node.childNodes[i]);\n            }\n        }\n    } else {\n        children = node.children;\n    }\n\n    if (children.length === 0 && node.childNodes.length === 1) {\n        return node.childNodes[0].nodeValue;\n    } else {\n        if (children.length > 1 && (children[0].nodeName === children[1].nodeName)) {\n            ob = [];\n            for (let i = 0, l = children.length; i < l; i++) {\n                ob[i] = parseChildren(children[i]);\n            }\n        } else {\n            ob = {};\n            for (let i = 0, l = children.length; i < l; i++) {\n                ob[children[i].nodeName] = parseChildren(children[i]);\n            }\n        }\n    }\n    return ob;\n}\n\nfunction ajaxUpload(form) {\n    var res = new $.Deferred();\n\n    form.submit(function (e) {\n        e.preventDefault();\n\n        request({\n            url: form.attr(\"action\"),\n            type: form.attr(\"method\"),\n            data: new FormData(form[0]),\n            cache: false,\n            contentType: false,\n            processData: false,\n            headers: {\n                Accept: \"application/json\"\n            }\n        }).done(function (result) {\n            res.resolve(result);\n        }).fail(function (error) {\n            error = error.responseJSON || error || {};\n\n            // default error code\n            _.defaults(error, {\n                errorCode: \"error.load.error\"\n            });\n\n            res.reject(error);\n        });\n\n        form.off(\"submit\");\n    });\n\n    form.submit();\n\n    return res;\n}\n\nfunction iframeUpload(form, name) {\n    var result = $.Deferred(),\n        iframe = $(\"<iframe style='display:none' name='\" + name + \"'></iframe>\");\n\n    form.append(iframe).attr(\"target\", name);\n\n    iframe.on(\"load\", function () {\n        try {\n            result.resolve(parseResponse(this.contentWindow.document));\n        } catch (e) {\n            result.reject({errorCode: \"error.invalid.response\"});\n        }\n\n        iframe.remove();\n    });\n\n    iframe.on(\"abort\", function () {\n        result.reject({errorCode: \"error.load.aborted\"});\n        iframe.remove();\n    });\n\n    iframe.on(\"error\", function () {\n        result.reject({errorCode: \"error.load.error\"});\n        iframe.remove();\n    });\n\n    form.submit();\n\n    return result;\n}\n\nvar AjaxUploader = function (uploadForm, url, method, enctype) {\n    this.name = _.uniqueId(\"uploadTarget\");\n    this.form = $(uploadForm);\n\n    url && this.form.attr(\"action\", url);\n    method && this.form.attr(\"method\", method);\n    enctype && this.form.attr(\"enctype\", enctype);\n\n    this.parceXmlDocToObject = parseResponse;\n};\n\nAjaxUploader.prototype.submit = function () {\n    if (window.FormData) {\n        return ajaxUpload(this.form);\n    }\n\n    return iframeUpload(this.form, this.name);\n};\n\nexport default AjaxUploader;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport overlayLayout from './template/overlayLayout.htm';\n\nexport default Backbone.View.extend({\n    template: _.template(overlayLayout),\n    initialize: function (options) {\n        this.delay = options.delay;\n        this.render();\n    },\n    render: function () {\n        this.$el.append(this.template());\n        this.$elSpinner = this.$('.jr-mSpinnerDatatable');\n        this.$elOverlay = this.$('.jr-mOverlay');\n        return this;\n    },\n    show: function (delay) {\n        var self = this, show = function () {\n            self.$elSpinner.show();\n            self.$elOverlay.show();\n        };\n        if (this.delay || delay) {\n            if (!this._timer) {\n                this._timer = setTimeout(show, this.delay || delay);\n            }\n        } else\n            show();\n    },\n    hide: function () {\n        if (this._timer) {\n            clearTimeout(this._timer);\n            this._timer = null;\n        }\n        this.$elSpinner.hide();\n        this.$elOverlay.hide();\n    },\n    remove: function () {\n        this.$elSpinner.remove();\n        this.$elOverlay.remove();\n        this.stopListening();\n        return this;\n    }\n});","export default \"<div class=\\\"jr-mSpinner jr-mSpinnerDatatable jr-isHidden jr\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n</div>\\n<div class=\\\"jr-mOverlay jr-isHidden jr\\\"></div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseDialog from '../../view/dialog/BaseDialog';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport AjaxFormSubmitter from 'js-sdk/src/common/transport/AjaxFormSubmitter';\nimport LoadingOverlay from 'js-sdk/src/components/loadingOverlay/LoadingOverlay';\nimport dialogs from '../../../components/components.dialogs';\nimport i18n from '../../../i18n/jasperserver_messages.properties';\nimport uploadJdbcDriverDialogTemplate from '../../template/dialog/uploadJdbcDriverDialogTemplate.htm';\nimport fileUploadTemplate from '../../template/dialog/fileUploadTemplate.htm';\nimport '../../../util/utils.common';\n\nexport default BaseDialog.extend({\n    TITLE: i18n['resource.dataSource.jdbc.selectDriverTitle'],\n    PRIMARY_BUTTON_LABEL: i18n['button.upload'],\n    SECONDARY_BUTTON_LABEL: i18n['button.cancel'],\n    events: function () {\n        return _.extend({}, BaseDialog.prototype.events, { 'change input[type=\\'file\\']': 'onFileChange' });\n    },\n    initialize: function (options) {\n        this.driverClass = options.driverClass;\n        this.driverAvailable = options.driverAvailable;\n        this.fileIndex = 0;\n        this._overlay = new LoadingOverlay({\n            delay: 1000\n        });\n        BaseDialog.prototype.initialize.apply(this, arguments);\n        $(this.el).addClass('jr jr-uploadJdbcDriverDialog');\n    },\n    onFileChange: function (e) {\n        const $targetEl = $(e.target),\n            $validationEl = $targetEl.next('.message.warning');\n        $validationEl.parent().removeClass('error');\n        if (!$targetEl.val().match(/.jar$/)) {\n            $validationEl.text(i18n['resource.dataSource.jdbc.upload.wrongExtension']).parent().addClass('error');\n        } else if ($targetEl.is(this.$('input[type=\\'file\\']:last-of-type'))) {\n            // determine if we need to add one more input to select more files\n            let selectedFiles = 0, inputs = this.$('input[type=\\'file\\']');\n            _.each(inputs, function (input, index) {\n                selectedFiles += index + 1;\n            });\n            if (selectedFiles >= inputs.length) {\n                this.addFileInput();\n            }\n            this.$('button.primary').removeClass('disabled').attr('disabled', null);\n        }\n    },\n    render: function () {\n        this.$('.body').html(_.template(uploadJdbcDriverDialogTemplate, {\n            className: this.driverClass,\n            i18n: i18n\n        }));\n        _.defer(() => {\n            this.addFileInput();\n            if (this.driverAvailable) {\n                this.$('.warningMessageContainer').removeClass('hidden').find('.message').text(i18n['resource.dataSource.jdbc.upload.overwriteWarning']);\n            } else {\n                this.$('.warningMessageContainer').addClass('hidden').find('.message').text('');\n            }\n        });\n        this.$('button.primary').addClass('disabled').attr('disabled', 'disabled');\n        return this;\n    },\n    onSuccessCallback: function (response) {\n        this.trigger('driverUpload', response);\n        this.hide();\n        dialogs.systemConfirm.show(i18n['resource.dataSource.jdbc.upload.driverUploadSuccess']);\n        _.defer(_.bind(this.remove, this));\n    },\n    onErrorCallback: function (response) {\n        let errorMessage;\n        response = response.responseJSON ? response.responseJSON : response;\n        if ('illegal.parameter.value.error' === response.errorCode && response.parameters && response.parameters.length && 'className' === response.parameters[0]) {\n            errorMessage = i18n['resource.dataSource.jdbc.classNotFound'].replace('{0}', this.driverClass);\n        } else if (response.message) {\n            errorMessage = response.message;\n        } else {\n            errorMessage = response.errorCode;    // see some notes in JRS-8435\n            // backend responses with 400 error code and http header \"Content-Type: application/errorDescriptor+xml\"\n            // this makes all browsers crazy.\n            // Shortly, browsers don't have access to http response body...\n            // Server is considering this issue, but for now we may close the issue by adding next lines on code\n            // see some notes in JRS-8435\n            // backend responses with 400 error code and http header \"Content-Type: application/errorDescriptor+xml\"\n            // this makes all browsers crazy.\n            // Shortly, browsers don't have access to http response body...\n            // Server is considering this issue, but for now we may close the issue by adding next lines on code\n            if (errorMessage === 'error.invalid.response') {\n                errorMessage = 'The required driver class (' + this.driverClass + ') is not found in uploaded files';\n            }\n        }\n        this.$('.errorMessageContainer').addClass('error').find('.message').text(errorMessage);\n    },\n    addFileInput: function () {\n        this.$('ul').append(_.template(fileUploadTemplate, { fileIndex: this.fileIndex }));\n        this.fileIndex++;\n    },\n    primaryButtonOnClick: function () {\n        // clear the error message because we are doing new upload\n        this.$('.errorMessageContainer').removeClass('error').find('.message').text('');\n\n        // disable the primary button to block a second click\n        this.$('button.primary').addClass('disabled').attr('disabled', 'disabled');\n        // add a spinner and overlay with some delay\n        $(\"body\").append(this._overlay.$el);\n        this._overlay.show();\n\n        const form = this.$('form');\n        const submitter = (new AjaxFormSubmitter(form[0])).submit();\n        submitter.done((response) => {\n            if (response.errorCode) {\n                this.onErrorCallback(response);\n            } else {\n                this.onSuccessCallback(response);\n            }\n        }).fail((response) => {\n            this.onErrorCallback(response);\n        }).always(() => {\n            // remove overlay with spinner\n            this._overlay.hide();\n            $(\"body\").detach(this._overlay.$el);\n            // and enable the primary button back again\n            this.$('button.primary').removeClass('disabled').attr('disabled', null);\n        });\n    },\n    secondaryButtonOnClick: function () {\n\n        // since the overlay start with some delay there is a change that user clicks \"Cancel\" button\n        // and the overlay will trigger. To avoid this we need to stop the overlay as well.\n        this._overlay.hide();\n        $(\"body\").detach(this._overlay.$el);\n\n        // hide this dialog\n        this.hide();\n        _.defer(_.bind(this.remove, this));\n    }\n});\n","export default \"<form method=\\\"post\\\" enctype=\\\"multipart/form-data\\\" action=\\\"rest_v2/jdbcDrivers\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input name=\\\"className\\\" type=\\\"hidden\\\" value=\\\"{{- className }}\\\"/>\\n    <div class=\\\"control groupBox fillParent\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\">\\n                <ul title=\\\"Locate local file\\\"></ul>\\n                <div class=\\\"errorMessageContainer\\\">\\n                    <span class=\\\"message warning\\\"></span>\\n                </div>\\n                <div class=\\\"hidden warningMessageContainer\\\">\\n                    <span class=\\\"message textAccent\\\"></span>\\n                </div>\\n                <br/>\\n                <a class=\\\"fsection\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"http://community.jaspersoft.com/wiki/downloading-and-installing-database-drivers\\\">{{- i18n[\\\"resource.dataSource.jdbc.upload.downloading\\\"]}}</a>\\n            </div>\\n        </div>\\n    </div>\\n</form>\";","export default \"<li class=\\\"leaf\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input type=\\\"file\\\" name=\\\"file_{{- fileIndex}}\\\" size=\\\"60\\\" accept=\\\"jar/jar\\\" />\\n    <span class=\\\"message warning\\\"></span>\\n</li>\";","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label}} ({{- i18n[\\\"required.field\\\"] }}):</span>\\n    <input name=\\\"{{- name}}\\\" type=\\\"{{- type}}\\\" value=\\\"{{- value }}\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n    <span class=\\\"message hint\\\">{{- hint }}</span>\\n</label>\";","export default \"<div class=\\\"panel dialog selectFromRepository overlay moveable sizeable centered_horz centered_vert hidden\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<div class=\\\"sizer diagonal\\\"></div>\\n\\t<div class=\\\"content hasFooter\\\">\\n\\t\\t<div class=\\\"header mover\\\">\\n\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"body\\\">\\n\\t\\t\\t<div class=\\\"control groupBox fillParent\\\">\\n\\t\\t\\t\\t<div class=\\\"content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"header\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"title\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"body\\\">\\n\\t\\t\\t\\t\\t\\t<ul id=\\\"selectFromRepoTree\\\"></ul>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"footer\\\">\\n\\t\\t\\t<button id=\\\"selectFromRepoBtnSelect\\\" class=\\\"button action primary up\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"button.select\\\"] }}</span><span class=\\\"icon\\\"></span></button>\\n\\t\\t\\t<button id=\\\"selectFromRepoBtnCancel\\\" class=\\\"button action up\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"button.cancel\\\"] }}</span><span class=\\\"icon\\\"></span></button>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\";","\n        import settingsStore from 'settingsStore';\n        settingsStore['awsSettings'] = settingsStore['awsSettings'] || {};\n        export default settingsStore['awsSettings'];\n    ","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- label}}:</span>\\n    <input name=\\\"{{- name}}\\\" type=\\\"{{- type}}\\\" value=\\\"{{- value }}\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n    <span class=\\\"message hint\\\">{{- hint }}</span>\\n</label>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport JdbcDataSourceModel from '../model/JdbcDataSourceModel';\nimport JdbcDriverModel from '../model/JdbcDriverModel';\nimport UploadJdbcDriverDialog from '../view/dialog/UploadJdbcDriverDialog';\nimport jdbcSpecificTemplate from '../template/jdbcSpecificTemplate.htm';\nimport jdbcCustomFieldTemplate from '../template/jdbcCustomFieldTemplate.htm';\nimport buttonManager from '../../core/core.events.bis';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jdbcfileLocationTemplate from \"../template/jdbcfileLocationTemplate.htm\";\nimport resourceLocator from \"../../resource/resource.locate\";\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport $ from 'jquery';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport settingsUtility from \"../util/settingsUtility\";\nimport jdbcAthenaAwsRegionTemplate from '../template/jdbcAthenaAwsRegionTemplate.htm';\nimport jdbcOptionalFieldTemplate from '../template/jdbcOptionalFieldTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jdbc.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jdbc.page.title.edit',\n    modelConstructor: JdbcDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, BaseDataSourceView.prototype.events, {\n            'keyup input[type=\\'text\\'][name!=\\'driverClass\\'], input[type=\\'password\\'], textarea': 'updateModelProperty',\n            'change input[type=\\'text\\'][name!=\\'driverClass\\'], input[type=\\'password\\'], textarea, select': 'updateModelProperty',\n            'keyup input[type=\\'text\\'][name=\\'driverClass\\']': 'manuallySetDriverClass',\n            'change input[type=\\'text\\'][name=\\'driverClass\\']': 'manuallySetDriverClass',\n            'click #driverUploadButton': 'uploadDriver'\n        });\n        return events;\n    }(),\n    initialize: function (options) {\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });\n        this.listenTo(this.model, 'connectionUrlUpdate', this.updateConnectionUrl);\n        this.listenTo(this.model, 'customAttributesUpdate', this.updateCustomAttributes);\n        this.listenTo(this.model, 'driverClassChange', this.changeDriver);\n        this.listenTo(this.model.drivers, 'change', this.updateDriverOption);\n        this.listenTo(this.model.drivers, 'add', this.addDriverOption);\n    },\n    updateDriverOption: function (driver) {\n        var $option = this.$('select[name=\\'selectedDriverClass\\'] option[value=\\'' + driver.get('jdbcDriverClass') + '\\']'), optionText = driver.get('label') + ' (' + driver.get('jdbcDriverClass') + ')';\n        if (!driver.get('available')) {\n            optionText = i18n['resource.dataSource.jdbc.driverMissing'] + ' ' + optionText;\n        }\n        $option.text(optionText);\n        if (this.model.getCurrentDriver() === driver) {\n            this.changeUploadDriverButtonState();\n        }\n    },\n    addDriverOption: function (driver) {\n        // ignore adding of \"other driver\" option.\n        if (driver.isOtherDriver)\n            return;    // in case of normal driver is added to the drivers collection let's add it to the drivers select as option.\n        // in case of normal driver is added to the drivers collection let's add it to the drivers select as option.\n        var $otherDriverOption = this.$('select[name=\\'selectedDriverClass\\'] option[value=\\'' + JdbcDriverModel.OTHER_DRIVER + '\\']'), optionText = driver.get('jdbcDriverClass'), self = this;\n        if (!driver.get('available')) {\n            optionText = i18n['resource.dataSource.jdbc.driverMissing'] + ' ' + optionText;\n        }\n        $otherDriverOption.before('<option value=\\'' + driver.get('jdbcDriverClass') + '\\'>' + optionText + '</option>');\n        _.defer(function () {\n            self.$('select[name=\\'selectedDriverClass\\']').val(driver.get('jdbcDriverClass'));    // manually trigger change event as set won't work here, as driverClass is already the same\n            // manually trigger change event as set won't work here, as driverClass is already the same\n            self.model.trigger('change:driverClass');\n        });\n    },\n    manuallySetDriverClass: function () {\n        var value = this.$('input[type=\\'text\\'][name=\\'driverClass\\']').val(), valueObj = { driverClass: value };\n        this.model.set(valueObj, { silent: true });\n        this.model.validate(valueObj);\n        this.changeUploadDriverButtonState();\n    },\n    updateConnectionUrl: function () {\n        this.$('input[name=\\'connectionUrl\\']').val(this.model.get('connectionUrl'));    // do not trigger validation for connectionUrl of \"other\" driver or \"uploaded\" driver as it's empty by default\n        // do not trigger validation for connectionUrl of \"other\" driver or \"uploaded\" driver as it's empty by default\n        var currentDriver = this.model.getCurrentDriver();\n        if (!currentDriver.isOtherDriver() && !currentDriver.isUploadedDriver()) {\n            this.model.validate({ connectionUrl: this.model.get('connectionUrl') });\n        }\n    },\n    updateCustomAttributes: function () {\n        var self = this, driverCustomAttributes = this.model.getCurrentDriver().getCustomAttributes();\n        _.each(driverCustomAttributes, function (attr) {\n            self.$('input[name=\\'' + attr + '\\']').val(self.model.get(attr));\n        });\n        var customAttributes = this.model.pick(driverCustomAttributes);\n        this.model.validate(customAttributes);\n    },\n    changeDriver: function () {\n        this.renderDriverCustomAttributeFields();\n        this.changeUploadDriverButtonState();\n    },\n    changeUploadDriverButtonState: function () {\n        var currentDriver = this.model.getCurrentDriver(), $driverUploadButton = this.$('#driverUploadButton');\n        buttonManager.enable($driverUploadButton[0]);\n        var buttonLabel = currentDriver.get('available') ? i18n['resource.dataSource.jdbc.upload.editDriverButton'] : i18n['resource.dataSource.jdbc.upload.addDriverButton'];\n        $driverUploadButton.find('.wrap').text(buttonLabel);\n    },\n    uploadDriver: function () {\n        if (this.model.drivers.driverUploadEnabled && this.model.get('driverClass')) {\n            this.fieldIsValid(this, 'driverClass', 'name');\n            this.driverUploadDialog && this.stopListening(this.driverUploadDialog);\n            delete this.driverUploadDialog;\n            this.initDriverUploadDialog();\n            this.driverUploadDialog.show();\n        } else {\n            this.fieldIsInvalid(this, 'driverClass', i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass'], 'name');\n        }\n    },\n    initDriverUploadDialog: function () {\n        this.driverUploadDialog = new UploadJdbcDriverDialog({\n            driverAvailable: this.model.getCurrentDriver().get('available'),\n            driverClass: this.model.get('isOtherDriver') ? this.model.get('driverClass') : this.model.getCurrentDriver().get('jdbcDriverClass')\n        });\n        this.listenTo(this.driverUploadDialog, 'driverUpload', this._onDriverUploadFinished);\n    },\n    _onDriverUploadFinished: function (driver) {\n        var self = this;\n        this.model.fetchDrivers().then(function () {\n            self.model.drivers.markDriverAsAvailable(driver.jdbcDriverClass);\n            _.defer(function () {\n                self.model.validate();\n                self.render();\n            });\n        });\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderJdbcSpecificSection();\n        this.renderTimezoneSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    templateData: function () {\n        var data = BaseDataSourceView.prototype.templateData.apply(this, arguments);\n        _.extend(data, {\n            'i18n':i18n,\n            drivers: this.model.drivers.toJSON(),\n            otherDriverValue: JdbcDriverModel.OTHER_DRIVER,\n            driverUploadEnabled: this.model.drivers.driverUploadEnabled,\n            awsRegions: this.deepDefaults.awsSettings.awsRegions\n        });\n        return data;\n    },\n    renderJdbcSpecificSection: function () {\n        this.$el.append(_.template(jdbcSpecificTemplate, this.templateData()));\n        this.renderDriverCustomAttributeFields();\n        this.changeUploadDriverButtonState();\n    },\n    renderDriverCustomAttributeFields: function () {\n        var self = this, resultingHtml = '';\n        if (this.model.get('isOtherDriver')) {\n            resultingHtml += _.template(jdbcCustomFieldTemplate, {\n                hint: i18n['resource.dataSource.jdbc.hint1'],\n                label: i18n['resource.dataSource.jdbc.driver'],\n                name: 'driverClass',\n                type: 'text',\n                title: i18n['resource.analysisConnection.driver'],\n                value: this.model.get('driverClass'),\n                i18n: i18n\n            });\n        } else {\n            var driverSpecificFields = this.model.getCurrentDriver().getCustomAttributes();\n            const FieldToTemplateMap = {\n                awsRegion: jdbcAthenaAwsRegionTemplate,\n                arn: jdbcOptionalFieldTemplate,\n                role: jdbcOptionalFieldTemplate,\n                warehouse: jdbcOptionalFieldTemplate\n            };\n            const FieldToTitleMap = {\n                accessKey: i18n['resource.dataSource.jdbc.setting.accessKey.title'],\n                secretKey: i18n['resource.dataSource.jdbc.setting.secretKey.title'],\n                arn: i18n['resource.dataSource.jdbc.setting.arn.title'],\n                role: i18n['resource.dataSource.jdbc.optional.snowFlake.role'],\n                warehouse: i18n['resource.dataSource.jdbc.optional.snowFlake.warehouse']\n            };\n            const FieldToHintMap = {\n                arn: i18n['resource.dataSource.jdbc.optional.arn']\n            };\n            _.each(driverSpecificFields, function (field) {\n                const fieldType = field === \"secretKey\" ? \"password\" : \"text\";\n                const requiredTitle = i18n['resource.dataSource.jdbc.requiredTitle'].replace('{0}', i18n['resource.dataSource.jdbc.' + field].toLowerCase());\n                const Title = FieldToTitleMap[field] ?? requiredTitle;\n                const template = FieldToTemplateMap[field] ?? jdbcCustomFieldTemplate;\n                const Hint = FieldToHintMap[field] ?? '';\n                resultingHtml += _.template(template, {\n                    hint: Hint,\n                    label: i18n['resource.dataSource.jdbc.' + field],\n                    name: field,\n                    type: fieldType,\n                    title: Title,\n                    value: self.model.get(field),\n                    i18n: i18n,\n                    awsRegions: self.deepDefaults.awsSettings.awsRegions\n                });\n            });\n        }\n        this.$('[name=jdbcSpecificFieldsContainer]').html(resultingHtml);\n\n        const currentDriverName = (this.isEditMode && !this.model.changed.selectedDriverClass) ? this.options.dataSource.driverClass : this.model.changed.selectedDriverClass;\n        if (currentDriverName && currentDriverName.indexOf(\"GoogleBigQueryDriver\") !== -1 ) {\n            this.renderFileLocationSection();\n        }\n    },\n    remove: function () {\n        this.driverUploadDialog && this.driverUploadDialog.remove();\n        BaseDataSourceView.prototype.remove.apply(this, arguments);\n    },\n    renderFileLocationSection: function () {\n        $( _.template(jdbcfileLocationTemplate,{'i18n':i18n})).insertAfter(\"[name='oAuthPvtKeyPath']\");\n        this.browseButton = resourceLocator.initialize({\n            i18n: i18n,\n            template: selectDialogTemplate,\n            resourceInput: this.$el.find('[name=oAuthPvtKeyPath]')[0],\n            browseButton: this.$el.find('[name=oathPrivateKeyBrowserButton]')[0],\n            providerId: 'fileResourceBaseTreeDataProvider',\n            dialogTitle: i18n['resource.Add.Files.Title'],\n            selectLeavesOnly: true,\n            onChange: _.bind(function (value) {\n                this.model.set('oAuthPvtKeyPath', value);\n                this.model.validate({\n                    'oAuthPvtKeyPath': value\n                });\n            }, this)\n        });\n\n    }\n});\n","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.selectDriverTitle']}}\\\" class=\\\"control select\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.driver']}}:</span>\\n        <select name=\\\"selectedDriverClass\\\">\\n            {{ _.each(drivers, function(driver) { }}\\n                <option value=\\\"{{- driver.jdbcDriverClass }}\\\"\\n                {{ if (modelAttributes.selectedDriverClass === driver.jdbcDriverClass) { }}\\n                    selected=\\\"selected\\\"\\n                {{ } }}>\\n                    {{ if (!driver.available && driver.jdbcDriverClass !== otherDriverValue) { }}\\n                        {{- i18n[\\\"resource.dataSource.jdbc.driverMissing\\\"] }}\\n                    {{ } }}\\n                    {{- driver.label }}\\n                    {{ if (driver.jdbcDriverClass !== otherDriverValue && typeof (driver.label) !== \\\"undefined\\\" && driver.label !== \\\"\\\") { }}\\n                        ({{- driver.jdbcDriverClass }})\\n                    {{ } else if (driver.jdbcDriverClass !== otherDriverValue && (typeof driver.label === \\\"undefined\\\" || driver.label === \\\"\\\")) { }}\\n                        {{- driver.jdbcDriverClass }}\\n                    {{ } }}\\n                </option>\\n            {{ }); }}\\n        </select>\\n\\n        {{ if (driverUploadEnabled) { }}\\n\\t\\t<button class=\\\"button action up\\\" id=\\\"driverUploadButton\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.upload.editDriverButton']}}</span>\\n\\t\\t</button>\\n        {{ } }}\\n    </label>\\n\\n    <div name=\\\"jdbcSpecificFieldsContainer\\\"></div>\\n    <label title=\\\"{{- i18n['resource.analysisConnection.url']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint2']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}}:</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n</fieldset>\";","export default \"<label class=\\\"control input text\\\" title=\\\"{{- title}}\\\" style=\\\"display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;\\\">\\n    <js-templateNonce></js-templateNonce>\\n    <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.region']}} ({{- i18n[\\\"required.field\\\"] }}):</span>\\n    <select class=\\\"fnormal\\\" name=\\\"awsRegion\\\">\\n        {{ _.each(awsRegions, function(region) { }}\\n        <option value=\\\"{{- region }}\\\" {{ if (region === value) { }}selected=\\\"selected\\\"{{ } }} >{{- i18n[region] || region }}</option>\\n        {{ }); }}\\n    </select>\\n    <span class=\\\"message warning\\\"></span>\\n</label>\\n\";","export default \"<js-templateNonce></js-templateNonce>\\n<button class=\\\"button action\\\" type=\\\"button\\\" name=\\\"oathPrivateKeyBrowserButton\\\">\\n    <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...</span>\\n    <span class=\\\"icon\\\"></span>\\n</button>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport connectionTypes from '../enum/connectionTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.JNDI_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            jndiName: '',\n            timezone: '',\n            connectionType: connectionTypes.JNDI\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            jndiName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.jndiName']\n            }]\n        });\n        return validation;\n    }()\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport JndiDataSourceModel from '../model/JndiDataSourceModel';\nimport jndiSpecificTemplate from '../template/jndiSpecificTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jndi.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jndi.page.title.edit',\n    modelConstructor: JndiDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderJndiSpecificSection();\n        this.renderTimezoneSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderJndiSpecificSection: function () {\n        this.$el.append(_.template(jndiSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset class=\\\"group mediumFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend class=\\\"offLeft\\\"><span>{{- i18n['resource.dataSource.accessProp']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.driver']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jndi.serviceName']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.jndiName }}\\\" name=\\\"jndiName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jndi.hint1']}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Dima Gorbenko\n * @version: $Id$\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport JdbcDataSourceModel from './JdbcDataSourceModel';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport dataSourcePatterns from '../../settings/dataSourcePatterns.settings';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\nimport settingsUtility from '../util/settingsUtility';\nimport XRegExp from 'xregexp';\n\nvar AwsDataSourceModel = JdbcDataSourceModel.extend({\n    otherDriverIsPresent: false,\n    type: repositoryResourceTypes.AWS_DATA_SOURCE,\n\n    defaults: (function (){\n        var defaults = {};\n\n        _.extend(defaults, JdbcDataSourceModel.prototype.defaults, {\n            dbName: \"\",\n            dbInstanceIdentifier: \"\",\n            dbService: \"\",\n            accessKey: \"\",\n            secretKey: \"\",\n            roleArn: \"\",\n            region: \"\",\n            credentialsType: \"\",\n            connectionType: connectionTypes.AWS\n        });\n\n        return defaults;\n    })(),\n\n    validation: (function() {\n        var validation = {};\n\n        _.extend(validation, {\n            connectionUrl: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.connectionUrl\"]\n                },\n                {\n                    xRegExpPattern: XRegExp(dataSourcePatterns.forbidWhitespacesPattern),\n                    msg: i18n[\"ReportDataSourceValidator.error.invalid.chars.reportDataSource.connectionUrl\"]\n                }\n            ],\n            username: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.username\"]\n                }\n            ],\n            driverClass: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.driverClass\"]\n                },\n                {\n                    xRegExpPattern: XRegExp(dataSourcePatterns.forbidWhitespacesPattern),\n                    msg: i18n[\"ReportDataSourceValidator.error.invalid.chars.reportDataSource.driverClass\"]\n                },\n                {\n                    fn: function(value, attr, computedState) {\n                        var contains = new RegExp(dataSourcePatterns.attributePlaceholderPattern).test(value);\n\n                        if (!contains) {\n                            var driver = this.drivers.getDriverByClass(value);\n\n                            if (!driver || !driver.get(\"available\")) {\n                                return i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.driverNotInstalled'];\n                            }\n                        }\n                    }\n                }\n            ],\n            dbName: [\n                {\n                    required: true,\n                    msg: i18n[\"ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty\"]\n                }\n            ],\n            region: [\n                {\n                    required: true\n                }\n            ],\n            accessKey: [\n                {\n                    fn: function(value, attr, computedState) {\n                        if (computedState.credentialsType === AwsDataSourceModel.credentialsType.AWS && (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && value === ''))) {\n                            return i18n[\"fillParameters.error.mandatoryField\"];\n                        }\n                    }\n                }\n            ],\n            secretKey: [\n                {\n                    fn: function(value, attr, computedState) {\n                        if (computedState.credentialsType === AwsDataSourceModel.credentialsType.AWS && (_.isNull(value) || _.isUndefined(value) || (_.isString(value) && value === ''))) {\n                            return i18n[\"fillParameters.error.mandatoryField\"];\n                        }\n                    }\n                }\n            ]\n        });\n\n        return validation;\n    })(),\n\n    initialize: function(attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        var deepDefaults = settingsUtility.deepDefaults(options, {\n            awsSettings: awsSettings\n        });\n        if (this.isNew()) {\n            this.set(\"region\", _.first(deepDefaults.awsSettings.awsRegions));\n        } else {\n            // use password substitution\n            this.set(\"password\", jasperserverConfig[\"input.password.substitution\"]);\n            this.set(\"secretKey\", jasperserverConfig[\"input.password.substitution\"]);\n        }\n        this.set(\"credentialsType\", !deepDefaults.awsSettings.isEc2Instance || deepDefaults.awsSettings.suppressEc2CredentialsWarnings || this.get(\"accessKey\") !== \"\"\n            ? AwsDataSourceModel.credentialsType.AWS\n            : AwsDataSourceModel.credentialsType.EC2);\n\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.drivers.fetch({reset: true}).done(function(){\n            self.initialization.resolve();\n        });\n\n        this.on(\"change:dbName change:dbPort change:dbHost change:sName change:connectionUrlTemplate\", this.updateConnectionUrl);\n        this.on(\"change:credentialsType\", this.changeCredentialsType);\n    },\n\n    updateConnectionUrl: function() {\n        if (!this.get(\"connectionUrlTemplate\")) {\n            return;\n        }\n\n        var valuesMap = this.pick([\"dbName\", \"dbPort\", \"dbHost\", \"sName\"]);\n        if(!valuesMap.sName){\n            // some JDBC URL templates use sName instead of dbName.\n            valuesMap.sName = valuesMap.dbName;\n        }\n        var connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(\n            this.get(\"connectionUrlTemplate\"), valuesMap);\n\n        this.set(\"connectionUrl\", connectionUrl);\n    },\n\n    changeCredentialsType: function() {\n        var ec2CredentialsSelected = this.get(\"credentialsType\") === AwsDataSourceModel.credentialsType.EC2;\n\n        if (ec2CredentialsSelected) {\n            this.set({\n                accessKey: \"\",\n                secretKey: \"\",\n                roleArn: \"\"\n            });\n        }\n    },\n\n    toJSON: function() {\n        var data = JdbcDataSourceModel.prototype.toJSON.apply(this, arguments);\n\n        if (this.options.isEditMode && data.secretKey === jasperserverConfig[\"input.password.substitution\"]) {\n            data.secretKey = null;\n        }\n\n        return data;\n    },\n\n    getFullDbTreePath: function() {\n        return this.get(\"dbInstanceIdentifier\") && this.get(\"dbService\")\n            ? \"/\" + this.get(\"dbService\") + \"/\" + this.get(\"dbInstanceIdentifier\")\n            : null;\n    }\n}, {\n    credentialsType: {\n        EC2: \"ec2\",\n        AWS: \"aws\"\n    }\n});\n\nexport default AwsDataSourceModel;","export default \"<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.aws.settings.title']}}</span></legend>\\n\\n    <ul class=\\\"list inputSet\\\">\\n        <li class=\\\"leaf\\\">\\n            <div class=\\\"control radio\\\">\\n                <label title=\\\"{{- i18n['resource.dataSource.aws.option.useDefault.title']}}\\\" class=\\\"wrap\\\">\\n                    {{- i18n['resource.dataSource.aws.option.useDefault']}}\\n                </label>\\n                <input type=\\\"radio\\\" value=\\\"{{- credentialsType.EC2 }}\\\" name=\\\"credentialsType\\\" {{ if(modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}checked{{ } }} {{ if (disableAwsDefaults) { }}disabled=\\\"disabled\\\"{{ } }}>\\n            </div>\\n        </li>\\n        <li class=\\\"leaf\\\">\\n            <div class=\\\"control radio\\\">\\n                <label title=\\\"{{- i18n['resource.dataSource.aws.option.userDefined.title']}}\\\" class=\\\"wrap\\\">\\n                   {{= i18n['resource.dataSource.aws.option.userDefined'].replace('{0}',i18n['resource.dataSource.aws.option.url']) }}\\n                </label>\\n                <input type=\\\"radio\\\" value=\\\"{{- credentialsType.AWS }}\\\" name=\\\"credentialsType\\\" {{ if(modelAttributes.credentialsType === credentialsType.AWS ) { }}checked{{ } }}>\\n            </div>\\n        </li>\\n    </ul>\\n\\n    <fieldset class=\\\"group shortFields\\\" id=\\\"aws_settings\\\" {{ if (modelAttributes.credentialsType === credentialsType.EC2 && !disableAwsDefaults) { }}style=\\\"display: none;\\\"{{ } }}>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.accessKey.title']}}\\\" class=\\\"control input text \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.accessKey']}}:</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.accessKey }}\\\" name=\\\"accessKey\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.secretKey.title']}}\\\" class=\\\"control input password \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.secretKey']}}:</span>\\n            <input type=\\\"password\\\" autocomplete=\\\"off\\\" value=\\\"{{- modelAttributes.secretKey }}\\\" name=\\\"secretKey\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.aws.setting.arn.title']}}\\\" class=\\\"control input text \\\">\\n            <span disabled=\\\"disabled\\\" class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.arn']}}:</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.roleArn }}\\\" name=\\\"roleArn\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.aws.optional.arn']}}</span>\\n        </label>\\n\\n    </fieldset>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.aws.tree']}}</span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.aws.setting.region.title']}}\\\" class=\\\"control select \\\" style=\\\"display: inline-block; margin-right: 6px; margin-top: 6px; width: 350px;\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.setting.region']}}:</span>\\n        <select class=\\\"fnormal\\\" name=\\\"region\\\">\\n            {{ _.each(awsRegions, function(region) { }}\\n            <option value=\\\"{{- region }}\\\" {{ if (region === modelAttributes.region) { }}selected=\\\"selected\\\"{{ } }}>{{- i18n[region] || region }}</option>\\n            {{ }); }}\\n        </select>\\n        <span class=\\\"message warning\\\"></span>\\n    </label>\\n\\n    <button class=\\\"button action\\\" id=\\\"findAwsDataSources\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.updateTree']}}<span class=\\\"icon\\\"></span></span>\\n    </button>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <div class=\\\"control groupBox\\\" style=\\\"height: 150px; margin: 0; width: 538px;\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\" style=\\\"height: 137px; overflow: auto; padding: 6px;\\\">\\n                <ul class=\\\"list collapsible folders hideRoot\\\" id=\\\"awsDataSourceTree\\\" style=\\\"position: relative; height: 137px; overflow: auto; padding: 6px;\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group shortFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.aws.database.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.aws.database.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.dbName }}\\\" name=\\\"dbName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group mediumFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.driver']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.driver']}} ({{- i18n['required.field']}}):</span>\\n        <input class=\\\"control inline\\\" type=\\\"text\\\" value=\\\"{{- modelAttributes.driverClass }}\\\" name=\\\"driverClass\\\">\\n        {{ if (driverUploadEnabled) { }}\\n        <button class=\\\"button action up\\\" id=\\\"driverUploadButton\\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.upload.addDriverButton']}}</span>\\n        </button>\\n        {{ } }}\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint1']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.requiredURL']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.jdbc.hint2']}}</span>\\n    </label>\\n\\n</fieldset>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport AlertDialog from 'js-sdk/src/common/component/dialog/AlertDialog';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport AwsDataSourceModel from '../model/AwsDataSourceModel';\nimport UploadJdbcDriverDialog from '../view/dialog/UploadJdbcDriverDialog';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport buttonManager from '../../core/core.events.bis';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport awsSpecificTemplate from '../template/awsSpecificTemplate.htm';\nimport awsSettings from '../../settings/awsSettings.settings';\nimport settingsUtility from '../util/settingsUtility';\n\nexport default JdbcDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.aws.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.aws.page.title.edit',\n    modelConstructor: AwsDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, JdbcDataSourceView.prototype.events);\n        events['change input[name=\\'credentialsType\\']'] = 'changeCredentialsType';\n        events['click #findAwsDataSources'] = 'refreshAwsDataSourceTree';\n        return events;\n    },\n    initialize: function (options) {\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });\n        this.listenTo(this.model, 'change:credentialsType', this.onCredentialsTypeChange);\n        this.listenTo(this.model, 'change:driverClass', this.changeUploadDriverButtonState);\n        this.listenTo(this.model, 'change', this.updateInput);\n        this.listenTo(this.model.drivers, 'change add', this.recheckDriver);\n    },\n    changeCredentialsType: function () {\n        var value = this.$('input[name=\\'credentialsType\\']:checked').val();\n        this.model.set('credentialsType', value);\n    },\n    recheckDriver: function () {\n        this.model.validate({ driverClass: this.model.get('driverClass') });\n        this.changeUploadDriverButtonState();\n    },\n    changeUploadDriverButtonState: function () {\n        var $driverUploadButton = this.$('#driverUploadButton');\n        if (this.model.get('driverClass') === '') {\n            buttonManager.disable($driverUploadButton[0]);\n        } else {\n            buttonManager.enable($driverUploadButton[0]);\n            var driver = this.model.drivers.getDriverByClass(this.model.get('driverClass'));\n            $driverUploadButton.find('.wrap').text(i18n[!driver || !driver.get('available') ? 'resource.dataSource.jdbc.upload.addDriverButton' : 'resource.dataSource.jdbc.upload.editDriverButton']);\n        }\n    },\n    initDriverUploadDialog: function () {\n        var self = this, driver = this.model.drivers.getDriverByClass(this.model.get('driverClass'));\n        this.driverUploadDialog = new UploadJdbcDriverDialog({\n            driverAvailable: !(!driver || !driver.get('available')),\n            driverClass: this.model.get('driverClass')\n        });\n        this.driverUploadDialog.on('driverUpload', function (availableDriver) {\n            self.model.drivers.markDriverAsAvailable(availableDriver.jdbcDriverClass);\n            _.defer(_.bind(self.model.validate, self.model));\n        });\n    },\n    updateInput: function () {\n        var changedAttributes = _.keys(this.model.changedAttributes()), inputsToUpdate = [\n                'accessKey',\n                'secretKey',\n                'roleArn',\n                'connectionUrl',\n                'driverClass',\n                'dbName'\n            ], self = this;\n        _.each(_.intersection(changedAttributes, inputsToUpdate), function (attr) {\n            var newValue = self.model.get(attr), currValue = self.$('[name=\\'' + attr + '\\']').val();\n            if (currValue !== newValue) {\n                self.$('[name=\\'' + attr + '\\']').val(newValue);\n            }\n        });\n    },\n    onCredentialsTypeChange: function () {\n        var ec2CredentialsSelected = this.model.get('credentialsType') === AwsDataSourceModel.credentialsType.EC2;\n        this.$('#aws_settings')[ec2CredentialsSelected ? 'hide' : 'show']();\n        if (ec2CredentialsSelected) {\n            this.showAwsDsTree(this.model.getFullDbTreePath());\n        }\n    },\n    refreshAwsDataSourceTree: function (e) {\n        e.preventDefault();\n        this.showAwsDsTree('/');\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderTimezoneSection();\n        this.renderAwsSpecificSection();\n        this.renderTestConnectionSection();\n        this.initDataSourceTree();    // Do not try to load AWS Tree if we are creating DS in non-AWS environment without properly set credentials\n        // Do not try to load AWS Tree if we are creating DS in non-AWS environment without properly set credentials\n        if (this.options.isEditMode || this.model.get('credentialsType') === AwsDataSourceModel.credentialsType.EC2) {\n            this.showAwsDsTree(this.model.getFullDbTreePath());\n        }\n        return this;\n    },\n    showAwsDsTree: function (path) {\n        this.model.validate({\n            accessKey: this.model.get('accessKey'),\n            secretKey: this.model.get('secretKey')\n        });\n        if (this.model.isValid('secretKey') && this.model.isValid('accessKey')) {\n            this.awsDataSourceTree.showTreePrefetchNodes(path || '/');\n        }\n    },\n    templateData: function () {\n        var data = JdbcDataSourceView.prototype.templateData.apply(this, arguments);\n        _.extend(data, {\n            credentialsType: AwsDataSourceModel.credentialsType,\n            awsRegions: this.deepDefaults.awsSettings.awsRegions,\n            disableAwsDefaults: !(this.deepDefaults.awsSettings.isEc2Instance && this.deepDefaults.awsSettings.hasSecurityCredentials) || this.deepDefaults.awsSettings.suppressEc2CredentialsWarnings\n        });\n        return data;\n    },\n    renderAwsSpecificSection: function () {\n        this.$el.append(_.template(awsSpecificTemplate, this.templateData()));\n        this.changeUploadDriverButtonState();\n    },\n    initDataSourceTree: function () {\n        var isEdit = this.options.isEditMode, self = this, treeOptions = {\n            hideLoader: true,\n            bShowRoot: false,\n            treeId: 'awsDataSourceTree',\n            providerId: 'awsDataSourceTreeDataProvider',\n            selectLeavesOnly: true,\n            additionalParams: function () {\n                return {\n                    arn: self.model.get('roleArn'),\n                    awsAccessKey: self.model.get('accessKey'),\n                    awsSecretKey: self.model.get('secretKey'),\n                    region: self.model.get('region'),\n                    datasourceUri: self.model.get('uri')\n                };\n            }\n        };\n        this.awsDataSourceTree = dynamicTree.createRepositoryTree('awsDataSourceTree', treeOptions);\n        this.awsDataSourceTree.httpErrorHandler = function (ajaxAgent) {\n            // some requests came with 500 error code, some with 200, so let's just check error test\n            var alertDialog, error = false, customTitle=false;\n            if (ajaxAgent.responseText.indexOf('AWS Access Key is invalid') !== -1 || ajaxAgent.responseText.indexOf('The security token included in the request is invalid') !== -1) {\n                error = i18n['error.aws.key.is.invalid'];\n            }\n            if (error === false && (ajaxAgent.responseText.indexOf('AWS Secret Key is invalid') !== -1 || ajaxAgent.responseText.indexOf('The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method') !== -1)) {\n                error = i18n['error.aws.secret.key.is.invalid'];\n            }\n            if (error === false && ajaxAgent.responseText.indexOf('is not authorized to perform') !== -1) {\n                error = i18n['error.aws.arn.is.invalid'];\n            }\n            if (error === false && ajaxAgent.responseText.indexOf('The security token included in the request is invalid') !== -1) {\n                error = i18n['error.security.token.is.invalid'];\n            }\n\n            if (error === false && ajaxAgent.responseText.indexOf('action execution attributes') !== -1) {\n                error = i18n['error.aws.ec2.credentials.unavailable'];\n                customTitle=true;\n            }\n\n            if (error) {\n                if(customTitle){\n                    alertDialog = new AlertDialog({\n                        modal: true,\n                        title: i18n['error.aws.ec2.title']\n                    });\n                } else {\n                    alertDialog = new AlertDialog({\n                        modal: true\n                    });\n                }\n                alertDialog.setMessage(error);\n                alertDialog.open(); // return 'true' means don't let the parent's handler to handle this error\n                // return 'true' means don't let the parent's handler to handle this error\n                return true;\n            }\n            return false;\n        };    // Initialize tree events: auto-fill connection setting from tree leaf\n        // Initialize tree events: auto-fill connection setting from tree leaf\n        this.awsDataSourceTree.observe('leaf:selected', function (ev) {\n            var node = ev.memo.node.param;\n            if (node.type === 'awsDb' && !isEdit) {\n                var extra = node.extra, uriComponents = extra.dbUri.split('/');\n                self.model.set({\n                    connectionUrlTemplate: extra.jdbcTemplate,\n                    driverClass: extra.jdbcDriverClass,\n                    dbName: extra.dBName,\n                    dbHost: extra.dnsAddress,\n                    dbPort: extra.dbPort,\n                    sName: extra.dBName,\n                    dbService: uriComponents[1],\n                    dbInstanceIdentifier: uriComponents[2]\n                });\n                self.model.validate({ driverClass: self.model.get('driverClass') });\n            }\n        });\n        this.awsDataSourceTree.observe('tree:loaded', function () {\n            if (self.model.getFullDbTreePath()) {\n                self.awsDataSourceTree.openAndSelectNode(self.model.getFullDbTreePath(), function () {\n                    isEdit = false;\n                });\n            }\n        });\n    },\n    remove: function () {\n        this.awsDataSourceTree && this.awsDataSourceTree.stopObserving();\n        JdbcDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport JdbcDataSourceModel from './JdbcDataSourceModel';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport JdbcDriverCollection from '../collection/JdbcDriverCollection';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jasperserverConfig from '../../i18n/jasperserver_config.properties';\n\nvar AzureSqlDataSourceModel = JdbcDataSourceModel.extend({\n    otherDriverIsPresent: false,\n    type: repositoryResourceTypes.AZURE_SQL_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, JdbcDataSourceModel.prototype.defaults, {\n            subscriptionId: '',\n            keyStorePassword: '',\n            keyStoreUri: '',\n            serverName: '',\n            dbName: '',\n            selectedDriverClass: '',\n            useMicrosoftDriver: false,\n            microsoftDriverAvailable: false,\n            connectionType: connectionTypes.AZURE_SQL\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, JdbcDataSourceModel.prototype.validation, {\n            subscriptionId: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.subscriptionId']\n            }],\n            keyStorePassword: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.keyStorePassword']\n            }],\n            keyStoreUri: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.keyStoreUri']\n            }],\n            serverName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.azureSqlDataSource.serverName']\n            }],\n            dbName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.dbNameIsEmpty']\n            }],\n            username: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.username']\n            }]\n        });\n        return validation;\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        if (!this.isNew()) {\n            // use password substitution\n            this.set('password', jasperserverConfig['input.password.substitution']);\n            this.set('keyStorePassword', jasperserverConfig['input.password.substitution']);\n        }\n        this.initialization = $.Deferred();\n        this.drivers = new JdbcDriverCollection([], this.options);\n        var self = this;\n        this.drivers.fetch({ reset: true }).done(function () {\n            if (self.isNew()) {\n                // by default use sqlserver driver (tibco/progress driver)\n                self.set('selectedDriverClass', self.drivers.getDriverByName('sqlserver').get('jdbcDriverClass'));\n            } else {\n                self.set('selectedDriverClass', self.get('driverClass'));\n            }\n            var sqlServerStandardDriver = self.drivers.getDriverByName('sqlserver_standard');\n            if (sqlServerStandardDriver != null) {\n                self.set('microsoftDriverAvailable', sqlServerStandardDriver.get('available'));\n                self.set('useMicrosoftDriver', self.get('selectedDriverClass') === sqlServerStandardDriver.get('jdbcDriverClass'));\n            }\n            self.initialization.resolve();\n        });\n        this.on('change:dbName change:serverName change:connectionUrlTemplate change:useMicrosoftDriver', this.updateConnectionUrl);\n        this.on('change:useMicrosoftDriver', this.updateDriverClass);\n    },\n    updateConnectionUrl: function () {\n        if (!this.get('connectionUrlTemplate')) {\n            return;\n        }\n        var valuesMap = this.pick([\n            'dbName',\n            'serverName',\n            'dbPort'\n        ]);\n        valuesMap['dbPort'] = 1433;\n        var sqlServerStandardDriver = this.drivers.getDriverByName('sqlserver_standard');\n        var template = this.get('connectionUrlTemplate');\n        if (this.get('useMicrosoftDriver') && sqlServerStandardDriver != null) {\n            valuesMap['serverName'] += '.database.windows.net';\n            template = sqlServerStandardDriver.get('jdbcUrl');\n        }    // dbHost is a synonym for serverName\n        // dbHost is a synonym for serverName\n        valuesMap['dbHost'] = valuesMap['serverName'];\n        var connectionUrl = this.replaceConnectionUrlTemplatePlaceholdersWithValues(template, valuesMap);\n        this.set('connectionUrl', connectionUrl);\n    },\n    updateDriverClass: function () {\n        var sqlServerStandardDriver = this.drivers.getDriverByName('sqlserver_standard');\n        var driverName = this.get('useMicrosoftDriver') && sqlServerStandardDriver != null ? 'sqlserver_standard' : 'sqlserver';\n        var driverClassName = this.drivers.getDriverByName(driverName).get('jdbcDriverClass');\n        this.set('selectedDriverClass', driverClassName);\n        this.set('driverClass', driverClassName);\n    },\n    toJSON: function () {\n        var data = JdbcDataSourceModel.prototype.toJSON.apply(this, arguments);\n        if (this.options.isEditMode && data.keyStorePassword === jasperserverConfig['input.password.substitution']) {\n            data.keyStorePassword = null;\n        }\n        return data;\n    },\n    getFullDbTreePath: function () {\n        return this.get('serverName') && this.get('dbName') ? '/' + this.get('serverName') + '/' + this.get('dbName') : null;\n    }\n});\nexport default AzureSqlDataSourceModel;","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend><span>{{- i18n['resource.dataSource.azureSql.settings.title']}}</span></legend>\\n\\n    <fieldset class=\\\"group shortFields\\\" id=\\\"aws_settings\\\">\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.subscriptionId.title']}}\\\" class=\\\"control input text \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.subscriptionId']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.subscriptionId }}\\\" name=\\\"subscriptionId\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.keyStoreUri.title']}}\\\" class=\\\"control input text\\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.keyStoreUri']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"text\\\" value=\\\"{{- modelAttributes.keyStoreUri }}\\\" name=\\\"keyStoreUri\\\">\\n            <button class=\\\"button action\\\" type=\\\"button\\\" name=\\\"repositoryBrowserButton\\\">\\n                <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...<span class=\\\"icon\\\"></span></span>\\n            </button>\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.optional.keyStoreUri']}}</span>\\n        </label>\\n\\n        <label title=\\\"{{- i18n['resource.dataSource.azureSql.setting.keyStorePassword.title']}}\\\" class=\\\"control input password \\\">\\n            <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.setting.keyStorePassword']}} ({{- i18n['required.field']}}):</span>\\n            <input type=\\\"password\\\" autocomplete=\\\"off\\\" value=\\\"{{- modelAttributes.keyStorePassword }}\\\" name=\\\"keyStorePassword\\\">\\n            <span class=\\\"message warning\\\"></span>\\n            <span class=\\\"message hint\\\"></span>\\n        </label>\\n\\n    </fieldset>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <legend><span>{{- i18n['resource.dataSource.azureSql.tree']}}</span></legend>\\n\\n    <button class=\\\"button action\\\" id=\\\"updateDatabaseTree\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.updateTree']}}<span class=\\\"icon\\\"></span></span>\\n    </button>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group\\\">\\n\\n    <div class=\\\"control groupBox\\\" style=\\\"height: 150px; margin: 0; width: 538px;\\\">\\n        <div class=\\\"content\\\">\\n            <div class=\\\"header\\\">\\n                <div class=\\\"title\\\"></div>\\n            </div>\\n            <div class=\\\"body\\\" style=\\\"height: 137px; overflow: auto; padding: 6px;\\\">\\n                <ul class=\\\"list collapsible folders hideRoot\\\" id=\\\"azureSqlDataSourceTree\\\" style=\\\"position: relative; height: 137px; overflow: auto; padding: 6px;\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group shortFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.server.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.server.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverName }}\\\" name=\\\"serverName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.database.name.title']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.database.name']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.dbName }}\\\" name=\\\"dbName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.username']}}\\\" class=\\\"control input text \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.username']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.database.username.hint']}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.jdbc.password']}}\\\" class=\\\"control input password \\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.password']}}:</span>\\n        <input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\"></span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.azureSql.useMicrosoftDriver']}}\\\" class=\\\"control input checkBox\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.azureSql.useMicrosoftDriver']}}\\n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}\\n                ({{- i18n[\\\"resource.dataSource.azureSql.microsoftDriverMissing\\\"] }})\\n            {{ } }}\\n            </span>\\n        <input type=\\\"checkbox\\\" name=\\\"useMicrosoftDriver\\\" value=\\\"{{- modelAttributes.useMicrosoftDriver }}\\\"\\n            {{ if (modelAttributes.useMicrosoftDriver) { }}checked=\\\"checked\\\"{{ } }} \\n            {{ if (!modelAttributes.microsoftDriverAvailable) { }}disabled=\\\"disabled\\\"{{ } }}>\\n    </label>\\n\\n\\n</fieldset>\\n\\n<fieldset class=\\\"group mediumFields\\\">\\n\\n    <label title=\\\"{{- i18n['resource.analysisConnection.requiredURL']}}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n['resource.dataSource.jdbc.url']}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionUrl }}\\\" name=\\\"connectionUrl\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n['resource.dataSource.azureSql.connectionUrl.hint']}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport AlertDialog from 'js-sdk/src/common/component/dialog/AlertDialog';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport AzureSqlDataSourceModel from '../model/AzureSqlDataSourceModel';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport jsExceptionsMessages from '../../i18n/jsexceptions_messages.properties';\nimport azureSqlSpecificTemplate from '../template/azureSqlSpecificTemplate.htm';\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport resourceLocator from '../../resource/resource.locate';\n\nexport default JdbcDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.aws.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.aws.page.title.edit',\n    modelConstructor: AzureSqlDataSourceModel,\n    events: function () {\n        var events = {};\n        _.extend(events, JdbcDataSourceView.prototype.events);\n        events['click #updateDatabaseTree'] = 'updateDatabaseTree';\n        return events;\n    },\n    initialize: function (options) {\n        JdbcDataSourceView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change', this.onModelChange);\n    },\n    onModelChange: function () {\n        var changedAttributes = _.keys(this.model.changedAttributes()), inputsToUpdate = [\n                'serverName',\n                'dbName',\n                'connectionUrl'\n            ], self = this;\n        _.each(_.intersection(changedAttributes, inputsToUpdate), function (attr) {\n            self.$('[name=\\'' + attr + '\\']').val(self.model.get(attr));\n        });\n    },\n    updateDatabaseTree: function (e) {\n        e.preventDefault();\n        this.showAzureSqlDsTree('/');\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderTimezoneSection();\n        this.renderAzureSqlSpecificSection();\n        this.renderTestConnectionSection();\n        this.initDataSourceTree();    // Do not try to load Azure SQL DB Tree if we are creating a new DS\n        // Do not try to load Azure SQL DB Tree if we are creating a new DS\n        if (this.options.isEditMode) {\n            this.showAzureSqlDsTree(this.model.getFullDbTreePath());\n        }\n        return this;\n    },\n    showAzureSqlDsTree: function (path) {\n        this.model.validate({\n            subscriptionId: this.model.get('subscriptionId'),\n            keyStorePassword: this.model.get('keyStorePassword'),\n            keyStoreUri: this.model.get('keyStoreUri')\n        });\n        if (this.model.isValid('keyStorePassword') && this.model.isValid('subscriptionId')) {\n            this.azureSqlDataSourceTree.showTreePrefetchNodes(path || '/');\n        }\n    },\n    renderAzureSqlSpecificSection: function () {\n        this.$el.append(_.template(azureSqlSpecificTemplate, this.templateData()));\n        this.browseButton = resourceLocator.initialize({\n            i18n: i18n,\n            template: selectDialogTemplate,\n            resourceInput: this.$el.find('[name=keyStoreUri]')[0],\n            browseButton: this.$el.find('[name=repositoryBrowserButton]')[0],\n            providerId: 'fileResourceBaseTreeDataProvider',\n            dialogTitle: i18n['resource.Add.Files.Title'],\n            selectLeavesOnly: true,\n            onChange: _.bind(function (value) {\n                this.model.set('keyStoreUri', value);\n                this.model.validate({ 'keyStoreUri': value });\n            }, this)\n        });\n    },\n    initDataSourceTree: function () {\n        var isEdit = this.options.isEditMode, self = this, treeOptions = {\n            hideLoader: true,\n            bShowRoot: false,\n            treeId: 'azureSqlDataSourceTree',\n            providerId: 'azureSqlDataSourceTreeDataProvider',\n            selectLeavesOnly: true,\n            additionalParams: function () {\n                return {\n                    subscriptionId: self.model.get('subscriptionId'),\n                    keyStorePassword: self.model.get('keyStorePassword'),\n                    keyStoreUri: self.model.get('keyStoreUri'),\n                    datasourceUri: self.model.get('uri')\n                };\n            }\n        };\n        this.azureSqlDataSourceTree = dynamicTree.createRepositoryTree('azureSqlDataSourceTree', treeOptions);\n        this.azureSqlDataSourceTree.httpErrorHandler = function (ajaxAgent) {\n            // some requests came with 500 error code, some with 200, so let's just check error test\n            var alertDialog, error = false;\n            var messageCodes = [\n                'azure.exception.datasource.recovery.public.ip.not.provided',\n                'azure.exception.datasource.recovery.firewall.rule.name.not.provided',\n                'azure.exception.datasource.recovery.server.name.not.provided',\n                'azure.exception.datasource.recovery.subscription.id.not.provided',\n                'azure.exception.datasource.recovery.key.store.file.not.provided',\n                'azure.exception.datasource.recovery.key.store.type.not.provided',\n                'azure.exception.datasource.key.error',\n                'azure.exception.datasource.auth.error',\n                'azure.exception.datasource.cannot.retrieve.database.list',\n                'azure.exception.datasource.cannot.ensure.firewall.rule',\n                'azure.exception.datasource.cannot.recover.datasource'\n            ];\n            var i;\n            for (i = 0; i < messageCodes.length; i++) {\n                var messageCode = messageCodes[i];\n                if (ajaxAgent.responseText.indexOf(messageCode) !== -1) {\n                    error = jsExceptionsMessages[messageCode];\n                    break;\n                }\n            }\n            if (error) {\n                alertDialog = new AlertDialog({ modal: true });\n                alertDialog.setMessage(error);\n                alertDialog.open();    // return 'true' means don't let the parent's handler to handle this error\n                // return 'true' means don't let the parent's handler to handle this error\n                return true;\n            }\n            return false;\n        };    // Initialize tree events: auto-fill connection setting from tree leaf\n        // Initialize tree events: auto-fill connection setting from tree leaf\n        this.azureSqlDataSourceTree.observe('leaf:selected', function (ev) {\n            var node = ev.memo.node.param;\n            if (node.type === 'leaf' && !isEdit) {\n                var extra = node.extra;\n                self.model.set({\n                    serverName: extra.serverName,\n                    dbName: extra.dBName,\n                    connectionUrlTemplate: extra.jdbcTemplate,\n                    driverClass: extra.jdbcDriver\n                });\n            }\n        });\n        this.azureSqlDataSourceTree.observe('tree:loaded', function () {\n            if (self.model.getFullDbTreePath()) {\n                self.azureSqlDataSourceTree.openAndSelectNode(self.model.getFullDbTreePath(), function () {\n                    isEdit = false;\n                    var selectedNode = self.azureSqlDataSourceTree.getSelectedNode();\n                    if (selectedNode && selectedNode.param && selectedNode.param.extra) {\n                        // add required fields to a model from selected node.\n                        // it's required for JDBC URL auto update\n                        self.model.set({\n                            connectionUrlTemplate: selectedNode.param.extra.jdbcTemplate,\n                            dbHost: selectedNode.param.extra.dnsAddress,\n                            dbPort: selectedNode.param.extra.dbPort\n                        });\n                    }\n                });\n            }\n        });\n    },\n    remove: function () {\n        this.azureSqlDataSourceTree && this.azureSqlDataSourceTree.stopObserving();\n        JdbcDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default Backbone.Model.extend({\n    defaults: {\n        id: undefined,\n        uri: '',\n        name: '',\n        readOnly: false\n    },\n    idAttribute: 'uri',\n    validation: {\n        id: [\n            {\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.name']\n            },\n            {\n                maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                msg: i18n['ReportDataSourceValidator.error.too.long.reportDataSource.name']\n            },\n            {\n                startsWithLetter: true,\n                msg: i18n['ReportDataSourceValidator.error.invalid.chars.shouldStartWithLetter']\n            },\n            {\n                containsOnlyWordCharacters: true,\n                msg: i18n['ReportDataSourceValidator.error.invalid.chars.wordCharsOnly']\n            }\n        ]\n    },\n    initialize: function (attributes) {\n        this.set('name', /.*\\/(.+)$/.exec(attributes.uri)[1]);\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport SubDataSourceModel from '../model/SubDataSourceModel';\n\nexport default Backbone.Collection.extend({\n    model: SubDataSourceModel,\n    hasNonReadOnlyItems: function () {\n        return this.some(function (model) {\n            return !model.get('readOnly');\n        });\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport SubDataSourceCollection from '../collection/SubDataSourceCollection';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.VIRTUAL_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, { subDataSources: [] });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            subDataSources: [\n                {\n                    arrayMinLength: 1,\n                    msg: i18n['ReportDataSourceValidator.error.sub.datasources.needed']\n                },\n                {\n                    fn: function (value, attr, computedState) {\n                        var subDataSourceIds = _.map(value, function (subDataSource) {\n                                return subDataSource.id.toLowerCase();\n                            }), countMap = {}, duplicateIds = [];\n                        _.each(subDataSourceIds, function (id) {\n                            if (id in countMap) {\n                                countMap[id]++;\n                            } else {\n                                countMap[id] = 1;\n                            }\n                        });\n                        for (var id in countMap) {\n                            if (countMap[id] > 1) {\n                                duplicateIds.push(id);\n                            }\n                        }\n                        if (duplicateIds.length > 0) {\n                            return i18n['ReportDataSourceValidator.error.sub.datasources.id.duplicates'].replace('{0}', duplicateIds.join(', '));\n                        }\n                    }\n                },\n                {\n                    fn: function () {\n                        var res = null;\n                        for (var i = 0; i < this.subDataSources.models.length; i++) {\n                            if (!this.subDataSources.models[i].isValid(true)) {\n                                res = true;\n                            }\n                        }\n                        return res;\n                    }\n                }\n            ]\n        });\n        return validation;\n    }(),\n    initialize: function (attributes, options) {\n        BaseDataSourceModel.prototype.initialize.apply(this, arguments);\n        this.subDataSources = new SubDataSourceCollection(this.get('subDataSources'));\n        this.listenTo(this.subDataSources, 'change reset', this.updateSubDataSourcesArray);\n        if (options.dependentResources && options.dependentResources.length > 0) {\n            this.subDataSources.forEach(function (model) {\n                model.set('readOnly', true);\n            });\n        }\n    },\n    updateSubDataSourcesArray: function () {\n        this.set('subDataSources', this.subDataSources.toJSON());\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\nimport dialogs from './components.dialogs';\nimport _ from 'underscore';\nimport layoutModule from '../core/core.layout';\nimport {dynamicList} from './list.base';\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\n\ndialogs.dependentResources = {\n    dependenciesPanel: null,\n\n    show: function(resources, actionsMap, options) {\n        this.dependenciesPanel = jQuery(\"#dependencies\");\n        this._$title = this.dependenciesPanel.find(\".content .header .title\");\n        if(options.dialogTitle) {\n            this._titleBackup = this._$title.html();\n            this._$title.html(options.dialogTitle);\n        }\n        dialogs.popup.show(this.dependenciesPanel[0]);\n\n        this._changeMessage(options);\n        this._switchButtons(options);\n        var list =\n            this._initList(resources);\n\n        ///////////////////////////////////////////////////////////\n        // Observe buttons\n        //////////////////////////////////////////////////////////\n        this.dependenciesPanel.on(\"click\", function(event){\n            var buttonId = jQuery(event.target).closest('button').attr('id');\n            var action = actionsMap && actionsMap[buttonId];\n            if (_.include([\"dependenciesBtnSave\", \"dependenciesBtnSaveAs\", \"dependenciesBtnOk\", \"dependenciesBtnCancel\"], buttonId)) {\n                dialogs.dependentResources.hide();\n                list.setItems([]);\n\n                event.stopPropagation();\n\n                action && action();\n            }\n        });\n        //        designerBase.enableSelection();\n    },\n\n    hide: function () {\n        if (this.dependenciesPanel) {\n            this.dependenciesPanel.off(\"click\");\n            dialogs.popup.hide(this.dependenciesPanel[0]);\n            this.dependenciesPanel = null;\n        }\n        if (this._titleBackup && this._$title) {\n            this._$title.html(this._titleBackup);\n            this._titleBackup = null;\n        }\n    },\n\n    /**\n     * Show message\n     *\n     * @param canSave\n     * @private\n     */\n    _changeMessage: function(options) {\n        jQuery(\"#topMessage\").html(options.topMessage);\n        jQuery(\"#bottomMessage\").html(options.bottomMessage);\n    },\n\n    _initList: function(resources) {\n        var list = new dynamicList.List(\"dependenciesList\", {\n            listTemplateDomId: \"tabular_oneColumn\",\n            itemTemplateDomId: \"tabular_oneColumn:leaf\"\n        });\n\n        var items = [];\n        if(resources) {\n            items = resources.collect(function(resource) {\n                var resourceItem = new dynamicList.ListItem({\n                    cssClassName: layoutModule.LEAF_CLASS,\n                    value: resource\n                });\n\n                resourceItem.processTemplate = function(element) {\n                    var uriElement = jQuery(element).find(\".uri\");\n                    var uri;\n                    if(typeof this.getValue() == \"string\") {\n                        uri = this.getValue();\n                    } else if(this.getValue().uristring) {\n                        uri = this.getValue().uristring;\n                    } else {\n                        uri = this.getValue().URIString;\n                    }\n\n                    uriElement.html(xssUtil.hardEscape(uri));\n                    return element;\n                };\n                return resourceItem;\n            });\n        }\n\n        list.setItems(items);\n        list.show();\n\n        return list;\n    },\n\n    _switchButtons: function(options) {\n        var $buttonElements = {\n            save:  jQuery(\"#dependenciesBtnSave\"),\n            saveAs: jQuery(\"#dependenciesBtnSaveAs\"),\n            ok: jQuery(\"#dependenciesBtnOk\"),\n            cancel: jQuery(\"#dependenciesBtnCancel\")\n        };\n\n        var buttons;\n        if(options.buttons) {\n            buttons = options.buttons;\n        } else {\n            if(options.okOnly) {\n                buttons = [\"ok\"];\n            } else if (options.canSave) {\n                buttons = [\"save\", \"saveAs\", \"cancel\"];\n            } else {\n                buttons = [\"ok\", \"cancel\"];\n            }\n        }\n\n        _.each($buttonElements, function($button, key) {\n            if(buttons.indexOf(key) < 0 ) {\n                $button.addClass(\"hidden\");\n            } else {\n                $button.removeClass(\"hidden\");\n            }\n        });\n\n    }\n};\n\nexport default dialogs.dependentResources;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport $ from 'jquery';\nimport layoutModule from '../../core/core.layout';\nimport {dynamicList} from '../../components/list.base';\nimport subDataSourceItemTemplate from '../template/subDataSourceItemTemplate.htm';\nimport Validation from 'js-sdk/src/common/extension/backboneValidationExtension';\n\nexport default Backbone.View.extend({\n    events: {\n        'keyup input[type=\\'text\\']': 'updateDataSourceId',\n        'change input[type=\\'text\\']': 'updateDataSourceId'\n    },\n    initialize: function (options) {\n        var templateData = this.model.toJSON();\n        this._listItem = new dynamicList.UnderscoreTemplatedListItem({\n            template: subDataSourceItemTemplate,\n            cssClassName: layoutModule.LEAF_CLASS,\n            value: templateData,\n            tooltipText: this.model.get('uri')\n        });\n        Validation.bind(this, {\n            valid: this.fieldIsValid,\n            invalid: this.fieldIsInvalid,\n            forceUpdate: true\n        });\n    },\n    updateDataSourceId: function (e) {\n        var $targetEl = this.$('input[type=\\'text\\']'), valueObj = {};\n        valueObj['id'] = $.trim($targetEl.val());\n        this.model.set(valueObj);\n        this.model.validate(valueObj);\n        this._listItem.setValue(this.model.toJSON());\n    },\n    getListItem: function () {\n        return this._listItem;\n    },\n    setRootElement: function () {\n        this.setElement(this._listItem._getElement());\n    },\n    fieldIsValid: function (view, attr, selector) {\n        var $parentEl = view.$('input[type=\\'text\\']').parent();\n        $parentEl.removeClass('error');\n        $parentEl.find('.validatorMessageContainer').removeClass('error');\n        $parentEl.find('.message.warning').text('');\n    },\n    fieldIsInvalid: function (view, attr, error, selector) {\n        var $parentEl = view.$('input[type=\\'text\\']').parent();\n        $parentEl.addClass('error');\n        $parentEl.find('.validatorMessageContainer').addClass('error');\n        $parentEl.find('.message.warning').text(error);\n    }\n});","export default \"<li class=\\\"leaf\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"wrap button {{ if (readOnly) { }}disabled{{ } }}\\\">\\n        <div class=\\\"column one\\\">\\n            <p class=\\\"dataSourceName\\\">{{- name }}</p>\\n        </div>\\n        <div class=\\\"column two\\\">\\n            <input type=\\\"text\\\" size=\\\"30\\\" class=\\\"dataSourceID\\\" value=\\\"{{- id }}\\\" {{ if (readOnly) { }}readonly=\\\"true\\\"{{ } }}>\\n            <div class=\\\"wrap validatorMessageContainer\\\">\\n                <span class=\\\"message warning\\\"></span>\\n            </div>\\n        </div>\\n    </div>\\n</li>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport {dynamicList} from '../../components/list.base';\nimport SubDataSourceItemView from '../view/SubDataSourceItemView';\nimport featureDetection from 'js-sdk/src/common/util/featureDetection';\nimport subDataSourcesListTemplate from '../template/subDataSourcesListTemplate.htm';\nimport {disableSelectionWithoutCursorStyle, enableSelection} from '../../util/utils.common';\n\nexport default Backbone.View.extend({\n    events: {\n        'blur input.dataSourceID': 'disableSelection',\n        'focus input.dataSourceID': 'enableSelection'\n    },\n    initialize: function (options) {\n        this.options = options;\n        this.subviews = [];\n        this._list = new dynamicList.UnderscoreTemplatedList('selectedSubDataSourcesList', {\n            template: subDataSourcesListTemplate,\n            dragPattern: '',\n            multiSelect: true,\n            selectOnMousedown: !featureDetection.supportsTouch\n        });\n        this._list.observe('item:unselected', _.bind(this._itemUnselected, this));\n        this._list.observe('item:selected', _.bind(this._itemSelected, this));\n        this.setElement('#selectedSubDataSourcesList', false);\n        this.listenTo(this.collection, 'reset', this.render);\n    },\n    disableSelection: function () {\n        disableSelectionWithoutCursorStyle(this._list._getElement());\n    },\n    enableSelection: function () {\n        enableSelection(this._list._getElement());\n    },\n    _itemUnselected: function (e) {\n        var view = this.getSubviewByListItem(e.memo.item), model = view ? view.model : null;\n        this.trigger('item:unselected', model);\n    },\n    _itemSelected: function (e) {\n        var view = this.getSubviewByListItem(e.memo.item), model = view ? view.model : null;\n        this.trigger('item:selected', model);\n    },\n    render: function (collection, options) {\n        this._list.resetSelected();\n        var modelsToAdd = [], modelsToRemove = [], previousModelUris = [], selectAfterAdd = false, currentModelUris = this.collection.map(function (model) {\n                return model.get('uri');\n            }), self = this;\n        if (options && options.previousModels) {\n            previousModelUris = _.map(options.previousModels, function (model) {\n                return model.get('uri');\n            });\n            _.each(options.previousModels, function (model) {\n                if (!_.include(currentModelUris, model.get('uri'))) {\n                    modelsToRemove.push(model);\n                }\n            });\n            selectAfterAdd = true;\n        }\n        this.collection.forEach(function (model) {\n            if (!_.include(previousModelUris, model.get('uri'))) {\n                modelsToAdd.push(model);\n            }\n        });\n        if (modelsToAdd.length) {\n            _.each(modelsToAdd, function (model) {\n                var view = new SubDataSourceItemView({ model: model });\n                self.subviews.push(view);\n                self._list.addItems([view.getListItem()]);\n                self._list.show();\n            });\n            this._list.show();\n            if (selectAfterAdd) {\n                var selectedViews = _.compact(_.map(modelsToAdd, _.bind(self.getSubviewByModel, self)));\n                _.each(selectedViews, function (view) {\n                    self._list.selectItem(view.getListItem(), true);\n                });\n            }\n            _.each(this.subviews, function (view) {\n                // ListItem._getElement() is pointing to correct element only after we added it to the List\n                // so here we wait for DOM of List to be updated and then set root el for subview\n                _.defer(_.bind(view.setRootElement, view));\n            });\n        }\n        if (modelsToRemove.length) {\n            _.each(modelsToRemove, function (model) {\n                self.removeSubview(model);\n            });\n            this._list.show();\n        }\n        return this;\n    },\n    getSubviewByModel: function (model) {\n        return _.find(this.subviews, function (view) {\n            return view.model === model;\n        });\n    },\n    getList: function () {\n        return this._list;\n    },\n    getListLength: function () {\n        return this._list._items.length;\n    },\n    getSelectedModels: function () {\n        var items = this._list.getSelectedItems(), subviews = _.compact(_.map(items, _.bind(this.getSubviewByListItem, this)));\n        return _.map(subviews, function (view) {\n            return view.model;\n        });\n    },\n    getSubviewByListItem: function (listItem) {\n        return _.find(this.subviews, function (view) {\n            return view.getListItem() === listItem;\n        });\n    },\n    removeSubview: function (model) {\n        var view = this.getSubviewByModel(model);\n        if (view) {\n            this._list.removeItems([view.getListItem()]);\n            view.remove();\n            this._list.show();\n        }\n    },\n    removeSubviews: function () {\n        var listItems = _.map(this.subviews, function (view) {\n            return view.getListItem();\n        });\n        this._list.removeItems(listItems);\n        _.invoke(this.subviews, 'remove');\n    },\n    remove: function () {\n        this.removeSubviews();\n        Backbone.View.prototype.remove.apply(this, arguments);\n    }\n});","export default \"<ul id=\\\"selectedDataSourcesTemplate\\\" class=\\\"list tabular twoColumn\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n</ul>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport VirtualDataSourceModel from '../model/VirtualDataSourceModel';\nimport SubDataSourceModel from '../model/SubDataSourceModel';\nimport dynamicTree from '../../dynamicTree/dynamicTree.utils';\nimport dependentResourcesDialog from '../../components/components.dependent.dialog';\nimport i18n from '../../i18n/jasperserver_messages.properties';\nimport virtualSpecificTemplate from '../template/virtualSpecificTemplate.htm';\nimport dependenciesTemplate from '../template/dialog/dependenciesTemplate.htm';\nimport SubDataSourcesListView from '../view/SubDataSourcesListView';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.virtual.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.virtual.page.title.edit',\n    hasDependedResources: false,\n    // does this data source has depended resources, or not ?\n    modelConstructor: VirtualDataSourceModel,\n    events: {\n        'keyup input[type=\\'text\\'][class!=\\'dataSourceID\\'], textarea': 'updateModelProperty',\n        'change input[type=\\'text\\'][class!=\\'dataSourceID\\'], textarea, select': 'updateModelProperty',\n        'click [name=toRight]': 'chooseTreeNodes',\n        'click [name=toLeft]': 'removeSelectedSubDataSources',\n        'click [name=allToLeft]': 'removeAllSubDataSources'\n    },\n    initialize: function (options) {\n        this.dependentResources = options.dependentResources;\n        this._subDataSourcesHiddenNodes = {};\n        if (this.dependentResources && this.dependentResources.length > 0) {\n            this.hasDependedResources = true;\n        }\n        BaseDataSourceView.prototype.initialize.apply(this, arguments);\n        this.showDependentResources();\n        this.listenTo(this.model.subDataSources, 'reset', this.updateAllToLeftButtonState);\n    },\n    chooseTreeNodes: function (e) {\n        e.preventDefault();\n        this.$('[name=toRight]').attr('disabled', 'disabled').removeClass('over');\n        var nodes = this.subDataSourcesTree.selectedNodes, models = _.compact(_.map(nodes, function (node) {\n            return !node ? null : new SubDataSourceModel({\n                name: node.name,\n                id: node.param.id,\n                uri: node.param.uri,\n                readOnly: false\n            });\n        }));    // resetting the whole collection there instead of add, because we need a single \"reset\" event, signalizing\n        // that all models were added to collection instead of several \"add\" events for each new model\n        // resetting the whole collection there instead of add, because we need a single \"reset\" event, signalizing\n        // that all models were added to collection instead of several \"add\" events for each new model\n        this.model.subDataSources.reset(this.model.subDataSources.models.concat(models));\n        var nodeUris = _.map(nodes, function (node) {\n            return node.param.uri;\n        });\n        this._hideAvailableSubDataSources(nodeUris);\n    },\n    removeAllSubDataSources: function (e) {\n        e.preventDefault();\n        if (this.hasDependedResources) {\n            return;\n        }\n        this.subDataSourcesTree._deselectAllNodes();\n        var self = this;\n        this.model.subDataSources.forEach(function (model) {\n            self._unhideAvailableSubDataSources(model.get('uri'));\n        });\n        this.model.subDataSources.reset([]);\n        this.updateRightButtonState();\n    },\n    removeSelectedSubDataSources: function (e) {\n        e.preventDefault();\n        this.subDataSourcesTree._deselectAllNodes();\n        var selectedModels = this.selectedSubDataSourcesList.getSelectedModels(), self = this, newCollection = [];\n        _.each(selectedModels, function (model) {\n            self._unhideAvailableSubDataSources(model.get('uri'));\n        });\n        this.model.subDataSources.forEach(function (model) {\n            if (!_.include(selectedModels, model)) {\n                newCollection.push(model);\n            }\n        });\n        this.model.subDataSources.reset(newCollection);\n        this.updateRightButtonState();\n    },\n    updateAllToLeftButtonState: function () {\n        if (this.hasDependedResources || this.selectedSubDataSourcesList.getListLength() === 0) {\n            this.$('[name=allToLeft]').attr('disabled', 'disabled').removeClass('over');\n        } else {\n            this.$('[name=allToLeft]').removeAttr('disabled');\n        }\n    },\n    updateRightButtonState: function () {\n        var $btn = this.$('[name=toRight]'), nodes = this.subDataSourcesTree.selectedNodes, hasMovables = false, hasUnmovables = false;\n        for (var i = 0; i < nodes.length; i++) {\n            if (nodes[i].isParent() || this.model.subDataSources.where({ 'uri': nodes[i].param.uri }).length) {\n                hasUnmovables = true;\n                break;\n            } else {\n                hasMovables = true;\n            }\n        }\n        if (hasMovables && !hasUnmovables) {\n            $btn.removeAttr('disabled');\n        } else {\n            $btn.attr('disabled', 'disabled').removeClass('over');\n        }\n    },\n    updateLeftButtonState: function () {\n        var models = this.selectedSubDataSourcesList.getSelectedModels(), $btn = this.$('[name=toLeft]');\n        if (models.length > 0) {\n            $btn.removeAttr('disabled');\n        } else {\n            $btn.attr('disabled', 'disabled').removeClass('over');\n        }\n    },\n    render: function () {\n        this.$el.empty();\n        this.renderVirtualSpecificSection();\n        this.updateAllToLeftButtonState();\n        return this;\n    },\n    showDependentResources: function () {\n        if (!this.hasDependedResources) {\n            return;\n        }\n        dependentResourcesDialog.show(this.dependentResources, {}, //no actions, just inform user\n            {\n                canSave: false,\n                okOnly: true,\n                topMessage: i18n['resource.dataSource.virtual.dependencies.top.message'],\n                bottomMessage: i18n['resource.dataSource.virtual.dependencies.bottom.message']\n            });\n    },\n    renderVirtualSpecificSection: function () {\n        var self = this, hideNodesFn = function () {\n            self._hideAvailableSubDataSources(self.model.subDataSources.map(function (subDataSource) {\n                return subDataSource.get('uri');\n            }));\n        };\n        this.$el.append(_.template(virtualSpecificTemplate, this.templateData()));\n        this.$el.append(_.template(dependenciesTemplate, this.templateData()));\n        this.selectedSubDataSourcesList = new SubDataSourcesListView({ collection: this.model.subDataSources });\n        this.listenTo(this.selectedSubDataSourcesList, 'item:unselected item:selected', _.bind(this.updateLeftButtonState, this));\n        this.selectedSubDataSourcesList.render();\n        this.subDataSourcesTree = dynamicTree.createRepositoryTree('subDataSourcesTree', {\n            treeId: 'subDataSourcesTree',\n            providerId: 'joinableDsTreeDataProvider',\n            selectLeavesOnly: true,\n            multiSelectEnabled: true\n        });\n        this.subDataSourcesTree.observe('leaf:dblclick', _.bind(this.chooseTreeNodes, this));\n        this.subDataSourcesTree.observe('node:selected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('node:unselected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('leaf:selected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('leaf:unselected', _.bind(this.updateRightButtonState, this));\n        this.subDataSourcesTree.observe('children:loaded', hideNodesFn);\n        this.subDataSourcesTree.showTreePrefetchNodes(this.model.subDataSources.map(function (subDataSource) {\n            return subDataSource.get('uri');\n        }).join(','), hideNodesFn);\n    },\n    _hideAvailableSubDataSources: function (uri) {\n        var self = this;\n        if (_.isArray(uri)) {\n            _.each(uri, function (uriItem) {\n                self._hideAvailableSubDataSources(uriItem);\n            });\n        } else {\n            var node = this.subDataSourcesTree.findLastLoadedNode(uri);\n            if (node && node.param.uri === uri) {\n                // keep removed node for the case if user unselects it\n                this._subDataSourcesHiddenNodes[uri] = {\n                    parent: node.parent,\n                    child: node\n                };\n                var parent = node.parent;\n                parent.removeChild(node);\n                parent.resortChilds();\n            }\n        }\n    },\n    _unhideAvailableSubDataSources: function (uri) {\n        function expandTreePath(tree, treePathUri) {\n            tree.processNodePath(treePathUri, function (node) {\n                if (node.parent) {\n                    if (tree.rootNode != node.parent && tree.getState(node.parent.id) == dynamicTree.TreeNode.State.CLOSED) {\n                        node.parent.handleNode();\n                    }\n                    if (node.param.uri === treePathUri) {\n                        node.select();\n                    }\n                }\n            });\n        }\n        var self = this, notLoadedHiddenNodes = [];\n        _.each(_.isArray(uri) ? uri : [uri], function (uriItem) {\n            var hiddenNode = self._subDataSourcesHiddenNodes[uriItem];\n            if (hiddenNode) {\n                hiddenNode.parent.addChild(hiddenNode.child);\n                hiddenNode.parent.resortChilds();\n                hiddenNode.parent.refreshNode();\n                expandTreePath(self.subDataSourcesTree, uriItem);\n            } else {\n                notLoadedHiddenNodes.push(uriItem);\n            }\n        });\n        if (notLoadedHiddenNodes.length) {\n            this.subDataSourcesTree.showTreePrefetchNodes(notLoadedHiddenNodes.join(','), function () {\n                _.each(notLoadedHiddenNodes, _.bind(expandTreePath, this, self.subDataSourcesTree));\n            });\n        }\n    },\n    remove: function () {\n        this.selectedSubDataSourcesList && this.selectedSubDataSourcesList.remove();\n        BaseDataSourceView.prototype.remove.apply(this, arguments);\n    }\n});","export default \"<fieldset class=\\\"group\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <input type=\\\"hidden\\\" name=\\\"subDataSources\\\" value=\\\"\\\"/>\\n    <span class=\\\"message warning\\\"></span>\\n</fieldset>\\n<fieldset class=\\\"group\\\">\\n    <div style=\\\"position:relative\\\" class=\\\"content\\\" id=\\\"dataSourcesSelector\\\">\\n        <div class=\\\"body twoColumn_equal pickWells\\\" id=\\\"subDsSelectionContainer\\\">\\n            <div class=\\\"moveButtons\\\" id=\\\"moveButtons\\\">\\n                <button title=\\\"{{- i18n['resource.moveRight'] }}\\\" class=\\\"button action square move right up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"toRight\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveRight\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n                <button title=\\\"{{- i18n['resource.moveLeft'] }}\\\" class=\\\"button action square move left up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"toLeft\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveLeft\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n                <button title=\\\"{{- i18n['resource.moveAllLeft'] }}\\\" class=\\\"button action square move toLeft up\\\"\\n                        disabled=\\\"disabled\\\" name=\\\"allToLeft\\\"><span class=\\\"wrap\\\">{{- i18n[\\\"resource.moveAllLeft\\\"] }}<span\\n                        class=\\\"icon\\\"></span></span></button>\\n            </div>\\n\\n            <div class=\\\"column secondary\\\" id=\\\"availableDataSources\\\">\\n                <label for=\\\"subDataSourcesTree\\\" class=\\\"control\\\">\\n                    <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.virtual.availableDataSources\\\"] }}</span>\\n                    <br>\\n\\n                    <div class=\\\"control groupBox\\\">\\n                        <div class=\\\"content \\\">\\n                            <div class=\\\"header \\\">\\n                                <div class=\\\"title\\\"></div>\\n                            </div>\\n                            <div class=\\\"body  \\\">\\n                                <ul class=\\\"list collapsible folders\\\" id=\\\"subDataSourcesTree\\\"></ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </label>\\n            </div>\\n\\n            <div class=\\\"column primary\\\" id=\\\"selectedDataSources\\\">\\n                <label for=\\\"selectedSubDataSourcesList\\\" class=\\\"control\\\">\\n                    <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.virtual.selectedDataSources\\\"] }}</span>\\n                    <br>\\n\\n                    <div class=\\\"content\\\">\\n                        <ul class=\\\"list tabular twoColumn header\\\" id=\\\"selectedDataSourcesHeader\\\">\\n                            <li>\\n                                <div class=\\\"wrap\\\">\\n                                    <div class=\\\"column one\\\">\\n                                        <p class=\\\"dataSourceName\\\">{{- i18n[\\\"resource.dataSource.name\\\"] }}</p>\\n                                    </div>\\n                                    <div class=\\\"column two\\\">\\n                                        <p class=\\\"dataSourceID\\\">{{- i18n[\\\"resource.dataSource.virtual.subDsId\\\"] }}</p>\\n                                    </div>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                        <div id=\\\"selectedSubDataSourcesListContainer\\\">\\n                            <ol class=\\\"list tabular twoColumn\\\" id=\\\"selectedSubDataSourcesList\\\"></ol>\\n                        </div>\\n                    </div>\\n                </label>\\n            </div>\\n        </div>\\n    </div>\\n</fieldset>\";","export default \"<div id=\\\"dependencies\\\" class=\\\"panel dialog overlay dependencies sizeable moveable hidden centered_vert centered_horz\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"sizer diagonal\\\"></div>\\n    <div class=\\\"content hasFooter \\\">\\n        <div class=\\\"header mover\\\">\\n            <div class=\\\"title\\\">{{- i18n[\\\"dialog.dependencies.title\\\"] }}</div>\\n        </div>\\n        <div class=\\\"body\\\">\\n            <p id=\\\"topMessage\\\"></p>\\n\\n            <div class=\\\"control groupBox\\\">\\n                <ul id=\\\"dependenciesList\\\"></ul>\\n            </div>\\n            <p id=\\\"bottomMessage\\\" class=\\\"saveMessage\\\"></p>\\n        </div>\\n        <div class=\\\"footer \\\">\\n            <button id=\\\"dependenciesBtnSave\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.save\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnSaveAs\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.saveAs\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnOk\\\" class=\\\"button action primary up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.ok\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button id=\\\"dependenciesBtnCancel\\\" class=\\\"button action up\\\">\\n                <span class=\\\"wrap\\\">{{- i18n[\\\"button.cancel\\\"] }}</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n        </div>\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceModel from './BaseDataSourceModel';\nimport connectionTypes from '../enum/connectionTypes';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nexport default BaseDataSourceModel.extend({\n    type: repositoryResourceTypes.BEAN_DATA_SOURCE,\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, BaseDataSourceModel.prototype.defaults, {\n            beanName: '',\n            beanMethod: '',\n            connectionType: connectionTypes.BEAN\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, BaseDataSourceModel.prototype.validation, {\n            beanName: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.beanName']\n            }],\n            beanMethod: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.reportDataSource.beanMethod']\n            }]\n        });\n        return validation;\n    }()\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport BeanDataSourceModel from '../model/BeanDataSourceModel';\nimport beanSpecificTemplate from '../template/beanSpecificTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.bean.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.bean.page.title.edit',\n    modelConstructor: BeanDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderBeanSpecificSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderBeanSpecificSection: function () {\n        this.$el.append(_.template(beanSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n    <legend class=\\\"offLeft\\\"><span></span></legend>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.bean.name'] }}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.bean.name\\\"]}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.beanName }}\\\" name=\\\"beanName\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.bean.hint1\\\"]}}</span>\\n    </label>\\n\\n    <label title=\\\"{{- i18n['resource.dataSource.bean.method'] }}\\\" class=\\\"control input text\\\">\\n        <span class=\\\"wrap\\\">{{- i18n[\\\"resource.dataSource.bean.method\\\"]}} ({{- i18n['required.field']}}):</span>\\n        <input type=\\\"text\\\" value=\\\"{{- modelAttributes.beanMethod }}\\\" name=\\\"beanMethod\\\">\\n        <span class=\\\"message warning\\\"></span>\\n        <span class=\\\"message hint\\\">{{- i18n[\\\"resource.dataSource.bean.hint2\\\"]}}</span>\\n    </label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport mongoDbSpecificTemplate from '../template/mongoDbSpecificTemplate.htm';\n\nexport default CustomDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.mongo.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.mongo.page.title.edit',\n    render: function () {\n        this.$el.empty();\n        this.renderMongoDbSpecificSection();\n        this.renderTestConnectionSection();\n        return this;\n    },\n    renderMongoDbSpecificSection: function () {\n        this.$el.append(_.template(mongoDbSpecificTemplate, this.templateData()));\n    }\n});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span>Access Properties</span></legend>\\n\\n\\n\\n\\n\\t<label title=\\\"MongoDB URI (required)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.mongoURI'] }} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input name=\\\"mongoURI\\\" type=\\\"text\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.mongoURI }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n\\n\\t<label title=\\\"User Name (optional)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.username'] }} ({{- i18n['optional.field']}}):</span>\\n\\t\\t<input name=\\\"username\\\" type=\\\"text\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.username }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"Password (optional)\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n['MongoDbDataSource.properties.password'] }} ({{- i18n['optional.field']}}):</span>\\n\\t\\t<input name=\\\"password\\\" type=\\\"password\\\" size=\\\"40\\\" class=\\\"fnormal\\\" value=\\\"{{- modelAttributes.password }}\\\">\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t</label>\\n\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    REPOSITORY: {\n        name: 'repository',\n        label: 'resource.datasource.text.fileLocation.options.repository'\n    },\n    SERVER_FILE_SYSTEM: {\n        name: 'serverFileSystem',\n        label: 'resource.datasource.text.fileLocation.options.serverFileSystem'\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport CustomDataSourceModel from './CustomDataSourceModel';\nimport mongoJdbcFileSourceTypes from '../enum/mongoJdbcFileSourceTypes';\nimport i18n from '../../i18n/jasperserver_messages.properties';\n\nvar MongoDbJdbcDataSourceModel = CustomDataSourceModel.extend({\n    fileTypes: [\n        'pdf',\n        'config'\n    ],\n    defaults: function () {\n        var defaults = {};\n        _.extend(defaults, CustomDataSourceModel.prototype.defaults, {\n            dataSourceName: 'mongoDbJDBCDataSource',\n            fileSourceType: 'repository',\n            timeZone: ''\n        });\n        return defaults;\n    }(),\n    validation: function () {\n        var validation = {};\n        _.extend(validation, CustomDataSourceModel.prototype.validation, {\n            serverAddress: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.host']\n            }],\n            portNumber: [{\n                required: true,\n                msg: i18n['ReportDataSourceValidator.error.not.empty.server.port']\n            }],\n            repositoryFileName: [\n                {\n                    fn: function (value, attr, computedState) {\n                        if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'repository' && (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '')) {\n                            return i18n['fillParameters.error.mandatoryField'];\n                        }\n                        return null;\n                    }\n                },\n                {\n                    fn: function (value, attr, computedState) {\n                        if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'repository' && !(_.isString(value) && value !== '' && value.indexOf('/') === 0)) {\n                            return i18n['resource.file.invalid.path'];\n                        }\n                        return null;\n                    }\n                }\n            ],\n            serverFileName: [{\n                fn: function (value, attr, computedState) {\n                    if (!computedState.autoSchemaDefinition && computedState.fileSourceType === 'serverFileSystem' && (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '')) {\n                        return i18n['fillParameters.error.mandatoryField'];\n                    }\n                    return null;\n                }\n            }]\n        });\n        return validation;\n    }(),\n    isLocalFileSystemAccessAllowed: function (adminWorkflows) {\n        return adminWorkflows && adminWorkflows._embedded && adminWorkflows._embedded.workflow && _.find(adminWorkflows._embedded.workflow, function (item) {\n            return item.name === 'serverSettings';\n        });\n    },\n    parse: function () {\n        var model = CustomDataSourceModel.prototype.parse.apply(this, arguments);\n        if (_.isString(model.fileName)) {\n            if (model.fileName.indexOf('repo:') !== -1) {\n                var path = model.fileName.split(':');\n                model.fileSourceType = mongoJdbcFileSourceTypes.REPOSITORY.name;\n                model.repositoryFileName = path[1];\n            } else {\n                model.fileSourceType = mongoJdbcFileSourceTypes.SERVER_FILE_SYSTEM.name;\n                model.serverFileName = model.fileName;\n            }\n            delete model.fileName;\n            model.autoSchemaDefinition = false;\n        } else {\n            model.autoSchemaDefinition = true;\n        }    // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timeZone' to 'timezone'\n        // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timeZone' to 'timezone'\n        model.timezone = model.timeZone;\n        delete model.timeZone;\n        return model;\n    },\n    toJSON: function () {\n        var data = CustomDataSourceModel.prototype.toJSON.apply(this, arguments);\n        data.fileName = data.serverFileName;\n        return data;\n    },\n    customFieldsToJSON: function (data, customFields) {\n        // converting file location section\n        if (data.fileSourceType === mongoJdbcFileSourceTypes.REPOSITORY.name) {\n            data.fileName = 'repo:' + data.repositoryFileName;\n        } else if (data.fileSourceType === mongoJdbcFileSourceTypes.SERVER_FILE_SYSTEM.name) {\n            data.fileName = data.serverFileName;\n        }\n        delete data.repositoryFileName;\n        delete data.serverFileName;\n        if (data.autoSchemaDefinition) {\n            // null or empty string in \"fileName\" is indication what schema must be auto-generated\n            delete data.fileName;\n            delete data.fileSourceType;\n        }\n        delete data.autoSchemaDefinition;    // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timezone' to 'timeZone'\n        // fix for timeZone: server side expects timezone to be passed in custom fields by name \"timeZone\"\n        // while the section on UI renders it with name='timezone' which creates variable 'timeZone'\n        // What we need is to rename field from 'timezone' to 'timeZone'\n        data.timeZone = data.timezone;\n        delete data.timezone;\n        data = CustomDataSourceModel.prototype.customFieldsToJSON.call(this, data, customFields);\n        return data;\n    },\n    resetValidation: function () {\n        this.validation = _.clone(MongoDbJdbcDataSourceModel.prototype.validation);\n    }\n});\nexport default MongoDbJdbcDataSourceModel;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport resourceLocator from '../../resource/resource.locate';\nimport mongoJdbcFileSourceTypes from '../enum/mongoJdbcFileSourceTypes';\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport MongoDbJdbcDataSourceModel from '../model/MongoDbJdbcDataSourceModel';\nimport MongoDbJdbcSpecificTemplate from '../template/mongoDbJdbcSpecificTemplate.htm';\nimport MongoDbJdbcFileLocationSectionTemplate from '../template/mongoDbJdbcFileLocationSectionTemplate.htm';\nimport selectDialogTemplate from 'js-sdk/src/common/templates/components.pickers.htm';\nimport jrsConfigs from \"js-sdk/src/jrs.configs\";\nimport request from 'js-sdk/src/common/transport/request';\n\nlet adminWorkflowsLoadingPromise = null;\nlet adminWorkflows = null;\n\nexport default CustomDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.mongoJdbc.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.mongoJdbc.page.title.edit',\n    modelConstructor: MongoDbJdbcDataSourceModel,\n    browseButton: false,\n    events: function () {\n        var events = _.extend({}, CustomDataSourceView.prototype.events);\n        events['change [name=fileSourceType]'] = 'changeFileSourceType';\n        events['change [name=autoSchemaDefinition]'] = 'changeAutoSchemaDefinition';\n        return events;\n    },\n    initialize: function (options) {\n        CustomDataSourceView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change:serverFileName', this.adjustFileSystemConnectButton);\n        this.loadAdminWorkflows();\n    },\n    loadAdminWorkflows: function () {\n        if (!adminWorkflowsLoadingPromise) {\n            adminWorkflowsLoadingPromise = request({\n                type: \"GET\",\n                dataType: \"json\",\n                url: jrsConfigs.contextPath + \"/rest_v2/hypermedia/workflows?parentName=admin\"\n            }).then((result) => {\n                adminWorkflows = result;\n            });\n        }\n\n        return adminWorkflowsLoadingPromise;\n    },\n    changeFileSourceType: function () {\n        _.defer(_.bind(function () {\n            this.renderFileLocationSection();\n        }, this));\n    },\n    changeAutoSchemaDefinition: function () {\n        _.defer(_.bind(function () {\n            this.renderFileLocationSection();\n        }, this));\n    },\n    render: function () {\n        this.loadAdminWorkflows().then(() => {\n            this.$el.empty();\n            this.renderMongoDbSpecificSection();\n            this.renderFileLocationSection();\n            this.renderTimezoneSection();\n            this.renderTestConnectionSection();\n            this.$el.find('[name=serverAddress]').focus();\n        })\n\n        return this;\n    },\n    validationMethodOnSaveClick: function (callback) {\n        !this.model.get('parentFolderUri') && this.model.set('parentFolderUri', '/');\n        !this.model.get('label') && this.model.set('label', $('[name=dataSourceType] option:selected').text());\n        var self = this;\n        this.model.save({}, { dryRun: true }).fail(function (xhr) {\n            var response = false;\n            try {\n                response = JSON.parse(xhr.responseText);\n            } catch (e) {\n            }\n            var errors = _.isArray(response) ? response : [response];\n            _.each(errors, function (error) {\n                if (error && error.errorCode && error.parameters) {\n                    if (error.errorCode === 'illegal.parameter.value.error' && error.parameters[0] === 'resourceReference.uri') {\n                        self.fieldIsInvalid(self, 'repositoryFileName', i18n['resource.file.invalid.path'], 'name');\n                    } else if (error.errorCode === 'invalid.server.file.system.path' && error.parameters[0] === 'textDataSource.propertyMap[fileName]') {\n                        self.fieldIsInvalid(self, 'serverFileName', i18n['resource.file.invalid.path'], 'name');\n                    }\n                }\n            });\n        }).done(callback);\n    },\n    templateData: function () {\n        var fileSourceTypes = _.extend({}, mongoJdbcFileSourceTypes);\n        if (!this.model.isLocalFileSystemAccessAllowed(adminWorkflows)) {\n            delete fileSourceTypes['SERVER_FILE_SYSTEM'];\n        }\n        return _.extend(CustomDataSourceView.prototype.templateData.apply(this, arguments), { fileSourceTypeOptions: fileSourceTypes });\n    },\n    renderMongoDbSpecificSection: function () {\n        this.$el.append(_.template(MongoDbJdbcSpecificTemplate, this.templateData()));\n    },\n    renderFileLocationSection: function () {\n        // we are going to re-render the file location section, and\n        // we need to remove everything which was there, and draw it again\n        this.renderOrAddAnyBlock(this.$el.find('[name=fileLocationContainer]'), _.template(MongoDbJdbcFileLocationSectionTemplate, this.templateData()));    // browse button is a special component, and\n        // if we render this section second time and we have this\n        // component on the page we need to remove it\n        // browse button is a special component, and\n        // if we render this section second time and we have this\n        // component on the page we need to remove it\n        if (this.browseButton) {\n            this.browseButton.remove();\n            this.browseButton = false;\n        }    // and now, under certain condition, we may create this button again\n        // and now, under certain condition, we may create this button again\n        if (this.model.get('fileSourceType') === 'repository' && !this.model.get('autoSchemaDefinition')) {\n            this.browseButton = resourceLocator.initialize({\n                i18n: i18n,\n                template: selectDialogTemplate,\n                resourceInput: this.$el.find('[name=repositoryFileName]')[0],\n                browseButton: this.$el.find('[name=repositoryBrowserButton]')[0],\n                providerId: 'fileResourceBaseTreeDataProvider',\n                dialogTitle: i18n['resource.Add.Files.Title'],\n                selectLeavesOnly: true,\n                onChange: _.bind(function (value) {\n                    this.model.set('repositoryFileName', value);\n                    this.model.validate({ 'repositoryFileName': value });\n                }, this)\n            });\n        }\n    }\n});","export default \"<fieldset class=\\\"group shortFields mongoDbJdbcSpecificFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t<legend class=\\\"offLeft\\\"><span></span></legend>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.host'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.host\\\"]}} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverAddress }}\\\" name=\\\"serverAddress\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.port.number'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.port.number\\\"]}} ({{- i18n['required.field']}}):</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.portNumber }}\\\" name=\\\"portNumber\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.database.name'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.database.name\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.database }}\\\" name=\\\"database\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.user.name'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.user.name\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.username }}\\\" name=\\\"username\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.password'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.password\\\"]}}:</span>\\n\\t\\t<input type=\\\"password\\\" value=\\\"{{- modelAttributes.password }}\\\" name=\\\"password\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.connection.options'] }}\\\" class=\\\"control input text\\\">\\n\\t\\t<span class=\\\"wrap\\\">{{- i18n[\\\"resource.datasource.mongoJdbc.connection.options\\\"]}}:</span>\\n\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.connectionOptions }}\\\" name=\\\"connectionOptions\\\">\\n\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t<span class=\\\"message hint\\\"></span>\\n\\t</label>\\n\\n\\t<div class=\\\"control checkBox\\\">\\n\\t\\t<label for=\\\"__jrs_autoSchemaDefinitionCheckbox\\\" title=\\\"{{- i18n['resource.datasource.mongoJdbc.schema.auto.generate']}}\\\" class=\\\"wrap\\\">\\n\\t\\t\\t{{- i18n['resource.datasource.mongoJdbc.schema.auto.generate']}}\\n\\t\\t</label>\\n\\t\\t<input type=\\\"checkbox\\\" id=\\\"__jrs_autoSchemaDefinitionCheckbox\\\" name=\\\"autoSchemaDefinition\\\" {{ if (modelAttributes.autoSchemaDefinition) { }}checked{{ } }} {{- isEditMode ? 'disabled=disabled' : ''}} >\\n\\t</div>\\n\\n\\t<div name=\\\"fileLocationContainer\\\" class=\\\"section\\\"></div>\\n</fieldset>\";","export default \"<div name=\\\"fileLocationContainer\\\" class=\\\"\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\n\\t{{ if (_.keys(fileSourceTypeOptions).length > 1) { }}\\n\\t<div class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.source'] }}\\\" class=\\\"control select\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.source'] }}:</span>\\n\\t\\t\\t<select id=\\\"fileSourceSelect\\\" name=\\\"fileSourceType\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t{{ _.each(fileSourceTypeOptions, function(item) { }}\\n\\t\\t\\t\\t<option value=\\\"{{- item.name }}\\\" {{- (item.name == modelAttributes.fileSourceType) ? \\\"selected=selected\\\" : \\\"\\\" }} > {{- i18n[item.label] }}</option>\\n\\t\\t\\t{{ }); }}\\n\\t\\t\\t</select>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n    {{ } }}\\n\\n\\t{{ if (modelAttributes.fileSourceType === \\\"repository\\\") { }}\\n\\n\\t<div id=\\\"repositoryInput\\\" class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.repository.fileLocation']}}\\\" class=\\\"control input text\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.repository.fileLocation']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n['required.field']}}){{ } }}:</span>\\n\\t\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.repositoryFileName }}\\\" name=\\\"repositoryFileName\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t<button class=\\\"button action\\\" type=\\\"button\\\" name=\\\"repositoryBrowserButton\\\"  {{- isEditMode || modelAttributes.autoSchemaDefinition ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t       <span class=\\\"wrap\\\">{{- i18n['dialog.file.browse'] }}...<span class=\\\"icon\\\"></span></span>\\n\\t\\t\\t</button>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t{{ } else { }}\\n\\n\\t<div id=\\\"serverInput\\\" class=\\\"\\\">\\n\\t\\t<label title=\\\"{{- i18n['resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation']}}\\\" class=\\\"control browser\\\">\\n\\t\\t\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.mongoJdbc.fileLocation.serverFileSystem.fileLocation']}}{{ if (!modelAttributes.autoSchemaDefinition) { }} ({{- i18n['required.field']}}){{ } }}:</span>\\n\\t\\t\\t<input type=\\\"text\\\" value=\\\"{{- modelAttributes.serverFileName }}\\\" name=\\\"serverFileName\\\" {{- (isEditMode || modelAttributes.autoSchemaDefinition) ? 'disabled=disabled' : ''}}>\\n\\t\\t\\t<span class=\\\"message warning\\\"></span>\\n\\t\\t</label>\\n\\t</div>\\n\\n\\t{{ } }}\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseDataSourceView from '../view/BaseDataSourceView';\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport CustomDataSourceModel from '../model/CustomDataSourceModel';\nimport InternalDiagnosticTemplate from '../template/InternalDiagnosticTemplate.htm';\n\nexport default BaseDataSourceView.extend({\n    PAGE_TITLE_NEW_MESSAGE_CODE: 'resource.datasource.jndi.page.title.new',\n    PAGE_TITLE_EDIT_MESSAGE_CODE: 'resource.datasource.jndi.page.title.edit',\n    modelConstructor: CustomDataSourceModel,\n    render: function () {\n        this.$el.empty();\n        this.renderBlankBody();\n        return this;\n    },\n    renderBlankBody: function () {\n        this.$el.append(_.template(InternalDiagnosticTemplate, { i18n: i18n }));\n    }\n});","export default \"<fieldset name=\\\"customFieldsContainer\\\" class=\\\"group shortFields\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line1\\\"] }}\\n\\t<br/>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line2\\\"] }}\\n\\t<br/>\\n\\t{{- i18n[\\\"resource.datasource.internalDiagnostic.line3\\\"] }}\\n\\t<br/>\\n\\t<br/>\\n\\t<strong>{{- i18n[\\\"resource.datasource.internalDiagnostic.line4\\\"] }}</strong>\\n</fieldset>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport CustomDataSourceView from '../view/CustomDataSourceView';\nimport dataSourceResourceTypes from '../enum/dataSourceResourceTypes';\nimport customDataSourceTypes from '../enum/customDataSourceTypes';\nimport JdbcDataSourceView from '../view/JdbcDataSourceView';\nimport JndiDataSourceView from '../view/JndiDataSourceView';\nimport AwsDataSourceView from '../view/AwsDataSourceView';\nimport AzureSqlDataSourceView from '../view/AzureSqlDataSourceView';\nimport VirtualDataSourceView from '../view/VirtualDataSourceView';\nimport BeanDataSourceView from '../view/BeanDataSourceView';\nimport MongoDbDataSourceView from '../view/MongoDbDataSourceView';\nimport MongoDbJdbcDataSourceView from '../view/MongoDbJdbcDataSourceView';\nimport DiagnosticCustomDataSourceView from '../view/DiagnosticCustomDataSourceView';\n\nvar registeredViews = {};\nregisteredViews[dataSourceResourceTypes.JDBC.toLowerCase()] = JdbcDataSourceView;\nregisteredViews[dataSourceResourceTypes.JNDI.toLowerCase()] = JndiDataSourceView;\nregisteredViews[dataSourceResourceTypes.AWS.toLowerCase()] = AwsDataSourceView;\nregisteredViews[dataSourceResourceTypes.AZURE_SQL.toLowerCase()] = AzureSqlDataSourceView;\nregisteredViews[dataSourceResourceTypes.VIRTUAL.toLowerCase()] = VirtualDataSourceView;\nregisteredViews[dataSourceResourceTypes.BEAN.toLowerCase()] = BeanDataSourceView;\nregisteredViews[dataSourceResourceTypes.MONGODB] = MongoDbDataSourceView;\nregisteredViews[dataSourceResourceTypes.MONGODBJDBC] = MongoDbJdbcDataSourceView;    // next, we pre-define the custom views for some of the custom data sources\n// you also can define your own views here\n// next, we pre-define the custom views for some of the custom data sources\n// you also can define your own views here\nregisteredViews[customDataSourceTypes.DIAGNOSTIC] = DiagnosticCustomDataSourceView;    // disable file data sources for now\n//registeredViews[customDataSourceTypes.TEXT_FILE] = TextDataSourceView;\n// disable file data sources for now\n//registeredViews[customDataSourceTypes.TEXT_FILE] = TextDataSourceView;\nexport default {\n    getView: function (options) {\n        var constructor;\n        if (options.dataSourceType) {\n            constructor = registeredViews[options.dataSourceType];\n            if (!constructor) {\n                constructor = CustomDataSourceView;\n            }\n        } else {\n            // by default\n            constructor = JdbcDataSourceView;\n        }\n        return new constructor(options);\n    },\n    getViewType: function (contentType, dataSource) {\n        var result = /application\\/repository\\.([^+]+)\\+json/.exec(contentType);\n        var viewType = result && result[1] ? result[1].toLowerCase() : contentType.toLowerCase();    // if this is custom data source, then view type is a dataSourceName attribute of data source entity\n        // if this is custom data source, then view type is a dataSourceName attribute of data source entity\n        if (dataSourceResourceTypes.CUSTOM.toLowerCase() === viewType) {\n            viewType = dataSource.dataSourceName;\n        }\n        return viewType;\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport DialogWithModelInputValidation from 'js-sdk/src/common/component/dialog/DialogWithModelInputValidation';\nimport baseSaveDialogTemplate from './template/baseSaveDialogTemplate.htm';\nimport settings from '../../settings/treeComponent.settings';\nimport repositoryTreeFactory from 'bi-repository/src/bi/repository/factory/repositoryTreeFactory';\nimport repositoryResourceTypes from 'bi-repository/src/bi/repository/enum/repositoryResourceTypes';\n\nexport default DialogWithModelInputValidation.extend({\n    theDialogIsOpen: false,\n    autoUpdateResourceID: true,\n    saveDialogTemplate: baseSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        var model = this.extendModel(this.options.model);\n        var saveButtonLabel = this._getLabelForSaveButton(model);\n        var cancelButtonLabel = 'resource.datasource.saveDialog.cancel';\n        this.autoUpdateResourceID = !this.options.isEditMode;\n        this.preSelectedFolder = options.parentFolderUri;\n        DialogWithModelInputValidation.prototype.constructor.call(this, {\n            skipLocation: !!options.skipLocation,\n            modal: true,\n            model: model,\n            minHeight: 500,\n            minWidth: 440,\n            setMinSizeAsSize: true,\n            resizable: !options.skipLocation,\n            additionalCssClasses: 'dataSourceSaveDialog' + (options.skipLocation ? ' no-minheight' : ''),\n            title: i18n['resource.datasource.saveDialog.save'],\n            content: _.template(this.saveDialogTemplate, {\n                i18n: i18n,\n                model: _.extend({}, model.attributes),\n                skipLocation: !!this.options.skipLocation,\n                isEmbedded: this.options.isEmbedded,\n                isEditMode: this.options.isEditMode\n            }),\n            buttons: [\n                {\n                    label: i18n[saveButtonLabel],\n                    action: 'save',\n                    primary: true\n                },\n                {\n                    label: i18n[cancelButtonLabel],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n        this.on('button:save', _.bind(this._onSaveDialogSaveButtonClick, this));\n        this.on('button:cancel', _.bind(this._onSaveDialogCancelButtonClick, this));\n    },\n    initialize: function (options) {\n        DialogWithModelInputValidation.prototype.initialize.apply(this, arguments);    // check if this variables has been re-defined by inherited class\n        // check if this variables has been re-defined by inherited class\n        if (_.isUndefined(this.preSelectedFolder) || !this.preSelectedFolder) {\n            this.preSelectedFolder = '/';\n        }\n        if (!options.skipLocation) {\n            this.initializeTree();\n        }\n        this.listenTo(this.model, 'change:label', this._onDataSourceNameChange);\n        this.$contentContainer.find('[name=name]').change(_.bind(this._onResourceIDInputChange, this));\n    },\n    restoreModel: function () {\n        if (this.originalModelValidation) {\n            this.model.validation = this.originalModelValidation;\n        }\n    },\n    extendModel: function (model) {\n        this.originalModelValidation = model.validation;\n        model.validation = _.extend({}, ResourceModel.prototype.validation, {\n            label: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDialog.validation.not.empty.label']\n                },\n                {\n                    maxLength: ResourceModel.settings.LABEL_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.label']\n                }\n            ],\n            name: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDialog.validation.not.empty.name']\n                },\n                {\n                    maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.name']\n                },\n                {\n                    doesNotContainSymbols: ResourceModel.settings.NAME_NOT_SUPPORTED_SYMBOLS,\n                    msg: i18n['resource.datasource.saveDialog.validation.invalid.chars.name']\n                }\n            ],\n            description: [\n                { required: false },\n                {\n                    maxLength: ResourceModel.settings.DESCRIPTION_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDialog.validation.too.long.description']\n                }\n            ],\n            parentFolderUri: [{\n                fn: function (value) {\n                    if (!this.options.skipLocation) {\n                        if (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '') {\n                            return i18n['resource.datasource.saveDialog.validation.not.empty.parentFolderIsEmpty'];\n                        }\n                        if (value.slice(0, 1) !== '/') {\n                            return i18n['resource.datasource.saveDialog.validation.folder.not.found'].replace('{0}', value);\n                        }\n                    }\n                }\n            }]\n        });\n        return model;\n    },\n    initializeTree: function () {\n        this.foldersTree = repositoryTreeFactory({\n            processors: [\n                'folderTreeProcessor',\n                'treeNodeProcessor',\n                'i18nItemProcessor',\n                'filterPublicFolderProcessor',\n                'cssClassItemProcessor',\n                'fakeUriProcessor'\n            ],\n            treeBufferSize: settings.treeLevelLimit,\n            types: [repositoryResourceTypes.FOLDER],\n            tooltipOptions: {}\n        });\n        this.listenTo(this.foldersTree, 'selection:change', function (selection) {\n            var parentFolderUri;\n            if (selection && _.isArray(selection) && selection[0] && selection[0].uri) {\n                parentFolderUri = selection[0].uri;\n            }\n            if (!parentFolderUri) {\n                return;\n            }\n            this.model.set('parentFolderUri', parentFolderUri);\n        });\n        this.$el.find('.treeBox .folders').append(this.foldersTree.render().el);\n        var $scrollContainer = this.foldersTree.$el.parent().parent().parent();\n        this.foldersTree._selectTreeNode(this.preSelectedFolder, $scrollContainer);\n    },\n    startSaveDialog: function () {\n        this._openDialog();\n    },\n    _openDialog: function () {\n        if (this.theDialogIsOpen) {\n            return;\n        }\n        this.bindValidation();\n        DialogWithModelInputValidation.prototype.open.apply(this, arguments);\n        this.$contentContainer.find('[name=label]').focus();\n        this.theDialogIsOpen = true;\n    },\n    _closeDialog: function () {\n        if (!this.theDialogIsOpen) {\n            return;\n        }\n        this.unbindValidation();\n        this.clearValidationErrors();\n        DialogWithModelInputValidation.prototype.close.apply(this, arguments);\n        this.theDialogIsOpen = false;\n    },\n    _getLabelForSaveButton: function () {\n        return 'resource.datasource.saveDialog.save';\n    },\n    _onDialogResize: function () {\n        var self = this;\n        var heightReservation = 40;\n        var otherElementsHeight = 0;\n        var treeBox = this.$contentContainer.find('.control.groupBox.treeBox');\n        var dialogBody = this.$contentContainer.closest('.jr-mDialog > .jr-mDialog-body');\n        this.$contentContainer.children().not(treeBox).each(function () {\n            otherElementsHeight += self.$(this).outerHeight(true);\n        });\n        treeBox.height(dialogBody.outerHeight(true) - otherElementsHeight - heightReservation);\n    },\n    _onDataSourceNameChange: function () {\n        if (this.autoUpdateResourceID) {\n            var resourceId = ResourceModel.generateResourceName(this.model.get('label'));\n            this.model.set('name', resourceId);\n            this.$('input[name=\\'name\\']').val(resourceId);\n        }\n    },\n    _onResourceIDInputChange: function () {\n        this.autoUpdateResourceID = false;\n    },\n    _onSaveDialogCancelButtonClick: function () {\n        this.restoreModel();\n        this._closeDialog();\n    },\n    _onSaveDialogSaveButtonClick: function () {\n        if (!this.model.isValid(true)) {\n            return;\n        }\n        this.performSave();\n    },\n    performSave: function () {\n        if (this.options.saveFn) {\n            this.options.saveFn(this.model.attributes, this.model);\n            return;\n        }\n        this.model.save({}, {\n            success: _.bind(this._saveSuccessCallback, this),\n            error: _.bind(this._saveErrorCallback, this)\n        });\n    },\n    _saveSuccessCallback: function (model) {\n        this._closeDialog();\n        if (_.isFunction(this.options.success)) {\n            this.options.success(model);\n        }\n    },\n    _saveErrorCallback: function (model, xhr, options) {\n        var self = this, errors = false;\n        var handled = false;\n        try {\n            errors = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        if (!_.isArray(errors)) {\n            errors = [errors];\n        }\n        _.each(errors, function (error) {\n            var field = false, msg = false;\n            if (!error) {\n                return;\n            }    // in case of opened dialog, we can highlight some fields with error\n            // in case of opened dialog, we can highlight some fields with error\n            if (self.theDialogIsOpen) {\n                // check if we faced Conflict issue, it's when we are trying to save DS under existing resourceID\n                if (error.errorCode === 'version.not.match') {\n                    field = 'name';\n                    msg = i18n['resource.dataSource.resource.alreadyInUse'];\n                } else if (error.errorCode === 'mandatory.parameter.error') {\n                    if (error.parameters && error.parameters[0]) {\n                        msg = i18n['resource.datasource.saveDialog.parameterIsMissing'];\n                        field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                    }\n                } else if (error.errorCode === 'illegal.parameter.value.error') {\n                    if (error.parameters && error.parameters[0]) {\n                        field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                        msg = i18n['resource.datasource.saveDialog.parameterIsWrong'];\n                    }\n                } else if (error.errorCode === 'folder.not.found') {\n                    field = 'parentFolderUri';\n                    msg = i18n['ReportDataSourceValidator.error.folder.not.found'].replace('{0}', error.parameters[0]);\n                } else if (error.errorCode === 'access.denied') {\n                    field = 'parentFolderUri';\n                    msg = i18n['jsp.accessDenied.errorMsg'];\n                }\n            }\n            if (msg && field && [\n                'label',\n                'name',\n                'description',\n                'parentFolderUri'\n            ].indexOf(field) !== -1) {\n                self.invalidField('[name=' + field + ']', msg);\n                handled = true;\n            }\n        });    // otherwise, pass this error to DataSourceController\n        // otherwise, pass this error to DataSourceController\n        if (handled === false) {\n            if (_.isFunction(this.options.error)) {\n                this.options.error(model, xhr, options);\n            }\n        }\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDialog.dataSourceNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.dataSourceName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    'java.lang.Date': 'javaTypes.java.lang.Date',\n    'java.lang.String': 'javaTypes.java.lang.String',\n    'java.lang.Integer': 'javaTypes.java.lang.Integer',\n    'java.lang.Boolean': 'javaTypes.java.lang.Boolean',\n    'java.lang.Double': 'javaTypes.java.lang.Double',\n    'java.sql.Timestamp': 'javaTypes.java.sql.Timestamp',\n    'java.lang.Short': 'javaTypes.java.lang.Short',\n    'java.math.BigDecimal': 'javaTypes.java.math.BigDecimal',\n    'java.lang.Long': 'javaTypes.java.lang.Long',\n    'java.sql.Time': 'javaTypes.java.sql.Time'\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default [\n    'java.lang.Date',\n    'java.lang.String',\n    'java.lang.Integer',\n    'java.lang.Boolean',\n    'java.lang.Double',\n    'java.sql.Timestamp',\n    'java.lang.Short',\n    'java.math.BigDecimal',\n    'java.lang.Long',\n    'java.sql.Time'\n];","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport request from 'js-sdk/src/common/transport/request';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\n\nexport default ResourceModel.extend({\n    defaults: {\n        uri: undefined,\n        label: undefined,\n        columns: [],\n        dataSourceUri: undefined\n    },\n    validation: {\n        columns: function (columns) {\n            var errors = [];\n            _.each(columns, function (column, rowId) {\n                if (!column.label) {\n                    errors.push({\n                        rowId: rowId,\n                        name: 'label'\n                    });\n                }\n            });\n            if (errors.length !== 0) {\n                this.trigger('validationFailed', errors);\n            } else {\n                this.trigger('validationPassed');\n            }\n            return null;\n        }\n    },\n    type: 'simpleDomain',\n    url: function () {\n        return jrsConfigs.contextPath + '/rest_v2/domains';\n    },\n    // isNew == true to force POST method\n    isNew: function () {\n        return true;\n    },\n    constructor: function (attributes, options) {\n        ResourceModel.prototype.constructor.apply(this, arguments);\n        this.dataSource = options.dataSource;\n        if (options.dataSource && options.dataSource.uri) {\n            this.set('dataSourceUri', options.dataSource.uri);\n        }\n    },\n    save: function (attributes, options) {\n        _.defaults(options || (options = {}), {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/simpleDomain+json; charset=UTF-8'\n            }\n        });\n        return ResourceModel.prototype.save.call(this, attributes, options);\n    },\n    parseMetadata: function (data) {\n        _.each(data.columns, function (column) {\n            column.show = true;\n        });\n        return data;\n    },\n    parse: function (input) {\n        var data = ResourceModel.prototype.parse.apply(this, arguments);\n        if (data.dataSource) {\n            data.dataSourceUri = data.dataSource.dataSourceReference;\n            delete data.dataSource;\n        }\n        if (data.metadata) {\n            data.columns = data.metadata.columns;\n            delete data.metadata;\n        }\n        return data;\n    },\n    toJSON: function () {\n        var data = ResourceModel.prototype.toJSON.apply(this, arguments);\n        data.dataSource = { dataSourceReference: data.dataSourceUri };\n        data.metadata = {\n            columns: _.reduce(data.columns, function (memo, column) {\n                if (column.show) {\n                    // add only columns to show\n                    memo.push(column);\n                }\n                return memo;\n            }, []),\n            queryLanguage: 'csv'\n        };\n        delete data.dataSourceUri;\n        delete data.columns;\n        return data;\n    },\n    fetchMetadata: function () {\n        var self = this, dfr = $.Deferred();\n        request({\n            type: 'POST',\n            url: jrsConfigs.contextPath + '/rest_v2/connections',\n            dataType: 'json',\n            data: JSON.stringify(this.dataSource),\n            headers: {\n                'Content-Type': 'application/repository.customDataSource+json',\n                'Accept': 'application/table.metadata+json'\n            }\n        }).done(function (response) {\n            response = self.parseMetadata(response);\n            self.set('columns', response.columns);\n            dfr.resolve(response);\n        }).fail(function (xhr) {\n            dfr.reject(xhr);\n        });\n        return dfr;\n    }\n});","export default \"<div class=\\\"panel dialog overlay standardConfirm moveable centered_horz centered_vert\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"content hasFooter \\\">\\n        <div class=\\\"header mover\\\">\\n            <div class=\\\"title\\\">\\n                Confirm\\n            </div>\\n        </div>\\n\\n        <div class=\\\"body  \\\">\\n        </div>\\n\\n        <div class=\\\"footer \\\">\\n\\n            <button class=\\\"button action primary up ok\\\" name=\\\"buttonOK\\\">\\n                <span class=\\\"wrap\\\">OK</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button class=\\\"button action up ignore hidden\\\" name=\\\"buttonIgnore\\\">\\n                <span class=\\\"wrap\\\">Ignore</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n            <button class=\\\"button action up cancel\\\" name=\\\"buttonCancel\\\">\\n                <span class=\\\"wrap\\\">Cancel</span>\\n                <span class=\\\"icon\\\"></span>\\n            </button>\\n        </div>\\n\\n    </div>\\n</div>\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../../i18n/all.properties';\nimport ResourceModel from 'bi-repository/src/bi/repository/model/RepositoryResourceModel';\nimport BaseSaveDialogView from './BaseSaveDialogView';\nimport standardConfirmTemplate from 'js-sdk/src/common/templates/standardConfirm.htm';\nimport domainSaveDialogTemplate from './template/domainSaveDialogTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\n\nexport default BaseSaveDialogView.extend({\n    saveDialogTemplate: domainSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        BaseSaveDialogView.prototype.constructor.call(this, options);\n    },\n    initialize: function () {\n        this.preSelectedFolder = ResourceModel.getParentFolderFromUri(this.options.dataSource.uri) || '/';\n        BaseSaveDialogView.prototype.initialize.apply(this, arguments);\n        this.listenTo(this.model, 'change:openInAdHocDesigner', this._onOpenInAdHocDesignerChange);\n    },\n    extendModel: function (sourceModel) {\n        var model = BaseSaveDialogView.prototype.extendModel.call(this, sourceModel), self = this, dataSourceName, domainName, domainResourceId;\n        model.set('openInAdHocDesigner', false);    // We need to pre-generate the domain name based on the data source name.\n        // And because we haven't set listeners for model's changes (we'll do this later)\n        // we have to generate resourceID ourselves\n        // We need to pre-generate the domain name based on the data source name.\n        // And because we haven't set listeners for model's changes (we'll do this later)\n        // we have to generate resourceID ourselves\n        dataSourceName = sourceModel.dataSource.label;\n        domainName = dataSourceName + ' Domain';\n        domainResourceId = ResourceModel.generateResourceName(domainName);\n        model.set('label', domainName);\n        model.set('name', domainResourceId);\n        model.validation = _.extend({}, ResourceModel.prototype.validation, {\n            label: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.not.empty.label']\n                },\n                {\n                    maxLength: ResourceModel.settings.LABEL_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.label']\n                }\n            ],\n            name: [\n                {\n                    required: true,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.not.empty.name']\n                },\n                {\n                    maxLength: ResourceModel.settings.NAME_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.name']\n                },\n                {\n                    doesNotContainCharacters: ResourceModel.settings.NAME_NOT_SUPPORTED_SYMBOLS,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.invalid.chars.name']\n                }\n            ],\n            description: [\n                { required: false },\n                {\n                    maxLength: ResourceModel.settings.DESCRIPTION_MAX_LENGTH,\n                    msg: i18n['resource.datasource.saveDomainDialog.validation.too.long.description']\n                }\n            ],\n            parentFolderUri: [{\n                fn: function (value) {\n                    if (!self.options.skipLocation) {\n                        if (_.isNull(value) || _.isUndefined(value) || _.isString(value) && value === '') {\n                            return i18n['resource.datasource.saveDomainDialog.validation.not.empty.parentFolderIsEmpty'];\n                        }\n                        if (value.slice(0, 1) !== '/') {\n                            return i18n['resource.datasource.saveDomainDialog.validation.folder.not.found'].replace('{0}', value);\n                        }\n                    }\n                }\n            }]\n        });\n        return model;\n    },\n    _onOpenInAdHocDesignerChange: function () {\n        var textId = this._getLabelForSaveButton();\n        this.changeButtonLabel('save', i18n[textId]);\n    },\n    _getLabelForSaveButton: function (model) {\n        // this dialog can be called with any model\n        model = model || this.model;\n        var saveButtonLabel = 'resource.datasource.saveDialog.save';\n        if (!!model.get('openInAdHocDesigner')) {\n            saveButtonLabel = 'resource.datasource.saveDomainDialog.saveAndOpenDesigner';\n        }\n        return saveButtonLabel;\n    },\n    _onSaveDialogCancelButtonClick: function () {\n        var self = this, msg = 'You are about to cancel the creation of a new domain.<br/>If You wish to create a domain in the future,<br/>You will need to go through the regular Domain Designer.<br/>The data source, however, has successfully been saved.', confirm = $(standardConfirmTemplate);\n        confirm.find('.body').html(msg);\n        dialogs.popupConfirm.show(confirm.get(0), true, {\n            okButtonSelector: '[name=buttonOK]',\n            cancelButtonSelector: '[name=buttonCancel]'\n        }).done(function () {\n            self._closeDialog();\n            if (_.isFunction(self.options.success)) {\n                self.options.success();\n            }\n        });\n    },\n    performSave: function () {\n        var self = this;\n        this.model.save().done(function () {\n            self._closeDialog();\n            if (_.isFunction(self.options.success)) {\n                self.options.success();\n            }\n        });\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.domainNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.domainName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (model.isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDomainDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\\n<!--\\n<div class=\\\"control checkBox toggle\\\">\\n    <label for=\\\"__jrs_openInAdHocDesigner\\\" class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDomainDialog.openInAdhoc']}}</label>\\n    <input type=\\\"checkbox\\\" name=\\\"openInAdHocDesigner\\\" id=\\\"__jrs_openInAdHocDesigner\\\" {{ if (model.openInAdHocDesigner) { }}checked=\\\"checked\\\"{{ } }} />\\n</div>\\n-->\";","export default \"<div class=\\\"usageTooltip\\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n    {{- i18n['resource.datasource.createDomain.useTooltip']}}.</div>\\n\\n<div class=\\\"tableHolder\\\">\\n    <table class=\\\"table\\\" unselectable=\\\"on\\\" onselectstart=\\\"return false\\\">\\n        <tbody>\\n\\n        <tr class=\\\"header\\\">\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.show']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.fieldName']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.displayLabel']}}</div></td>\\n            <td class=\\\"jrs-grid-cell\\\"><div class=\\\"jrs-grid-cell-content\\\">{{- i18n['resource.datasource.createDomain.table.fields.type']}}</div></td>\\n        </tr>\\n\\n        {{_.each(columns, function(field, y) { }}\\n        <tr class=\\\"bodyCell\\\" data-fieldId=\\\"{{- y }}\\\">\\n            <td class=\\\"jrs-grid-cell cell_1\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <input type=\\\"checkbox\\\" name=\\\"show\\\" {{- field.show ? \\\"checked\\\" : \\\"\\\" }} />\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_2\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    {{- field.name }}\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_3\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <input type=\\\"text\\\" name=\\\"label\\\" value=\\\"{{- field.label }}\\\" />\\n                    <span class=\\\"message warning\\\"></span>\\n                </div>\\n            </td>\\n            <td class=\\\"jrs-grid-cell cell_4\\\">\\n                <div class=\\\"jrs-grid-cell-content\\\">\\n                    <select name=\\\"javaType\\\">\\n                    {{ _.each(javaTypes, function(javaType) { }}\\n                        <option value=\\\"{{- javaType }}\\\" {{- javaType === field.javaType ? \\\"selected\\\" : \\\"\\\"}}>{{- i18n[javaTypeMapper[javaType]]}}</option>\\n                    {{ }); }}\\n                    </select>\\n                </div>\\n            </td>\\n        </tr>\\n        {{ }); }}\\n        </tbody>\\n    </table>\\n</div>\\n\\n<div class=\\\"usageDescription\\\">{{- i18n['resource.datasource.createDomain.useTooptip.firstPart']}}.</div>\\n\\n<div class=\\\"usageDescription2\\\">{{- i18n['resource.datasource.createDomain.useTooptip.secondPart']}}.</div>\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport javaTypeMapper from 'js-sdk/src/common/enum/javaTypeMapper';\nimport javaTypes from './enum/javaTypes';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport SimpleDomainModel from './SimpleDomainModel';\nimport DialogWithModelInputValidation from 'js-sdk/src/common/component/dialog/DialogWithModelInputValidation';\nimport DomainSaveDialogView from '../saveDialog/DomainSaveDialogView';\nimport standardConfirmTemplate from 'js-sdk/src/common/templates/standardConfirm.htm';\nimport simpleDomainDialogTemplate from './template/simpleDomainDialogTemplate.htm';\nimport dialogs from '../../components/components.dialogs';\nimport {redirectToUrl} from \"../../util/utils.common\";\n\nexport default DialogWithModelInputValidation.extend({\n    hasChanges: false,\n    modelIsValid: true,\n    theDialogIsOpen: false,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = options;\n        this.dataSource = options.dataSource ? options.dataSource : {};\n        var saveButtonLabel = 'resource.datasource.createDomain.save';\n        var cancelButtonLabel = 'resource.datasource.createDomain.cancel';\n        this.model = new SimpleDomainModel({}, options);\n        DialogWithModelInputValidation.prototype.constructor.call(this, {\n            modal: true,\n            model: this.model,\n            width: 400,\n            additionalCssClasses: 'dataSourceCreateNewDomainDialog',\n            title: i18n['resource.datasource.createDomain.dialogTitle'],\n            content: '',\n            buttons: [\n                {\n                    label: i18n[saveButtonLabel],\n                    action: 'save',\n                    primary: true\n                },\n                {\n                    label: i18n[cancelButtonLabel],\n                    action: 'cancel',\n                    primary: false\n                }\n            ]\n        });\n        this.on('button:save', _.bind(this._onSaveButtonClick, this));\n        this.on('button:cancel', _.bind(this._onCancelButtonClick, this));\n        this.model.on('validationPassed', _.bind(this.clearValidationErrors, this));\n        this.model.on('validationFailed', _.bind(this.validationFailed, this));\n    },\n    initialize: function (options) {\n        DialogWithModelInputValidation.prototype.initialize.apply(this, arguments);\n    },\n    updateModelProperty: function (e) {\n        var target = $(e.target), type = target.attr('type'), name = target.attr('name'), fieldId = target.parents('tr').attr('data-fieldId'), columns, value;\n        if (type === 'checkbox' || type === 'radio') {\n            value = target.is(':checked');\n        } else {\n            value = $.trim(target.val());\n        }\n        columns = this.model.get('columns');\n        columns[fieldId][name] = value;\n        this.model.set('columns', columns);\n        this.model.validate('columns');\n        if (this.hasChanges === false) {\n            this.changeButtonLabel('save', i18n['resource.datasource.createDomain.applyAndSave']);\n        }\n        this.hasChanges = true;\n    },\n    startDialog: function () {\n        var self = this;\n        if (this.theDialogIsOpen) {\n            return;\n        }\n        this.bindValidation();\n        this.model.fetchMetadata(this.dataSource).done(function () {\n            DialogWithModelInputValidation.prototype.open.apply(self, arguments);\n            var content = _.template(simpleDomainDialogTemplate, {\n                i18n: i18n,\n                javaTypes: javaTypes,\n                columns: self.model.get('columns'),\n                javaTypeMapper: javaTypeMapper\n            });\n            self.setContent(content);\n            self._center();\n        });\n        this.theDialogIsOpen = true;\n    },\n    // block default validation handlers\n    fieldIsValid: function () {\n    },\n    fieldIsInvalid: function (error) {\n    },\n    clearValidationErrors: function () {\n        this.$el.find('.error').removeClass('error');\n        this.modelIsValid = true;\n    },\n    validationFailed: function (errors) {\n        var self = this;\n        this.clearValidationErrors();\n        this.modelIsValid = false;\n        _.each(errors, function (error) {\n            var errorRow = $(self.$el.find('table tr').get(error.rowId + 1));\n            errorRow.find('[name=' + error.name + ']').parent().addClass('error');\n            errorRow.find('.message').text(i18n['resource.datasource.createDomain.validation.missing.label']);\n        });\n    },\n    _closeDialog: function () {\n        if (!this.theDialogIsOpen) {\n            return;\n        }\n        this.unbindValidation();\n        this.clearValidationErrors();\n        DialogWithModelInputValidation.prototype.close.apply(this, arguments);\n        this.theDialogIsOpen = false;\n    },\n    _onCancelButtonClick: function () {\n        var self = this, msg = i18n['resource.datasource.createDomain.cancelMessage'], confirm = $(standardConfirmTemplate);\n        confirm.find('.body').html(msg);\n        dialogs.popupConfirm.show(confirm.get(0), true, {\n            okButtonSelector: '[name=buttonOK]',\n            cancelButtonSelector: '[name=buttonCancel]'\n        }).done(function () {\n            self._closeDialog();\n            if (self.options.cancel) {\n                self.options.cancel();\n            }\n        });\n    },\n    _onSaveButtonClick: function () {\n        if (!this.modelIsValid) {\n            return;\n        }\n        this._closeDialog();\n        this.saveDialog = new DomainSaveDialogView(_.extend({}, this.options, {\n            model: this.model,\n            success: function () {\n                redirectToUrl(jrsConfigs.contextPath + '/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource&resourceType=domain');\n            }\n        }));\n        this.saveDialog.startSaveDialog();\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport _ from 'underscore';\nimport i18n from '../../i18n/all.properties';\nimport SimpleDomainView from '../fileDataSource/SimpleDomainView';\nimport BaseSaveDialogView from './BaseSaveDialogView';\nimport textDataSourceSaveDialogTemplate from './template/textDataSourceSaveDialogTemplate.htm';\n\nexport default BaseSaveDialogView.extend({\n    saveDialogTemplate: textDataSourceSaveDialogTemplate,\n    constructor: function (options) {\n        options || (options = {});\n        this.options = _.extend({}, options);\n        this.options.isEmbedded = !!this.options.saveFn;\n        BaseSaveDialogView.prototype.constructor.call(this, options);\n    },\n    initialize: function () {\n        this.preSelectedFolder = this.options.model.options.parentFolderUri;\n        BaseSaveDialogView.prototype.initialize.apply(this, arguments);\n    },\n    extendModel: function (sourceModel) {\n        var model = BaseSaveDialogView.prototype.extendModel.call(this, sourceModel);\n        model.set('prepareDataForReporting', !(this.options.isEmbedded || this.options.isEditMode));\n        return model;\n    },\n    _getLabelForSaveButton: function (model) {\n        return \"resource.datasource.saveDialog.save\";\n    },\n    _saveSuccessCallback: function (model, data) {\n        if (!!this.model.get('prepareDataForReporting')) {\n            var simpleDomainView = new SimpleDomainView({\n                cancel: this.options.success,\n                dataSource: this.model.toJSON()\n            });\n            simpleDomainView.startDialog();\n        } else {\n            if (_.isFunction(this.options.success)) {\n                this.options.success();\n            }\n        }\n        this._closeDialog();\n    }\n});","export default \"<label title=\\\"{{- i18n['resource.datasource.saveDialog.dataSourceNameTitle']}}\\\" class=\\\"control input text \\\">\\n\\n    <js-templateNonce></js-templateNonce>\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.dataSourceName']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" value=\\\"{{- model.label }}\\\" name=\\\"label\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.resourceIDTitle']}}\\\" class=\\\"control input text \\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.resourceID']}} ({{- i18n['required.field']}}):</span>\\n\\t<input type=\\\"text\\\" {{ if (isEditMode) { }}readonly=\\\"readonly\\\"{{ } }} value=\\\"{{- model.name }}\\\" name=\\\"name\\\">\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n\\n<label title=\\\"{{- i18n['resource.datasource.saveDialog.descriptionTitle']}}\\\" class=\\\"control textArea\\\">\\n\\t<span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.description']}}</span>\\n\\t<textarea type=\\\"text\\\" name=\\\"description\\\">{{- model.description }}</textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n\\n{{ if (skipLocation === false) { }}\\n<div class=\\\"control groupBox treeBox\\\">\\n\\t<div class=\\\"content\\\">\\n\\t\\t<div class=\\\"header \\\">\\n\\t\\t\\t<div class=\\\"title\\\"></div>\\n\\t\\t</div>\\n        <ul class=\\\"list collapsible folders\\\"></ul>\\n\\t</div>\\n</div>\\n\\n<label class=\\\"control textArea\\\">\\n\\t<textarea type=\\\"text\\\" class=\\\"hidden\\\" name=\\\"parentFolderUri\\\"></textarea>\\n\\t<span class=\\\"message warning\\\"></span>\\n</label>\\n{{ } }}\\n\";","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport BaseSaveDialogView from '../saveDialog/BaseSaveDialogView';\nimport TextDataSourceSaveDialogView from '../saveDialog/TextDataSourceSaveDialogView';\nimport DomainSaveDialogView from '../saveDialog/DomainSaveDialogView';\n\nvar registeredDialogs = {};\n\nregisteredDialogs['textDataSource'] = TextDataSourceSaveDialogView;\nregisteredDialogs['domain'] = DomainSaveDialogView;\n\nexport default {\n    getView: function (dataSourceType) {\n        var constructor;    // by default\n        // by default\n        constructor = BaseSaveDialogView;\n        if (registeredDialogs[dataSourceType]) {\n            constructor = registeredDialogs[dataSourceType];\n        }\n        return constructor;\n    }\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\n\nexport default Backbone.Collection.extend({\n    url: jrsConfigs.contextPath + '/rest_v2/customDataSources',\n    parse: function (response) {\n        var result = [];\n        if (response.definition) {\n            _.each(response.definition, function (type) {\n                result.push({ id: type });\n            });\n        }\n        return result;\n    }\n});","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport $ from 'jquery';\nimport i18n from '../i18n/all.properties';\nimport BaseDataSourceModel from './model/BaseDataSourceModel';\nimport TouchController from '../util/touch.controller';\nimport featureDetection from 'js-sdk/src/common/util/featureDetection';\nimport history from '../util/historyHelper';\nimport dataSourceViewFactory from './factory/dataSourceViewFactory';\nimport dataSourceResourceTypes from './enum/dataSourceResourceTypes';\nimport saveDialogViewFactory from './factory/saveDialogViewFactory';\nimport dataSourceMainTemplate from './template/dataSourceMainTemplate.htm';\nimport dialogErrorMessageTemplate from 'js-sdk/src/common/templates/dialogErrorPopupTemplate.htm';\nimport jrsConfigs from 'js-sdk/src/jrs.configs';\nimport CustomDataSourcesCollection from './collection/CustomDataSourceCollection';\nimport awsSettings from '../settings/awsSettings.settings';\nimport settingsUtility from './util/settingsUtility';\nimport redirectToUrl from '../util/redirectToUrlUtil';\nimport dialogs from '../components/components.dialogs';\n\nvar CreateDomainLink = _.template(jrsConfigs.contextPath + '/domaindesigner.html?dataSource={{-resourceUri}}');\n\nexport default Backbone.View.extend({\n    dataSourceType: false,\n    dataSourceView: false,\n    saveDialog: false,\n    events: {\n        'change select[name=\\'dataSourceType\\']': 'onDataSourceTypeChange',\n        'click #saveBtn, #createDomainBtn': 'onSaveClick',\n        'click #cancelBtn': 'onCancelClick'\n    },\n    historyBackToken: 'DataSourceControllerHistory',\n    constructor: function (options) {\n        let args = Array.prototype.slice.call(arguments, 0);\n\n        // since the options object will be changed, we need to make the copy of it\n        options = $.extend(true, {}, options);\n        args[0] = options;\n        this.isEditMode = options.isEditMode;\n        Backbone.View.apply(this, args);\n    },\n    initialize: function (options) {\n        this.options = options;\n        this.dataSourceType = undefined;\n        featureDetection.supportsTouch && this.initSwipeScroll();\n        history.saveReferrer(this.historyBackToken);\n\n        // Starting the game !\n        // from the early beginning we need to have answers to 2 questions:\n        // a) what custom data sources are defined in XML files on the server ?\n        // b) are we in the editing mode ? if yes, then we need to get that model from the server\n        //\n        // As you will see below, these questions need async requests to server, and because of\n        // this we are creating two deferred objects\n        // allows us to wait till we get 'custom data sources' from xml files\n        // Starting the game !\n        // from the early beginning we need to have answers to 2 questions:\n        // a) what custom data sources are defined in XML files on the server ?\n        // b) are we in the editing mode ? if yes, then we need to get that model from the server\n        //\n        // As you will see below, these questions need async requests to server, and because of\n        // this we are creating two deferred objects\n        // allows us to wait till we get 'custom data sources' from xml files\n        this.fetchingCustomDataSourcesDeferred = $.Deferred();    // allows us to wait till we fetch the model\n        // allows us to wait till we fetch the model\n        this.fetchingTheModelDeferred = $.Deferred();    // So, fetching 'custom data sources' from the server\n        // (these 'custom data sources' defined in XML files)\n        // So, fetching 'custom data sources' from the server\n        // (these 'custom data sources' defined in XML files)\n        this.customDataSourceCollection = new CustomDataSourcesCollection();\n        this.customDataSourceCollection.fetch().done(_.bind(function () {\n            this.renderDataSourceContainer();\n        }, this));\n        var deepDefaults = settingsUtility.deepDefaults(options, { awsSettings: awsSettings });    // Also, deciding if we are in the editing mode, and if we are, then we need to fetch the model\n        // If we aren't, then we can just resolve the deferred object\n        // Also, deciding if we are in the editing mode, and if we are, then we need to fetch the model\n        // If we aren't, then we can just resolve the deferred object\n        if (this.options.resourceUri) {\n            // we are in the editing an existing DS mode, so we need to fetch it from the server\n            var self = this, modelToEdit = new BaseDataSourceModel({ uri: this.options.resourceUri });\n            modelToEdit.fetch().then(function (data, textStatus, jqXHR) {\n                self.dataSource = modelToEdit.attributes;\n                self.dataSourceType = dataSourceViewFactory.getViewType(jqXHR.getResponseHeader('Content-Type'), self.dataSource);\n                self.fetchingTheModelDeferred.resolve();\n            });\n        } else if (this.options.dataSource && this.options.dataSourceClientType) {\n            // data source and it's client type are available. So, it's edit mode and no fetching is required.\n            this.dataSource = this.options.dataSource;\n            this.dataSourceType = dataSourceViewFactory.getViewType(this.options.dataSourceClientType, this.options.dataSource);\n            this.fetchingTheModelDeferred.resolve();\n        } else {\n            // if this product working on AWS - by default we create AWS Data Source\n            if (deepDefaults.awsSettings.productTypeIsEc2) {\n                this.dataSourceType = dataSourceViewFactory.getViewType(dataSourceResourceTypes.AWS, null);\n            }\n            this.fetchingTheModelDeferred.resolve();\n        }\n    },\n    renderDataSourceContainer: function () {\n        // key in dataSourceLabelSuffixes should be equal to corresponding key in dataSourceResourceTypes\n        var dataSourceLabelSuffixes = {\n            AZURE_SQL: 'AzureSql',\n            AWS: 'Aws',\n            BEAN: 'Bean',\n            JDBC: 'JDBC',\n            JNDI: 'JNDI',\n            VIRTUAL: 'Virtual'\n        };    // fill in the pre-existent data sources\n        // fill in the pre-existent data sources\n        var dataSourceTypeOptions = _.chain(dataSourceLabelSuffixes).map(function (value, key) {\n            return {\n                value: dataSourceResourceTypes[key].toLowerCase(),\n                label: i18n['resource.dataSource.dstype' + value]\n            };\n        }).value();    // now, add custom data sources which are defined in XML files on the server\n        // now, add custom data sources which are defined in XML files on the server\n        this.customDataSourceCollection.forEach(function (element) {\n            var currentCustomDataSourceType = element.get('id');    // disable file data sources for now\n            //        if (currentCustomDataSourceType in {\"xlsDataSource\": 1, \"xlsxDataSource\": 1, \"textDataSource\":1}) {\n            //            return;\n            //        }\n            // disable file data sources for now\n            //        if (currentCustomDataSourceType in {\"xlsDataSource\": 1, \"xlsxDataSource\": 1, \"textDataSource\":1}) {\n            //            return;\n            //        }\n            dataSourceTypeOptions.push({\n                value: currentCustomDataSourceType,\n                label: i18n[currentCustomDataSourceType + '.name'] ? i18n[currentCustomDataSourceType + '.name'] : currentCustomDataSourceType\n            });\n        });    // sort them\n        // sort them\n        dataSourceTypeOptions = _.sortBy(dataSourceTypeOptions, function (option) {\n            return option.label.toLowerCase();\n        });    // and display the interface header and select of data source type\n        // and display the interface header and select of data source type\n        this.$el.append(_.template(dataSourceMainTemplate, {\n            dataSourceTypeOptions: dataSourceTypeOptions,\n            i18n: i18n,\n            supportsTouch: featureDetection.supportsTouch,\n            isEditMode: this.isEditMode\n        }));    // resolve deferred object\n        // resolve deferred object\n        this.fetchingCustomDataSourcesDeferred.resolve();\n    },\n    initSwipeScroll: function () {\n        var display = this.$('#stepDisplay');\n        display.length && new TouchController(display.parent()[0], display.parent().parent()[0], {});\n    },\n    render: function () {\n        $.when(this.fetchingCustomDataSourcesDeferred, this.fetchingTheModelDeferred).done(_.bind(function () {\n            this._render();\n        }, this));\n    },\n    _render: function () {\n        var saveParams = {};\n        if (this.dataSourceView) {\n            saveParams = {\n                label: this.dataSourceView.model.get('label'),\n                name: this.dataSourceView.model.get('name'),\n                description: this.dataSourceView.model.get('description')\n            };\n        }\n        this.dataSourceView && this.dataSourceView.remove();\n        delete this.dataSourceView;    // if we already removed view, \"body\" element was also removed, so we need to recreate it for new view manually\n        // if we already removed view, \"body\" element was also removed, so we need to recreate it for new view manually\n        if (this.$('.row.inputs .body:eq(0)').length === 0) {\n            this.$('.row.inputs > .column > .content').append('<div class=\\'body dataSourceBody\\'></div>');\n        }\n        if (!this.dataSourceType) {\n            this.dataSourceType = dataSourceResourceTypes.JDBC.toLowerCase();    // Use it for development reasons: you can pre-select any DS type\n            //this.dataSourceType = \"MongoDbDataSource\";\n        }\n        this.dataSourceView = dataSourceViewFactory.getView(_.extend(this.options, {\n            dataSourceType: this.dataSourceType,\n            dataSource: _.extend({}, this.dataSource, saveParams),\n            el: this.$('.row.inputs .body:eq(0)')\n        }));    // set specific class to help customize specific page with css styles\n        // set specific class to help customize specific page with css styles\n        this.$('.dataSourceBody').attr('dstype', this.dataSourceType.toLowerCase());\n        this.$('select[name=\\'dataSourceType\\']').val(this.dataSourceType);\n        if (this.dataSource && this.dataSource.label) {\n            this.$('.pageHeader .pageHeader-title-text').text(this.dataSource.label);\n        }\n        return this;\n    },\n    onDataSourceTypeChange: function (e) {\n        var selectedType = $(e.target).val();\n        if (this.dataSourceType != selectedType) {\n            this.dataSourceType = selectedType;\n            this.render();\n        }\n    },\n    _prepareSaveDialog: function (createDomainMode) {\n        this.saveDialog && this.saveDialog.remove();\n        var SaveDialog = saveDialogViewFactory.getView(this.dataSourceType);\n        this.saveDialog = new SaveDialog(_.extend({}, this.options, {\n            model: this.dataSourceView.model,\n            saveFn: this.options.saveFn,\n            success: _.bind(createDomainMode ? this._onSaveAndCreateDomainDone : this._onSaveDone, this),\n            error: _.bind(this._onSaveFail, this)\n        }));\n    },\n    onSaveClick: function (e) {\n        if (!this.dataSourceView.model.isValid(true)) {\n            return;\n        }\n        var self = this, createDomainMode = e && e.currentTarget.id == 'createDomainBtn', funcOnceValidationPassed = function () {\n            self._prepareSaveDialog(createDomainMode);\n            self.saveDialog.startSaveDialog();\n        };    // validationMethodOnSaveClick is moved to view in text-data-source branch,\n        // but let's have them both (in model and in a view) here till merged\n        // validationMethodOnSaveClick is moved to view in text-data-source branch,\n        // but let's have them both (in model and in a view) here till merged\n        if (!_.isUndefined(this.dataSourceView.model.validationMethodOnSaveClick)) {\n            this.dataSourceView.model.validationMethodOnSaveClick(funcOnceValidationPassed);\n            return;\n        } else if (!_.isUndefined(this.dataSourceView.validationMethodOnSaveClick)) {\n            this.dataSourceView.validationMethodOnSaveClick(funcOnceValidationPassed);\n            return;\n        }\n        funcOnceValidationPassed();\n    },\n    _onSaveDone: function () {\n        redirectToUrl.redirect(jrsConfigs.contextPath + '/flow.html?_flowId=repositoryConfirmFlow&resourceType=dataSource');\n    },\n    _onSaveAndCreateDomainDone: function (resourceModel) {\n        redirectToUrl.redirect(CreateDomainLink({ resourceUri: resourceModel.get('uri') }));\n    },\n    _onSaveFail: function (model, xhr) {\n        if (this.saveDialog) {\n            this.saveDialog.close();\n            this.saveDialog.remove();\n        }\n        var self = this, errors = false;\n        var handled = false;\n        try {\n            errors = JSON.parse(xhr.responseText);\n        } catch (e) {\n        }\n        if (!_.isArray(errors)) {\n            errors = [errors];\n        }\n        _.each(errors, function (error) {\n            var field = false, msg = false;\n            if (!error) {\n                return;\n            }\n            if (error.errorCode === 'mandatory.parameter.error') {\n                if (error.parameters && error.parameters[0]) {\n                    msg = i18n['resource.datasource.saveDialog.parameterIsMissing'];\n                    field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                }\n            } else if (error.errorCode === 'illegal.parameter.value.error') {\n                if (error.parameters && error.parameters[0]) {\n                    field = error.parameters[0].substr(error.parameters[0].indexOf('.') + 1);\n                    msg = i18n['resource.datasource.saveDialog.parameterIsWrong'];\n                }\n            }    // converting field names\n            // converting field names\n            if (field === 'ConnectionUrl') {\n                field = 'connectionUrl';\n            }\n            if (msg && field) {\n                self.dataSourceView.invalidField('[name=' + field + ']', msg);\n                handled = true;\n            }\n        });\n        if (handled === false) {\n            // otherwise, proceed with common error handling\n            var errTempl = _.template(dialogErrorMessageTemplate, {\n                message: 'Failed to save data source.',\n                errorCode: errors[0] ? errors[0].errorCode : null,\n                errorMsg: errors.message,\n                respText: xhr.responseText\n            });\n            dialogs.errorPopup.show(errTempl);\n        }\n    },\n    onCancelClick: function () {\n        if (this.options.cancelFn) {\n            this.options.cancelFn();\n        } else {\n            history.restore(this.historyBackToken);\n        }\n    }\n});","export default \"<div class=\\\"column decorated primary addNewDataSource\\\">\\n\\n\\n    <js-templateNonce></js-templateNonce>\\n    <div class=\\\"content hasFooter\\\">\\n        <div class=\\\"pageHeader\\\">\\n            <div class=\\\"pageHeader-title\\\">\\n                <div class=\\\"pageHeader-title-icon\\\">\\n                    <span class=\\\"icon datasource\\\"></span>\\n                </div>\\n                <div class=\\\"pageHeader-title-text\\\">\\n                    {{ if (!isEditMode) { }}\\n                    {{- i18n['resource.dataSource.title.new'] }}\\n                    {{ } }}\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"body {{ if (supportsTouch) { }}swipeScroll{{ } }}\\\">\\n            <div id=\\\"stepDisplay\\\">\\n                <fieldset class=\\\"row instructions\\\">\\n                    <legend class=\\\"offLeft\\\"><span>{{- i18n[\\\"resource.dataSource.instructions\\\"] }}</span></legend>\\n                    <h2 class=\\\"textAccent02\\\">\\n                        {{ if (isEditMode) { }}\\n                        {{- i18n[\\\"resource.dataSource.instructions.form.header.edit\\\"] }}\\n                        {{ } else { }}\\n                        {{- i18n[\\\"resource.dataSource.instructions1\\\"] }}\\n                        {{ } }}\\n\\n                    </h2>\\n                </fieldset>\\n\\n                <fieldset class=\\\"row inputs oneColumn\\\">\\n                    <legend class=\\\"offLeft\\\"><span>{{- i18n[\\\"resource.dataSource.inputs\\\"] }}</span></legend>\\n                    <div class=\\\"column primary\\\">\\n                        <div class=\\\"content\\\">\\n                            <div class=\\\"header\\\">\\n                                <div class=\\\"title {{ if (isEditMode) { }}disabled{{ } }}\\\">{{- i18n[\\\"resource.dataSource.type\\\"] }}</div>\\n                                <label class=\\\"control select inline\\\" title=\\\"{{- i18n['resource.dataSource.dsType'] }}\\\">\\n                                    <span class=\\\"wrap offLeft\\\">{{- i18n['resource.dataSource.dsType'] }}</span>\\n                                    <select name=\\\"dataSourceType\\\" {{ if (isEditMode) { }}disabled=\\\"disabled\\\"{{ } }}>\\n                                        {{ _.each(dataSourceTypeOptions, function(option) { }}\\n                                        <option value=\\\"{{- option.value }}\\\">{{- option.label }}</option>\\n                                        {{ }); }}\\n                                    </select>\\n                                    <span class=\\\"message warning\\\"></span>\\n                                </label>\\n                            </div>\\n                            <div class=\\\"body dataSourceBody\\\"></div>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n            </div>\\n        </div>\\n        <div class=\\\"footer \\\">\\n            <fieldset id=\\\"wizardNav\\\">\\n                <button class=\\\"button primary action up\\\" id=\\\"saveBtn\\\"><span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.save'] }}</span><span class=\\\"icon\\\"></span></button>\\n                <button class=\\\"button up action\\\" id=\\\"cancelBtn\\\"><span class=\\\"wrap\\\">{{- i18n['resource.datasource.saveDialog.cancel'] }}</span><span class=\\\"icon\\\"></span></button>\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\";"],"sourceRoot":""}