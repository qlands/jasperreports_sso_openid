{"version":3,"sources":["webpack://jrs-ui/./src/i18n/bundleStore.js","webpack://jrs-ui/../js-sdk/src/common/enum/loggingLevels.js","webpack://jrs-ui/../js-sdk/src/common/logging/Level.js","webpack://jrs-ui/../js-sdk/src/common/logging/LogItem.js","webpack://jrs-ui/../js-sdk/src/common/logging/Log.js","webpack://jrs-ui/../js-sdk/src/common/logging/appender/ConsoleAppender.js","webpack://jrs-ui/../js-sdk/src/common/logging/LoggerManager.js","webpack://jrs-ui/../js-sdk/src/common/logging/logger.js","webpack://jrs-ui/../js-sdk/src/common/logging/loggerConfig.js","webpack://jrs-ui/../js-sdk/src/common/util/xssUtil.js"],"names":["MERGED_BUNDLES_NAME","store","DEBUG","INFO","WARN","ERROR","Level","level","name","this","toUpperCase","i","prototype","isGreaterOrEqual","globalLevel","levelNumber","getLevel","toString","levels","LogItem","options","hasOwnProperty","k","l","length","Error","message","toArray","date","h","m","s","ms","logParams","push","time","getHours","getMinutes","getSeconds","getMilliseconds","id","file","line","concat","args","createLogMethod","type","_prepareLogItem","arguments","Log","settings","callback","_id","_callback","logItem","Array","slice","call","Date","stack","res","split","match","debug","info","warn","error","ConsoleAppender","console","f","assert","clear","count","dir","dirxml","group","groupCollapsed","groupEnd","log","markTimeline","profile","profileEnd","table","timeEnd","timeStamp","trace","write","apply","e","Function","ex","appenderConstructors","LoggerManager","initialize","_","defaults","enabled","appenders","appenderInstances","loggers","attributes","appender","set","get","attr","value","register","_processLogItem","disable","enable","setLevel","_appendLogItem","process","htmlTagWhiteList","escapeMap","regexKeys","map","str","arr","Object","replace","unescapeMap","hardEscapeRegex","RegExp","join","_stringCanonicObfuscator","obfChar","obfuscatedStr","charAt","canonicExclusionMap","key","obfuscStr","addCanonicObfuscArr","c","addObfuscStr","reverseCanonicExclusionMap","canonicExclusionRegex","reverseCanonicExclusionRegex","_getXssNonce","jrsConfigs","_getNoncePrefix","undefined","noncePrefix","xssNonce","_getHtmlTagWhitelist","configHtmlTagWhitelist","_getConfigHtmlTagWhitelist","whitelistInitialized","startsWith","substr","_getWhitelistLeftRegex","leftTagRegexp","whitelistRegexInsert","_getWhitelistRightRegex","rightTagRegexp","_defaultAttribSoftEscapeMap","_getAttribSoftHtmlEscapeMap","attribSoftEscapeArr","configAttribSoftHtmlEscapeMap","configRegexArr","configReplArr","err","softHtmlEscape","string","String","indexOf","noncePref","substring","test","canonicElem","document","createElement","innerHTML","_canonicalize","whiteList","whitelistRegexStr","rtLeftTagRegexp","rtRightTagRegexp","tmpLeftTagRegexp","tmpRightTagRegexp","lastIndex","escapeTags","tmpTagWhiteList","attribSoftHtmlEscapeMap","regexArr","replArr","regex","replacement","hardEscape","unescape","unescapeRegexp"],"mappings":"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","file":"_chunks/chunk.6282.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n// This bundle store will be filled with the actual bundles loaded from the server\n\nexport const MERGED_BUNDLES_NAME = \"all\";\nexport const store = {};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\nexport default {\n    DEBUG: 100,\n    INFO:  200,\n    WARN:  300,\n    ERROR: 400\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\nimport levels from \"../enum/loggingLevels\";\n\nfunction Level(level, name) {\n    this.level = level;\n    this.name = name.toUpperCase();\n}\n\nLevel.prototype.isGreaterOrEqual = function(globalLevel) {\n    var levelNumber = (globalLevel instanceof Level ? globalLevel : Level.getLevel(globalLevel) ).level;\n    return this.level >= levelNumber;\n};\nLevel.prototype.toString = function() {\n    return this.name;\n};\nLevel.getLevel = function(level) {\n    return Level[level.toUpperCase()];\n};\n\nfor (var i in levels) {\n    if (levels.hasOwnProperty(i)) {\n        Level[i] = new Level(levels[i], i);\n    }\n}\n\nexport default Level;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\nfunction formatTime(date) {\n    var timeString,\n        h = date.getHours().toString(),\n        m = date.getMinutes().toString(),\n        s = date.getSeconds().toString(),\n        ms = date.getMilliseconds();\n\n    if (h.length === 1) {\n        h = \"0\" + h;\n    }\n    if (m.length === 1) {\n        m = \"0\" + m;\n    }\n    if (s.length === 1) {\n        s = \"0\" + s;\n    }\n\n    timeString = h + \":\" + m + \":\" + s + \".\" + ms;\n\n    return timeString;\n}\n\nfunction LogItem(options) {\n    for (var i in options) {\n        if (options.hasOwnProperty(i)) {\n            if (i === \"args\") {\n                for (var k = 0, l = options[i].length; k < l; k++) {\n                    if (options[i][k] instanceof Error) {\n                        options[i][k] = options[i][k].message;\n                    }\n                }\n            }\n            this[i] = options[i];\n        }\n    }\n}\n\nLogItem.prototype.toArray = function() {\n    var logParams = [];\n    logParams.push(formatTime(this.time));\n    logParams.push(\"[\" + this.id + \"]\");\n    if (this.file !== \"unknown\"){\n        logParams.push(\"[\" + this.file + \":\" + this.line + \"]\");\n    }\n    logParams.push(\"[\" + this.level.toString() + \"] -\");\n    logParams = logParams.concat(this.args);\n\n    return logParams;\n};\n\nexport default LogItem;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\nimport Level from \"./Level\";\nimport LogItem from \"./LogItem\";\n\nfunction createLogMethod(type) {\n    return function() {\n        return this._prepareLogItem({\n            level: Level.getLevel(type),\n            args: arguments\n        });\n    }\n}\n\nfunction Log(settings, callback) {\n    this._id = settings.id;\n    this._callback = callback;\n}\n\nLog.prototype._prepareLogItem = function(logItem) {\n    logItem.id = this._id;\n    logItem.args = Array.prototype.slice.call(logItem.args, 0);\n    logItem.time = new Date();\n\n    // TODO cross browser support\n    var stack = new Error().stack;\n    if (stack) {\n        var lineAccessingLogger = stack.split(\"\\n\")[2];\n        var res = lineAccessingLogger.match(/\\/(\\w+\\.\\w+):(\\d+)/i);\n        if (res) {\n            logItem.file = res[1];\n            logItem.line = res[2];\n        }\n    }\n    if (!logItem.file) {\n        logItem.file = \"unknown\";\n        logItem.line = \"0\";\n    }\n\n    logItem = new LogItem(logItem);\n\n    this._callback(logItem);\n    return logItem;\n};\n\nLog.prototype.debug = createLogMethod(\"debug\");\nLog.prototype.info = createLogMethod(\"info\");\nLog.prototype.warn = createLogMethod(\"warn\");\nLog.prototype.error = createLogMethod(\"error\");\n\nexport default Log;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\n/*global console */\nfunction ConsoleAppender() {}\n\nConsoleAppender.prototype.console = (function() {\n    if (typeof console === \"undefined\") {\n        var f = function() {};\n\n        return {\n            assert: f,\n            clear: f,\n            count: f,\n            debug: f,\n            dir: f,\n            dirxml: f,\n            error: f,\n            group: f,\n            groupCollapsed: f,\n            groupEnd: f,\n            info: f,\n            log: f,\n            markTimeline: f,\n            profile: f,\n            profileEnd: f,\n            table: f,\n            time: f,\n            timeEnd: f,\n            timeStamp: f,\n            trace: f,\n            warn: f\n        }\n    } else {\n        return console;\n    }\n})();\n\nConsoleAppender.prototype.write = function(logItem) {\n\n    var f = this.console.log;\n\n    switch (logItem.level.toString()) {\n    case \"DEBUG\":\n        f = this.console.debug || this.console.log;\n        break;\n    case \"INFO\":\n        f = this.console.info || this.console.log;\n        break;\n    case \"WARN\":\n        f = this.console.warn;\n        break;\n    case \"ERROR\":\n        f = this.console.error;\n        break;\n    }\n\n    try\n    {\n        f.apply(this.console, logItem.toArray());\n    }\n    catch (e)\n    {\n        try {\n            Function.prototype.apply.call(f, this.console, logItem.toArray());\n        } catch(ex) {}\n    }\n};\n\nexport default ConsoleAppender;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @author: Pavel Savushchyk\n * @version: $Id$\n */\n\n\nimport _ from \"underscore\";\nimport Log from \"./Log\";\nimport Level from \"./Level\";\nimport ConsoleAppender from \"./appender/ConsoleAppender\";\n\nvar appenderConstructors = {\n    console: ConsoleAppender\n};\n\nvar LoggerManager = function(options) {\n    this.initialize(options || {});\n};\n\n_.extend(LoggerManager.prototype, {\n\n    defaults : function() {\n        return {\n            enabled: false,\n            level: \"error\",\n            appenders: {},\n            appenderInstances: {},\n            loggers: {}\n        }\n    },\n\n    initialize: function(options) {\n        this.attributes = _.defaults(options, this.defaults());\n\n        // initialize appenders\n        var appenders = {};\n        _.each(appenderConstructors, function(appender, name){\n            appenders[name] = new appender();\n        });\n        this.set(\"appenderInstances\", appenders);\n\n    },\n\n    get: function(attr) {\n        return this.attributes[attr];\n    },\n\n    set: function(attr, value) {\n        this.attributes[attr] = value;\n    },\n\n    register: function(options) {\n        var settings = {\n            id: \"root\"\n        };\n\n        if (typeof options === \"string\" && options !== \"\") {\n            settings.id = options;\n        } else if (options && options.hasOwnProperty(\"id\")) {\n            settings.id = options.id;\n        }\n\n        if (!this.get(\"loggers\").hasOwnProperty(settings.id)) {\n            var loggers = this.get(\"loggers\");\n            loggers[settings.id] = new Log(settings, _.bind(this._processLogItem, this));\n            this.set(\"loggers\", loggers);\n        }\n\n        return this.get(\"loggers\")[settings.id];\n    },\n    disable: function() {\n        this.set(\"enabled\", false);\n    },\n    enable: function(level) {\n        if (level) {\n            this.set(\"level\", Level.getLevel(level));\n        }\n        this.set(\"enabled\", true);\n    },\n    setLevel: function(level) {\n        this.set(\"level\", level);\n    },\n\n    _processLogItem: function(logItem) {\n        if (this.get(\"enabled\") && logItem.level.isGreaterOrEqual(this.get(\"level\"))) {\n            this._appendLogItem(logItem);\n        }\n    },\n    _appendLogItem: function(logItem) {\n        var appenders = this.get(\"appenders\"),\n            appenderInstances = this.get(\"appenderInstances\");\n        for (var i in appenders) {\n            if (appenderInstances.hasOwnProperty(appenders[i])) {\n                appenderInstances[appenders[i]].write(logItem);\n            }\n        }\n    }\n});\n\nexport default LoggerManager;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport LoggerManager from './LoggerManager';\nimport config from \"./loggerConfig\";\n\nlet logger = new LoggerManager(config);\nexport default logger;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/* global process */\n\nexport default {\n    enabled : process.env.LOGGER_ENABLED !== 'false',\n    level : process.env.LOGGER_LEVEL || 'error',\n    appenders: (process.env.LOGGER_APPENDERS || \"console\").split(',')\n};","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * This is a standalone module.  jQuery,prototype, etc. - depend on this\n * @author: Borys Kolesnykov\n *\n */\n\nimport jrsConfigs from '../../jrs.configs';\n\nvar htmlTagWhiteList = 'a,abbr,acronym,address,animate,animateMotion,animateTransform,area,article,aside,b,bdi,bdo,big,blockquote,body,br,button,' +\n    'canvas,caption,center,circle,cite,clipPath,code,col,colgroup,color-profile,dd,defs,desc,details,dfn,discard,div,dl,dt,ellipse,em,' +\n    'feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistantLight,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,' +\n    'fieldset,filter,font,footer,form,h1,h2,h3,h4,h5,h6,head,' +\n    'header,hr,html,i,g,iframe,image,img,input,js-templateNonce,label,legend,li,line,linearGradient,main,map,mark,marker,mask,menu,menuitem,meta,metadata,mpath,nav,ol,option,p,path,pattern,polygon,polyline,' +\n    'pre,radialGradient,rect,section,select,set,small,span,stop,strike,strong,style,sub,summary,sup,svg,switch,symbol,table,tbody,td,text,textPath,textarea,tfoot,th,thead,title,tr,tspan,u,ul,use,view';\n\n// None of the chars in the values of the map should appear as the map key to\n// avoid multiple escaping in a case like xssUtil.hardEscape(xssUtil.hardEscape(str))\n// Also, the escapeMap keys should NOT contain any initial values of unescapeMap.map.\n// The canonicalization would be broken.  Eg. if escapeMap has a key 'c',\n// 'javas&#99;ript' won't be canonicalized to 'javascript', because canonicExclusionMap\n// would have {'&#99;': '*&*#*9*9*;*'}. '&#99;' would be excluded from canonic.\nvar escapeMap = {\n    '(': '&#40;',\n    ')': '&#41;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\n\n// here, we are escaping all the characters in str that are special in regex's.\n// The str returned here is used to further construct a regex as follows: (?: str ).\n// Eg. str = \"a{}\" results in \"a\\{\\}\" after replace().\nvar makeStringRegex = function(str){\n    return str == null ? '' : str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n};\n\n// Need to escape chars like ) and ( in order to construct correct regex later /(?: \\)|\\( )/g\nvar regexKeys = function(map) {\n    var arr = [];\n    for (var k in map) {\n        if (Object.prototype.hasOwnProperty.call(map, k))\n            arr.push(makeStringRegex(k));\n    }\n    return arr;\n};\n\n// unescapeMap is made from reverse of escapeMap + extra chars.\nvar unescapeMap = (function() {\n    var map = {\n            '&#111;': 'o',\n            '&#110;': 'n',\n            '&#115;': 's',\n            '&#114;': 'r',\n            '&#99;': 'c',\n            '&#100;': 'd',\n            '&amp;': '&'\n        }, k;\n    for (k in escapeMap) {\n        if (Object.prototype.hasOwnProperty.call(escapeMap, k))\n            map[escapeMap[k]] = k;\n    }\n\n    return map;\n})();\n\n//'hard' escape regex\nvar hardEscapeRegex = RegExp('(?:' + regexKeys(escapeMap).join('|') + ')', 'g');\n\n/*\n    'str' func argument should not be escaped (func returns false) if:\n    - str is not a String\n    - str is not an HTML; does not contain < and >\n */\nvar _isHTMLString = function (str) {\n    if (!(typeof(str) === 'string' || str instanceof String))\n        return false;\n\n    // not an HTML string\n    if (str.indexOf('<') < 0 && str.indexOf('>') < 0)\n        return false;\n\n    return true;\n};\n\n// This func. takes a string on input and retuns the string obfuscated it with an input char (obfChar).\n// It intersperses the obfuscation char around all the input string chars.\n// E.g.  &#40; is converted to *&*#*4*0*;* value\nvar _stringCanonicObfuscator = function (str, obfChar) {\n    var obfuscatedStr = obfChar;\n    for (var i = 0; i < str.length; ++i) {\n        obfuscatedStr += str.charAt(i);\n        obfuscatedStr += obfChar;\n    }\n\n    return obfuscatedStr;\n};\n\n// The keys of canonicExclusionMap are the html encoded characters that are not canonicalized during soft\n// escape (They are the values from escapeMap used in hardEscape func).  The values of the canonicExclusionMap\n// are its modified keys such that canonicalization does not decode the map keys found in the string.\n// It should be unlikely that these mutant values would be found in the application data stream.\n// If the values are found in the string by accident, they would be replaced by the map keys (danger)\nvar canonicExclusionMap = (function() {\n    var map = {}, key;\n\n    for (key in escapeMap) {\n        if (Object.prototype.hasOwnProperty.call(escapeMap, key)) {\n            var obfuscStr = escapeMap[key];\n            map[obfuscStr] = _stringCanonicObfuscator(obfuscStr, '*');\n        }\n    }\n\n    //textarea needs to be obfuscated because we are inserting into <textarea> elem. to canonicalize.  Firefox breaks in this case.\n    var addCanonicObfuscArr = ['<textarea', '</textarea>'];\n    for (var c = 0; c < addCanonicObfuscArr.length; ++c) {\n        var addObfuscStr = addCanonicObfuscArr[c];\n        map[addObfuscStr] = _stringCanonicObfuscator(addObfuscStr, '*');\n    }\n\n    return map;\n})();\n\nvar reverseCanonicExclusionMap = (function () {\n    var map = {}, key;\n    for (key in canonicExclusionMap) {\n        if (Object.prototype.hasOwnProperty.call(canonicExclusionMap, key)) {\n            map[canonicExclusionMap[key]] = key;\n        }\n    }\n\n    return map;\n})();\n\nvar canonicExclusionRegex = RegExp('(?:' + regexKeys(canonicExclusionMap).join('|') + ')', 'g');\nvar reverseCanonicExclusionRegex = RegExp('(?:' + regexKeys(reverseCanonicExclusionMap).join('|') + ')', 'g');\n\n/**\n * Canonicalize/decode the string from any HTML encoding to ASCII.\n * Hard escaped characters listed as keys in escapeMap are not canonicalized to prevent soft\n * escape from reversing the hard escape as in xssUtil.softHtmlEscape(xssUtil.hardEscape(str))\n *\n * @param string\n * @returns canonicalized {string}\n * @private\n */\nfunction _canonicalize(string) {\n    string = string == null ? '' : string;\n\n    // exclude potentially hard escaped chars from escapeMap values\n    string = canonicExclusionRegex.test(string) ? string.replace(canonicExclusionRegex, function(match) { return canonicExclusionMap[match]; }) : string;\n\n    var canonicElem = document.createElement('textarea');\n    canonicElem.innerHTML = string; // eslint-disable-line\n    string = canonicElem.value;\n\n    // revert the chars excluded above to their original values\n    string = reverseCanonicExclusionRegex.test(string) ? string.replace(reverseCanonicExclusionRegex, function(match) { return reverseCanonicExclusionMap[match]; }) : string;\n\n    return string;\n}\n\n/**\n * In visualize, jquery & xssUtil dependency are loaded before 'settings';\n * hence, it's possible for jrsConfigs.xssNonce to be undefined till jrsConfigs is\n * populated from 'settings'.\n *\n * @returns xssNonce\n * @private\n */\nfunction _getXssNonce() {\n    if (!jrsConfigs.xssNonce) {\n        throw new Error('xssNonce is not set. No render is allowed without xssNonce.');\n    }\n\n    return jrsConfigs.xssNonce;\n}\n\n/**\n * noncePrefix is used to prefix the result of xssUtil.softHtmlEscape(str, {whitelist: ['img']}), so that\n * the result is not overwritten during the subsequent call for html output -> xssUtil.softHtmlEscape(str)\n *\n * @returns nonce prefix\n * @private\n */\nfunction _getNoncePrefix() {\n    if (_getNoncePrefix.noncePrefix === undefined) {\n        var xssNonce = _getXssNonce();\n        if (!xssNonce)\n            return null;\n        _getNoncePrefix.noncePrefix = '<!--@' + xssNonce + '@-->'\n    }\n\n    return _getNoncePrefix.noncePrefix;\n}\n\n/**\n * In visualize, jquery & xssUtil dependency are loaded before 'settings';\n * hence, it's possible for jrsConfigs.xssHtmlTagWhiteList to be undefined till jrsConfigs is\n * populated from 'settings'.\n *\n * @returns configured htmlTagWhiteList (on the server)\n * @private\n */\nfunction _getConfigHtmlTagWhitelist() {\n    var configHtmlTagWhitelist = jrsConfigs.xssHtmlTagWhiteList;\n\n    configHtmlTagWhitelist = (typeof configHtmlTagWhitelist === 'string' ? configHtmlTagWhitelist : \"\");\n    configHtmlTagWhitelist = configHtmlTagWhitelist.replace(/\\s/g,'');   //remove the spaces from xss.soft.html.escape.tag.whitelist in security-config.properties\n    return configHtmlTagWhitelist;\n}\n\n/**\n * If htmlTagWhiteList is configured on the server, replace/modify htmlTagWhiteList with the server value.\n * if the 'configured htmlTagWhiteList' starts with +, the tags in config are added to the hard-coded htmlTagWhiteList;\n * otherwise, 'configured htmlTagWhiteList' replaces htmlTagWhiteList\n *\n * If there is no configuration on the server, return the default hard-coded htmlTagWhiteList.\n *\n * @returns htmlTagWhiteList\n * @private\n */\nfunction _getHtmlTagWhitelist() {\n    var configHtmlTagWhitelist = _getConfigHtmlTagWhitelist();\n\n    // if jrsConfigs.xssHtmlTagWhiteList starts with +, the tags are added to the htmlTagWhiteList;\n    // o/w, jrsConfigs.xssHtmlTagWhiteList replaces htmlTagWhiteList\n    if (configHtmlTagWhitelist.length > 0 && !_getHtmlTagWhitelist.whitelistInitialized) {\n        htmlTagWhiteList =\n            (configHtmlTagWhitelist.startsWith(\"+\") ? htmlTagWhiteList + ',' + configHtmlTagWhitelist.substr(1) : configHtmlTagWhitelist);\n        _getHtmlTagWhitelist.whitelistInitialized = true;\n    }\n\n    return htmlTagWhiteList;\n}\n\n/**\n * Construct left HTML tag regext from htmlTagWhiteList.\n *\n * @return {RegExp}\n * @private\n */\nfunction _getWhitelistLeftRegex() {\n    if (_getWhitelistLeftRegex.leftTagRegexp !== undefined)\n        return _getWhitelistLeftRegex.leftTagRegexp;\n\n    var whitelist = _getHtmlTagWhitelist();\n    var whitelistRegexInsert = whitelist.replace(/,/g,'\\\\b|');\n    _getWhitelistLeftRegex.leftTagRegexp =  RegExp('<(?!/|' + whitelistRegexInsert + '\\\\b|!--)', 'ig');\n\n    return _getWhitelistLeftRegex.leftTagRegexp;\n}\n\n/**\n * Construct right HTML tag regext from htmlTagWhiteList.\n *\n * @return {RegExp}\n * @private\n */\nfunction _getWhitelistRightRegex() {\n    if (_getWhitelistRightRegex.rightTagRegexp !== undefined)\n        return _getWhitelistRightRegex.rightTagRegexp;\n\n    var whitelist = _getHtmlTagWhitelist();\n    var whitelistRegexInsert = whitelist.replace(/,/g,'\\\\b|');\n    _getWhitelistRightRegex.rightTagRegexp = RegExp('</(?!' + whitelistRegexInsert + '\\\\b)', 'ig');\n\n    return _getWhitelistRightRegex.rightTagRegexp;\n}\n\n//regex map used to escape HTML tag attributes which produce javascript context.\n// During 'soft' html escape, the map keys are converted into Regexp(\\b<key>\\b, 'gi')\n// and replaced with the corresponding map values.\nvar _defaultAttribSoftEscapeMap = {\n    'regex': [\n        /\\bjavascript:/ig,\n        /\\bon(\\w+?)\\s*=/ig,\n        /\\bsrcdoc\\s*=/ig\n    ],\n    'replacement': [\n        '',\n        '&#111;&#110;$1=',\n        '&#115;&#114;&#99;doc='\n    ]\n};\n\nfunction _getConfigAttribSoftHtmlEscapeMap() {\n    return jrsConfigs.xssAttribSoftHtmlEscapeMap;\n}\n\nfunction _getAttribSoftHtmlEscapeMap() {\n    if (_getAttribSoftHtmlEscapeMap.attribSoftEscapeArr !== undefined)\n        return _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr;\n\n    var configAttribSoftHtmlEscapeMap = _getConfigAttribSoftHtmlEscapeMap();\n    if (!configAttribSoftHtmlEscapeMap) {\n        _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr = _defaultAttribSoftEscapeMap;\n        return _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr;\n    }\n\n    try {\n        var configRegexArr = [];\n        var configReplArr = [];\n        for (var k in configAttribSoftHtmlEscapeMap) {\n            if (configAttribSoftHtmlEscapeMap.hasOwnProperty(k)) {\n                configRegexArr.push(RegExp( k, 'ig'));\n                configReplArr.push(configAttribSoftHtmlEscapeMap[k]);\n            }\n        }\n\n        _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr = {\n            'regex': configRegexArr,\n            'replacement': configReplArr\n        };\n\n        return _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr\n    }\n    catch (err) {\n        console.warn(\"Unable to parse xss.soft.html.escape.attrib.map.  Using _defaultAttribSoftEscapeMap.\"); // eslint-disable-line no-console\n        return _getAttribSoftHtmlEscapeMap.attribSoftEscapeArr;\n    }\n}\n\n/*\n        _xssSoftHtmlEscape performs 'soft HTML escape': an escape of html such that no Javascript is executed in the browser.\n        _xssSoftHtmlEscape escapes parenthesis and <.  < is escaped only if it's not followed by a valid html tag as defined by\n        htmlTagWhiteList or options.whitelist.  _xssSoftHtmlEscape also escapes some HTML attributes switching the HTML context\n        to Javascript.\n\n        If the 'string' input is not an HTML or contains a session nonce, soft HTML escape is not applied.\n        Session nonce marks the HTML as safe; that HTML does not require escaping against XSS.  This lets us\n        mark our html templates as safe (allows to include javascript and gives a performance boost).\n\n        Note: it's important that applying this function more than once does not escape the string multiple times.\n        Multiple escapes will break UI.\n        E.g. < is replaced with &lt;.  None of the chars & l t or ; should be escaped. If, say, & were replaced with\n        &amp;, < would become &amp;lt; after two escapes instead of staying &lt;.\n\n        Note2: The regular expressions are defined outside the function to improve performance.  The regex's\n        persist on the page; they have an internal state parameter lastIndex (last match loc.).  It's important\n        to reset lastIndex=0 before using each regex, so that the regex exec. results are correct.  Alternatively,\n        one can recreate the regex on each function call.\n\n        Parameters:\n        string - string to be purged of XSS via 'soft' HTML escape.\n        options.whitelist - [array] if defined, substitutes htmlTagWhiteList tags.  Tags in whitelist won't be escaped.\n                            This option is useful when we want to prevent the text input rendered as HTML.\n                            E.g. options.whitelist=['a'].  <a> won't be escaped. <img> will be escaped as &lt;img>.\n        options.escapeTags - [array] the tags excluded from htmlTagWhiteList; those tags would be escaped.\n                            E.g. options.escapeTags = ['iframe'].  <iframe > would become &lt;iframe >.\n                            This option is available only when whitelist is not specified.\n     */\nvar _xssSoftHtmlEscape = function(string, options) {\n    string = string == null ? '' : string;\n    options = options || { };\n\n    if (!_isHTMLString(string))\n        return string;\n\n    // The case in which options.whitelist escape was applied first; string starts with nonce.\n    // Avoid the subsequent escape during html output on the page.\n    // E.g. jquery.html(xssUtil.softHtmlEscape(str, {whitelist:['img']})).  If not for the following statement,\n    // subsequent call to xssUtil.softHtmlEscape inside jquery.html would use the default htmlTagWhiteList\n    // and would write over options.whitelist escape.  noncePrefix is an html comment to avoid showing it on the page.\n    var noncePref = _getNoncePrefix();\n    if (noncePref && string.indexOf(noncePref) === 0)\n        return string.substring(noncePref.length);\n\n    // If the string contains nonce (not noncePrefix in the 1st pos-n), it comes from JRS; it's safe to exec javascript.\n    var xssNonce = _getXssNonce();\n    if (xssNonce && string.indexOf(xssNonce) >= 0)\n        return string;\n\n    string = _canonicalize(string);\n\n    //avoid escaping < or > in <TAG> or </TAG>, where TAG is white-listed\n    if (options.whiteList && options.whiteList instanceof Array && options.whiteList.length > 0) {\n        //escape <TAG>\n        var whitelistRegexStr = options.whiteList.join('\\\\b|');\n        var rtLeftTagRegexp = RegExp('<(?!/|' + whitelistRegexStr + '\\\\b|!--)', 'ig');\n        string = rtLeftTagRegexp.test(string) ? string.replace(rtLeftTagRegexp, '&lt;') : string;\n\n        //escape </TAG>\n        var rtRightTagRegexp = RegExp('</(?!' + whitelistRegexStr + '\\\\b)', 'ig');\n        string = rtRightTagRegexp.test(string) ? string.replace(rtRightTagRegexp, '&lt;/') : string;\n\n        string = noncePref + string;\n    }\n    else {\n        var tmpLeftTagRegexp = _getWhitelistLeftRegex(), tmpRightTagRegexp = _getWhitelistRightRegex();\n        tmpLeftTagRegexp.lastIndex = 0;\n        tmpRightTagRegexp.lastIndex = 0;\n\n        if (options.escapeTags && options.escapeTags instanceof Array) {\n            var tmpTagWhiteList = _getHtmlTagWhitelist();\n            for (var i = 0; i < options.escapeTags.length; ++i) {\n                tmpTagWhiteList = tmpTagWhiteList.replace(options.escapeTags[i] + ',', '')\n            }\n\n            tmpLeftTagRegexp = RegExp('<(?!/|' + tmpTagWhiteList.replace(/,/g, '\\\\b|') + '\\\\b|!--)', 'ig');\n            tmpRightTagRegexp = RegExp('</(?!' + tmpTagWhiteList.replace(/,/g, '\\\\b|') + '\\\\b)', 'ig');\n        }\n\n        //escape <TAG>\n        string = tmpLeftTagRegexp.test(string) ? string.replace(tmpLeftTagRegexp, '&lt;') : string;\n\n        //escape </TAG>\n        string = tmpRightTagRegexp.test(string) ? string.replace(tmpRightTagRegexp, '&lt;/') : string;\n    }\n\n    var attribSoftHtmlEscapeMap = _getAttribSoftHtmlEscapeMap();\n    var regexArr = attribSoftHtmlEscapeMap['regex'];\n    var replArr = attribSoftHtmlEscapeMap['replacement'];\n\n    for (var k=0; k<regexArr.length; ++k) {\n        var regex = regexArr[k];\n        regex.lastIndex = 0;\n\n        var replacement = replArr[k];\n        string = regex.test(string) ? string.replace(regex, replacement) : string;\n    }\n\n    return string;\n};\n\n/*\n     Unlike 'soft' HTML escape (_xssSoftHtmlEscape), this function simply escapes based on escapeMap key-value pairs.\n     It will break all html and javasctipt.\n */\nvar _xssHardEscape = function(string) {\n    string = string == null ? '' : string;\n\n    if (!(typeof(string) === 'string' || string instanceof String))\n        return string;\n\n    // The case in which soft html escape with options.whitelist was applied first; string starts with nonce.\n    // Remove nonce prefix.  Hard escape happens anyways.\n    var noncePref = _getNoncePrefix();\n    if (noncePref && string.indexOf(noncePref) === 0)\n        string = string.substring(noncePref.length);\n\n    hardEscapeRegex.lastIndex = 0;\n    string = hardEscapeRegex.test(string) ? string.replace(hardEscapeRegex, function(match) { return escapeMap[match]; }) : string;\n    return string;\n};\n\n//Unescape function\nvar _xssUnescape = function(string) {\n    string = string == null ? '' : string;\n\n    if (!(typeof(string) === 'string' || string instanceof String)) {\n        return string;\n    }\n\n    // after soft escape with options.whitelist, the string will have a nonce prefix.\n    // Remove it to unescape the string in xssUtil.unescape(xssUtil.softHtmlEscape(string, {whitelist: ['a','div']})).\n    var noncePref = _getNoncePrefix();\n    if (noncePref && string.indexOf(noncePref) === 0)\n        string = string.substring(noncePref.length);\n\n    // If the string contains nonce, it comes from JRS: was not escaped\n    var xssNonce = _getXssNonce();\n    if (xssNonce && string.indexOf(xssNonce) >= 0)\n        return string;\n\n    var unescapeRegexp = RegExp('(?:' + regexKeys(unescapeMap).join('|') + ')', 'ig');\n    return unescapeRegexp.test(string) ? string.replace(unescapeRegexp, function(match) { return unescapeMap[match]; }) : string;\n};\n\nexport default {\n    softHtmlEscape: _xssSoftHtmlEscape,\n    hardEscape: _xssHardEscape,\n    unescape: _xssUnescape\n};\n"],"sourceRoot":""}