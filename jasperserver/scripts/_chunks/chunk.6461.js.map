{"version":3,"sources":["webpack://jrs-ui/./src/components/list.base.js"],"names":["baseList","item","buttonManager","jQuery","removeClass","layoutModule","addClass","isOpen","hasClass","dynamicList","lists","activeListId","_templateHash","messages","getDynamicListForElement","element","$list","is","parent","length","id","options","this","_itemId","undefined","_list","first","last","isIconClicked","_value","value","_label","label","_subList","subList","_cssClassName","cssClassName","_templateDomId","templateDomId","_respondOnItemEvents","Object","isUndefined","respondOnItemEvents","_excludeFromEventHandling","excludeFromEventHandling","_excludeFromSelectionTriggers","excludeFromSelectionTriggers","FAVORITE_ICON_PATTERN","favoriteIconPattern","SCHEDULE_ICON_PATTERN","scheduleIconPattern","ListItem","addVar","addMethod","list","getList","getNextItemId","container","_element","processTemplate","_getTemplate","_getElement","setAttribute","_generateId","tabindex","attr","listItem","refreshStyle","siblings","childElements","afterIndex","index","insert","after","hadFocus","document","activeElement","focus","remove","templateClassName","className","isSelected","isDisabled","getCssClassName","isComposite","cursor","isNotNullORUndefined","wrapper","cleanWhitespace","elementsCount","childNodes","xssUtil","getLabel","data","removeItems","isItemSelected","selectItem","deselectItem","getItems","indexOf","e","isElement","clone","getElementById","templateId","getId","DEFAULT_ITEM_ID_PREFIX","event","matchAny","target","CompositeItem","call","_items","items","_openUp","openUp","_subListOptions","listOptions","_listTagName","OPEN_HANDLER_PATTERN","openHandlerPattern","CLOSE_HANDLER_PATTERN","closeHandlerPattern","prototype","deepClone","push","reject","include","tagName","show","_showSubList","_getSubListId","subListElement","Element","top","bottom","opts","List","allowSelections","_allowSelections","responsive","_responsive","selectionDefaultsToCursor","_selectionDefaultsToCursor","collapsible","_collapsible","multiSelect","_multiSelect","listTemplateDomId","_listTemplateDomId","itemTemplateDomId","_itemTemplateDomId","itemCssClassName","_itemCssClassName","comparator","_comparator","_initEvents","_parentList","each","parentItem","bind","subitem","getFirstChild","deselect","setCursor","$item","window","setTimeout","refresh","DEFAULT_SUB_LIST_ID_SUFFIX","TemplatedListItem","tooltipText","tempFunc","constructor","UnderscoreTemplatedListItem","_template","template","tempFunction","_","getValue","JSTooltip","text","_id","_selectedItems","_lastSelectedItem","_nextId","draggables","_selectOnMousedown","selectOnMousedown","_setCursorOnMousedown","setCursorOnMousedown","dragPattern","scroll","setItems","_createFromTemplate","_registerCustomScroll","_msgNItemsSelected","Template","ITEM_SELECTED","ITEM_UNSELECTED","ITEM_MOUSEUP","ITEM_MOUSEDOWN","ITEM_CLICK","ITEM_DBLCLICK","ITEM_OPEN","ITEM_CLOSED","ITEM_CONTEXTMENU","ITEM_BEFORE_SELECT_OR_UNSELECT","newCursor","oldCursor","listEl","resetSelected","addItems","getCursor","compact","_prepareListItem","sort","pos","splice","apply","concat","setList","getTemplateDomId","setTemplateDomId","setCssClassName","isArray","_removeItemFromSelected","getNextItem","getPreviousItem","unsetList","scrollUpTo","getSelectedItems","closest","isCtrlHeld","isShiftKeyHeld","isContextMenu","fire","Event","stopSelectOrUnselect","isContextMenuOnSelected","reset","selectRange","select","start","end","min","Math","max","i","_addItemToSelected","isShiftKey","findAll","skipParent","thatList","scrollEl","parentNode","scrollTop","scrollPortHeight","offsetHeight","correction","offsetTop","itemYPos","currentIndex","baseEvent","memo","targetEvent","subItem","nextItem","preventDefault","stopPropagation","selectNext","isShiftHeld","previousItem","selectPrevious","headerHack","newScrollTop","iterItem","outItem","update","itemsAmount","elements","itemElements","cursorWasFocus","isRendered","wasOpened","getCursorElement","clean","eventName","handler","observe","stopObserving","readAttribute","itemList","idsAreEqual","parentListContainsChild","contains","parseInt","_getTemplateElement","disableSelectionWithoutCursorStyle","currentElement","cloneCustomAttributes","remember","without","setStyle","width","height","evaluate","count","scrollBar","up","identify","thisElem","matchingElem","getItemByEvent","Draggable","superghosting","mouseOffset","onStart","setDragStartState","onEnd","setDragEndState","draggable","slice","_buildDnDOverlay","scrollSensitivity","Draggables","regionID","matchMeOrUp","_isElementInExcluded","listEvent","isInvoked","_isExcludedFromSelectionTriggers","isCtrlHeldValue","isMetaHeld","isShiftHeldValue","isContextMenuValue","isRightClick","isSelect","TouchController","isSupportsTouch","changedTouches","deselectOthers","twofingers","parents","node","createDraggableIfNeeded","type","iconEvent","_itemPreventEvent","touches","source","_isCloseHandler","_isOpenHandler","_mousedownHandler","bindAsEventListener","_mouseupHandler","isIPad","_mouseoverHandler","_clickHandler","_dblclickHandler","selectInwards","selectOutwards","selectPageDown","isFavHandler","isFavIcon","isOpenOrCloseHandler","which","_isFavoriteHandler","UnderscoreTemplatedList","arguments","temporaryFunc"],"mappings":"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","file":"_chunks/chunk.6461.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\nimport {Draggables, Draggable} from 'dragdropextra';\nimport {Template} from 'prototype';\nimport layoutModule from '../core/core.layout';\nimport buttonManager from '../core/core.events.bis';\nimport {\n    isNotNullORUndefined,\n    matchAny,\n    deepClone,\n    isArray,\n    isShiftHeld,\n    disableSelectionWithoutCursorStyle,\n    cloneCustomAttributes,\n    matchMeOrUp,\n    isMetaHeld,\n    isRightClick,\n    isSupportsTouch,\n    isIPad\n} from '../util/utils.common';\n\nimport TouchController from '../util/touch.controller';\nimport {JSTooltip} from \"./components.tooltip\";\nimport _ from 'underscore';\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\n\nvar baseList = {\n    isResponsive: function (item) {\n        return jQuery(item).parent().hasClass(layoutModule.RESPONSIVE_CLASS);\n    },\n    isCollapsible: function (item) {\n        return jQuery(item).parent().hasClass(layoutModule.COLLAPSIBLE_CLASS);\n    },\n    selectItem: function (item) {\n        if (this._allowSelections) {\n            if (this.isItemDisabled(item)) {\n                return;\n            }\n            jQuery(item).addClass(layoutModule.SELECTED_CLASS);\n        }\n    },\n    deselectItem: function (item) {\n        jQuery(item).removeClass(layoutModule.SELECTED_CLASS);\n    },\n    isItemSelected: function (item) {\n        return jQuery(item).hasClass(layoutModule.SELECTED_CLASS);\n    },\n    disableItem: function (item) {\n        buttonManager.disable(item);\n    },\n    enableItem: function (item) {\n        buttonManager.enable(item);\n    },\n    isItemDisabled: function (item) {\n        return buttonManager.isDisabled(item);\n    },\n    openItem: function (item) {\n        jQuery(item).removeClass(layoutModule.CLOSED_CLASS).addClass(layoutModule.OPEN_CLASS)[0].isOpen = true;\n    },\n    isItemOpen: function (item) {\n        return jQuery(item).hasClass(layoutModule.OPEN_CLASS) || jQuery(item)[0].isOpen && !jQuery(item).hasClass(layoutModule.CLOSED_CLASS);\n    },\n    closeItem: function (item) {\n        jQuery(item).removeClass(layoutModule.OPEN_CLASS).addClass(layoutModule.CLOSED_CLASS)[0].isOpen = false;\n    }\n};    ///////////////////////////////////////////////////////\n// Global module for all list related code\n///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////\n// Global module for all list related code\n///////////////////////////////////////////////////////\nvar dynamicList = {\n    /**\n     * Map of all created lists on current page\n     */\n    lists: {},\n    /**\n     * Id of last active list\n     */\n    activeListId: null,\n    _templateHash: {},\n    messages: { 'listNItemsSelected': '#{count} items selected' },\n    /**\n     * @return {dynamicList}\n     */\n    getDynamicListForElement: function (element) {\n        var $list = jQuery(element)[0];\n        if (!jQuery($list).is('ul,ol')) {\n            $list = jQuery($list).parent('ul,ol');\n            if ($list.length === 0) {\n                return null;\n            }\n        }\n        return dynamicList.lists[$list.id];\n    }\n};    ///////////////////////////////////////////////////////\n// ListItem\n///////////////////////////////////////////////////////\n/**\n * Respond on events: dblclick, click, mouseover, mousedown, mouseup, key:down and key:up\n * Options:\n *      respondOnItemEvents - when false all event will be ignored\n *      excludeFromEventHandling - [selectorPattern1, selectorPattern2]\n *      excludeFromSelectionTriggers - []\n *\n * @param options\n */\n///////////////////////////////////////////////////////\n// ListItem\n///////////////////////////////////////////////////////\n/**\n * Respond on events: dblclick, click, mouseover, mousedown, mouseup, key:down and key:up\n * Options:\n *      respondOnItemEvents - when false all event will be ignored\n *      excludeFromEventHandling - [selectorPattern1, selectorPattern2]\n *      excludeFromSelectionTriggers - []\n *\n * @param options\n */\ndynamicList.ListItem = function (options) {\n    this._itemId = undefined;\n    this._list = undefined;\n    this.first = false;\n    this.last = false;\n    if (options) {\n        this.isIconClicked = true;\n        this._value = options.value ? options.value : {};\n        this._label = options.label ? options.label : '';\n        this._subList = options.subList;\n        this._cssClassName = 'cssClassName' in options ? options.cssClassName : undefined;\n        this._templateDomId = 'templateDomId' in options ? options.templateDomId : undefined;\n        this._respondOnItemEvents = !Object.isUndefined(options.respondOnItemEvents) ? options.respondOnItemEvents : true;\n        this._excludeFromEventHandling = 'excludeFromEventHandling' in options ? options.excludeFromEventHandling : undefined;\n        this._excludeFromSelectionTriggers = 'excludeFromSelectionTriggers' in options ? options.excludeFromSelectionTriggers : undefined;\n        this.FAVORITE_ICON_PATTERN= options.favoriteIconPattern ;\n        this.SCHEDULE_ICON_PATTERN= options.scheduleIconPattern ;\n\n    }\n};    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addVar('DEFAULT_TEMPLATE_DOM_ID', 'dynamicListItemTemplate');\ndynamicList.ListItem.addVar('DEFAULT_ITEM_ID_PREFIX', 'item');\ndynamicList.ListItem.addVar('DEFAULT_SUB_LIST_ID_SUFFIX', 'SubList');    ///////////////////////////////////////////////////////\n// Public ListItem methods\n///////////////////////////////////////////////////////\n/**\n * Gets ID of the item, which is being generated by the list.\n * @return {Number} ID of the item\n */\n///////////////////////////////////////////////////////\n// Public ListItem methods\n///////////////////////////////////////////////////////\n/**\n * Gets ID of the item, which is being generated by the list.\n * @return {Number} ID of the item\n */\ndynamicList.ListItem.addMethod('getId', function () {\n    return this._itemId;\n});    /*\n * Sets the list and generates new id in that list.\n * This method is used by the list to set reference on itself.\n *\n * @param list {{@see dynamicList.List}}\n */\n/*\n * Sets the list and generates new id in that list.\n * This method is used by the list to set reference on itself.\n *\n * @param list {{@see dynamicList.List}}\n */\ndynamicList.ListItem.addMethod('setList', function (list) {\n    this._list = list;\n    // This function should no longer be used for this purpose.\n    // Use \"unsetList\" instead.\n    // FIXME: Turn this on when logging is added to this module!\n    // this.logger.warn(\"deprecated use case\");\n    if (this.getList()) {\n        this._itemId = this.getList().getNextItemId();\n    }\n});    /*\n * Explicitly clears the item's link to its previous list.\n * Use this function instead of setList(null) or setList(undefined).\n *\n * @param list {{@see dynamicList.List}}\n */\n/*\n * Explicitly clears the item's link to its previous list.\n * Use this function instead of setList(null) or setList(undefined).\n *\n * @param list {{@see dynamicList.List}}\n */\ndynamicList.ListItem.addMethod('unsetList', function () {\n    this._list = null;    // listItem IDs depend on their assigned list.\n    // listItem IDs depend on their assigned list.\n    this._itemId = undefined;\n});    /*\n * Gets the list where this item is listed.\n *\n * @return {{@see dynamicList.List}}\n */\n/*\n * Gets the list where this item is listed.\n *\n * @return {{@see dynamicList.List}}\n */\ndynamicList.ListItem.addMethod('getList', function () {\n    return this._list;\n});    /**\n * Sets value of the item.\n *\n * @param {String}\n */\n/**\n * Sets value of the item.\n *\n * @param {String}\n */\ndynamicList.ListItem.addMethod('setValue', function (value) {\n    return this._value = value;\n});    /**\n * Gets value of the item.\n *\n * @return {String}\n */\n/**\n * Gets value of the item.\n *\n * @return {String}\n */\ndynamicList.ListItem.addMethod('getValue', function () {\n    return this._value;\n});    /**\n * Sets label defined by user.\n *\n * @param {Object}\n */\n/**\n * Sets label defined by user.\n *\n * @param {Object}\n */\ndynamicList.ListItem.addMethod('setLabel', function (label) {\n    return this._label = label;\n});    /**\n * Gets label of the item defined by user.\n *\n * @return {Object}\n */\n/**\n * Gets label of the item defined by user.\n *\n * @return {Object}\n */\ndynamicList.ListItem.addMethod('getLabel', function () {\n    return this._label;\n});    /**\n * Setter and getter for the style of the item.\n * Changes of the style will be applied after call of method {@see dynamicList.ListItem#refresh}\n */\n/**\n * Setter and getter for the style of the item.\n * Changes of the style will be applied after call of method {@see dynamicList.ListItem#refresh}\n */\ndynamicList.ListItem.addMethod('setCssClassName', function (cssClassName) {\n    this._cssClassName = cssClassName;\n}).addMethod('getCssClassName', function () {\n    return this._cssClassName;\n});    /**\n * Sets the ID of DOM element which will be used for rendering of mark up.\n * Changes of the style will be applied after call of method {@see dynamicList.ListItem#refresh}\n *\n * @param templateDomId {String}\n */\n/**\n * Sets the ID of DOM element which will be used for rendering of mark up.\n * Changes of the style will be applied after call of method {@see dynamicList.ListItem#refresh}\n *\n * @param templateDomId {String}\n */\ndynamicList.ListItem.addMethod('setTemplateDomId', function (templateDomId) {\n    this._templateDomId = templateDomId;\n});    /**\n * Gets the ID of the current template of the item.\n *                                  Attr\n * @return {String}\n */\n/**\n * Gets the ID of the current template of the item.\n *                                  Attr\n * @return {String}\n */\ndynamicList.ListItem.addMethod('getTemplateDomId', function () {\n    return this._templateDomId;\n});    /**\n * Render the item specified container.\n * Use this method when you need re-render item.\n *\n * @param container {DOMElement}\n */\n/**\n * Render the item specified container.\n * Use this method when you need re-render item.\n *\n * @param container {DOMElement}\n */\ndynamicList.ListItem.addMethod('show', function (container) {\n    if (!container) {\n        return;\n    }\n    this._element = this.processTemplate(this._getTemplate());\n    this._getElement().setAttribute('id', this._generateId());\n    this._getElement().setAttribute('tabindex', -1);\n    this.first && this.getList().tabindex && jQuery(this._getElement()).attr('tabindex', this.getList().tabindex);\n    this._getElement().listItem = this;\n    this.refreshStyle();\n    var siblings = container.childElements();\n    var itemIndex = this.index();\n    var afterIndex = itemIndex - 1;\n    afterIndex > -1 && afterIndex < siblings.length ? this._getElement().insert({ after: siblings[afterIndex] }) : jQuery(container)[0].insert(this._getElement());\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('refresh', function () {\n    var hadFocus = false;    // NOTE: _getElement is not just a simple accessor, and apparently has\n    // side-effects which are required elsewhere.\n    // NOTE: _getElement is not just a simple accessor, and apparently has\n    // side-effects which are required elsewhere.\n    if (!this._getElement()) {\n        return;\n    }\n    if (this.getList()) {\n        if (document.activeElement === this._getElement()) {\n            hadFocus = true;\n        }\n        this._element = this.processTemplate(this._getElement());\n        this.refreshStyle();\n        if (hadFocus) {\n            jQuery(this._getElement()).focus();\n        }\n    } else {\n        this._getElement().remove();\n        this._element = null;\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('refreshStyle', function () {\n    var element = this._getElement();    // List may not have been rendered yet.\n    // List may not have been rendered yet.\n    if (!element) {\n        return;\n    }\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    if (this.first) {\n        jQuery(element).addClass(layoutModule.FIRST_CLASS);\n    }\n    if (this.last) {\n        jQuery(element).addClass(layoutModule.LAST_CLASS);\n    }\n    if (this.isSelected()) {\n        jQuery(element).addClass(layoutModule.SELECTED_CLASS);\n    }\n    if (this.isDisabled()) {\n        jQuery(element).addClass(layoutModule.DISABLED_CLASS);\n    }\n    if (this.getCssClassName()) {\n        jQuery(element).addClass(this.getCssClassName());\n    }    // Update cursor styles.  Note that cursor logic for composite items will\n    // be done after this call.\n    // Update cursor styles.  Note that cursor logic for composite items will\n    // be done after this call.\n    if (!this.isComposite) {\n        if (this === this.getList().cursor) {\n            jQuery(element).addClass('cursor');\n        }\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('isRendered', function () {\n    return isNotNullORUndefined(this._getElement());\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('disable', function () {\n    baseList.disableItem(this._getElement());\n}).addMethod('enable', function () {\n    baseList.enableItem(this._getElement());\n}).addMethod('isDisabled', function () {\n    return baseList.isItemDisabled(this._getElement());\n});    /**\n * Prepare mark up template of the item before render or process existing mark up when refresh the item.\n * If template was changed method should be overridden.\n *\n * @param {DOMElement} - current item element\n * @return {DOMElement} - element ready for use\n */\n/**\n * Prepare mark up template of the item before render or process existing mark up when refresh the item.\n * If template was changed method should be overridden.\n *\n * @param {DOMElement} - current item element\n * @return {DOMElement} - element ready for use\n */\ndynamicList.ListItem.addMethod('processTemplate', function (element) {\n    var wrapper = element.childElements()[0];\n    wrapper.cleanWhitespace();\n    var elementsCount = wrapper.childElements().length;\n    if (elementsCount == wrapper.childNodes.length) {\n        wrapper.insert(xssUtil.hardEscape(this.getLabel()));\n    } else {\n        wrapper.childNodes[elementsCount].data = this.getLabel();\n    }    //  $(wrapper.parentNode).writeAttribute(\"tabIndex\",-1);\n    //  $(wrapper.parentNode).writeAttribute(\"tabIndex\",-1);\n    return element;\n});    /**\n * focus on this node's element\n */\n/**\n * focus on this node's element\n */\ndynamicList.ListItem.addMethod('focus', function () {\n    this._getElement().focus();\n});    /**\n * Removes it self from the list.\n */\n/**\n * Removes it self from the list.\n */\ndynamicList.ListItem.addMethod('remove', function () {\n    this.getList().removeItems([this]);\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('isSelected', function () {\n    return this.getList().isItemSelected(this);\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('select', function () {\n    this.getList().selectItem(this, true);\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.ListItem.addMethod('deselect', function () {\n    this.getList().deselectItem(this);\n});\ndynamicList.ListItem.addMethod('index', function () {\n    this.getList().getItems().indexOf(this);\n});    ///////////////////////////////////////////////////////\n// Private ListItem methods\n///////////////////////////////////////////////////////\n/**\n * Gets or looking for DOM element of this item.\n *\n * @return {DOMElement}\n */\n///////////////////////////////////////////////////////\n// Private ListItem methods\n///////////////////////////////////////////////////////\n/**\n * Gets or looking for DOM element of this item.\n *\n * @return {DOMElement}\n */\ndynamicList.ListItem.addMethod('_getElement', function () {\n    if (!this._element) {\n        var e = jQuery('#' + this._generateId())[0];\n        this._element = Object.isElement(e) ? e : undefined;\n    }\n    return this._element;\n});\ndynamicList.ListItem.addMethod('_getTemplate', function () {\n    var id = this._templateDomId;\n    if (!dynamicList._templateHash[id]) {\n        dynamicList._templateHash[id] = id;\n    }\n    var clone = document.getElementById(dynamicList._templateHash[id]).clone(true);\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    return clone;\n});\ndynamicList.ListItem.addMethod('_generateId', function () {\n    // There are some weird situations where this can get called due to a\n    // refresh while deleting an item.  In these situations, the item may no\n    // longer be assigned to a list.  In this case, this function returns\n    // null.\n    if (!this.getList() || !this.getList().getId()) {\n        return null;\n    }\n    return this.getList().getId() + '_' + this.DEFAULT_ITEM_ID_PREFIX + this.getId();\n});\ndynamicList.ListItem.addMethod('_isElementInExcluded', function (event, item) {\n    var element = event.element();\n    return this._excludeFromEventHandling && matchAny(element, this._excludeFromEventHandling) != null;\n});\ndynamicList.ListItem.addMethod('_isExcludedFromSelectionTriggers', function (event) {\n    var element = event.target;\n    return this._excludeFromSelectionTriggers && matchAny(element, this._excludeFromSelectionTriggers) != null;\n});\ndynamicList.ListItem.addMethod('_isFavoriteHandler', function (element) {\n    return jQuery(element).is(this.FAVORITE_ICON_PATTERN);\n});\ndynamicList.ListItem.addMethod('_isScheduleHandler', function (element) {\n    return jQuery(element).is(this.SCHEDULE_ICON_PATTERN);\n})///////////////////////////////////////////////////////\n// Composite List Item\n///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////\n// Composite List Item\n///////////////////////////////////////////////////////\ndynamicList.CompositeItem = function (options) {\n    dynamicList.ListItem.call(this, options);\n    this.isComposite = true;\n    this._items = options.items;\n    this._openUp = options.openUp;\n    this._subList = null;\n    this._subListOptions = options.listOptions ? options.listOptions : {};\n    this._listTagName = 'ul';\n    this.FAVORITE_ICON_PATTERN = options.favoriteIconPattern ;\n    this.SCHEDULE_ICON_PATTERN = options.scheduleIconPattern;\n    this.OPEN_HANDLER_PATTERN = options.openHandlerPattern ? options.openHandlerPattern : this.OPEN_HANDLER_PATTERN;\n    this.CLOSE_HANDLER_PATTERN = options.closeHandlerPattern ? options.closeHandlerPattern : this.CLOSE_HANDLER_PATTERN;\n};\ndynamicList.CompositeItem.prototype = deepClone(dynamicList.ListItem.prototype);\ndynamicList.CompositeItem.addVar('OPEN_HANDLER_PATTERN', '[openHandler=openHandler]');\ndynamicList.CompositeItem.addVar('CLOSE_HANDLER_PATTERN', '[closeHandler=closeHandler]');\ndynamicList.CompositeItem.addMethod('getItems', function () {\n    return this._items;\n});\ndynamicList.CompositeItem.addMethod('setItems', function (items) {\n    this._items = items;\n});\ndynamicList.CompositeItem.addMethod('addItem', function (item) {\n    this._items.push(item);\n});\ndynamicList.CompositeItem.addMethod('removeItems', function (items) {\n    this._items = this._items.reject(function (item) {\n        return items.include(item);\n    });\n    this._subList.removeItems(items);\n});\ndynamicList.CompositeItem.addMethod('show', function (container) {\n    this._listTagName = container.tagName;\n    dynamicList.ListItem.prototype.show.call(this, container);\n    baseList.closeItem(this._getElement());\n    if (!this._items) {\n        return;\n    }\n    this._showSubList();\n});\ndynamicList.CompositeItem.addMethod('_showSubList', function () {\n    var id = this._getSubListId();\n    var subListElement = new Element(this._listTagName, { id: id });\n    this._getElement().insert(this._openUp ? { top: subListElement } : { bottom: subListElement });\n    var opts = this._subListOptions;\n    this._subList = new dynamicList.List(id, {\n        allowSelections: 'allowSelections' in opts ? opts.allowSelections : this.getList()._allowSelections,\n        responsive: 'responsive' in opts ? opts.responsive : this.getList()._responsive,\n        selectionDefaultsToCursor: 'selectionDefaultsToCursor' in opts ? opts.selectionDefaultsToCursor : this.getList()._selectionDefaultsToCursor,\n        collapsible: 'collapsible' in opts ? opts.collapsible : this.getList()._collapsible,\n        multiSelect: 'multiSelect' in opts ? opts.multiSelect : this.getList()._multiSelect,\n        cssClassName: 'cssClassName' in opts ? opts.cssClassName : this.getList()._cssClassName,\n        listTemplateDomId: 'listTemplateDomId' in opts ? opts.listTemplateDomId : this.getList()._listTemplateDomId,\n        itemTemplateDomId: 'itemTemplateDomId' in opts ? opts.itemTemplateDomId : this.getList()._itemTemplateDomId,\n        itemCssClassName: 'itemCssClassName' in opts ? opts.itemCssClassName : this.getList()._itemCssClassName,\n        comparator: 'comparator' in opts ? opts.comparator : this.getList()._comparator,\n        items: this._items\n    });\n    this._subList._initEvents = function () {\n    };\n    this._subList.show();\n    this._subList._parentList = this.getList();\n    this._subList.getItems().each(function (item) {\n        item.parentItem = this;\n    }.bind(this));    // It's possible that multiple sublists will be coming back from the\n    // database, so only move the cursor if this is the sublist for an item\n    // that is the current cursor.  Arguably we shouldn't set focus yet,\n    // either, in case the delay is so long that the user is doing something\n    // with some other part of the interface, but let's see if that actually\n    // comes up.\n    // It's possible that multiple sublists will be coming back from the\n    // database, so only move the cursor if this is the sublist for an item\n    // that is the current cursor.  Arguably we shouldn't set focus yet,\n    // either, in case the delay is so long that the user is doing something\n    // with some other part of the interface, but let's see if that actually\n    // comes up.\n    if (this === this.getList().cursor) {\n        var subitem = this.getFirstChild();\n        if (subitem) {\n            this.deselect();\n            subitem.getList().setCursor(subitem);    //subitem.select();\n            //subitem.select();\n            if (this._getElement()) {\n                var $item = jQuery(this._getElement());\n                $item.removeClass('cursor');\n                $item.addClass('supercursor');\n            }\n            if (subitem._getElement()) {\n                // WARNING - This must be done this way, do not change it.\n                // Trying to do a focus() call directly here will not work,\n                // because of the complex callback situation that generally\n                // puts us in here in the first place.\n                window.setTimeout(function () {\n                    jQuery(subitem._getElement()).focus();\n                }, 0);\n            }\n        }\n    }\n});\ndynamicList.CompositeItem.addMethod('refresh', function () {\n    dynamicList.ListItem.prototype.refresh.call(this);\n    if (!this._items) {\n        return;\n    }\n    if (this._subList) {\n        this._subList.refresh();\n    } else {\n        this._showSubList();\n    }\n});\ndynamicList.CompositeItem.addMethod('getFirstChild', function () {\n    if (this._subList.getItems().length < 1) {\n        // No children, OR, children still loading.\n        return null;\n    }\n    return this._subList.getItems()[0];\n});\ndynamicList.CompositeItem.addMethod('refreshStyle', function () {\n    dynamicList.ListItem.prototype.refreshStyle.call(this);\n    if (!this._getElement()) {\n        // List has not been rendered yet.\n        return;\n    }\n    if (baseList.isItemOpen(this._getElement())) {\n        baseList.openItem(this._getElement());\n        if (this === this.getList().cursor) {\n            if (this._subList && this._subList.cursor) {\n                // Sublist is open, and an item is an active cursor.\n                jQuery(this._getElement()).addClass('supercursor');\n            } else {\n                // Sublist is open, but has no active cursor.\n                jQuery(this._getElement()).addClass('cursor');\n            }\n        }\n    } else {\n        baseList.closeItem(this._getElement());\n        if (this === this.getList().cursor) {\n            jQuery(this._getElement()).addClass('cursor');\n        }\n    }\n    if (!this._subList) {\n        return;\n    }\n    this._subList.refreshStyle();\n});\ndynamicList.CompositeItem.addMethod('_isOpenHandler', function (element) {\n    return jQuery(element).is(this.OPEN_HANDLER_PATTERN);\n}).addMethod('_isCloseHandler', function (element) {\n    return jQuery(element).is(this.CLOSE_HANDLER_PATTERN);\n}).addMethod('_isFavoriteHandler', function (element) {\n    return jQuery(element).is(this.FAVORITE_ICON_PATTERN);\n}).addMethod('_isScheduleHandler', function (element) {\n    return jQuery(element).is(this.SCHEDULE_ICON_PATTERN);\n});\ndynamicList.CompositeItem.addMethod('_getSubListId', function () {\n    return this._generateId() + '_' + this.DEFAULT_SUB_LIST_ID_SUFFIX;\n});    ///////////////////////////////////////////////////////\n// Templated list item - uses Mustache to process item content as a template. Takes fields of item.getValue() to fill the template\n///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////\n// Templated list item - uses Mustache to process item content as a template. Takes fields of item.getValue() to fill the template\n///////////////////////////////////////////////////////\ndynamicList.TemplatedListItem = function (options) {\n    if (options) {\n        this.tooltipText = 'tooltipText' in options ? options.tooltipText : null;\n    }\n    dynamicList.ListItem.call(this, options);\n};\nvar tempFunc = function () {\n};\ntempFunc.prototype = dynamicList.ListItem.prototype;\ndynamicList.TemplatedListItem.prototype = new tempFunc();\ndynamicList.TemplatedListItem.prototype.constructor = dynamicList.TemplatedListItem;\ndynamicList.TemplatedListItem.prototype.processTemplate = function (element) {};\n// List element that is rendered from Underscore template string passed as an option\ndynamicList.UnderscoreTemplatedListItem = function (options) {\n    dynamicList.TemplatedListItem.call(this, options);\n    if (options) {\n        this._template = 'template' in options ? options.template : '';\n    }\n};\nvar tempFunction = function () {\n};\ntempFunction.prototype = dynamicList.TemplatedListItem.prototype;\ndynamicList.UnderscoreTemplatedListItem.prototype = new tempFunction();\ndynamicList.UnderscoreTemplatedListItem.prototype.constructor = dynamicList.UnderscoreTemplatedListItem;\ndynamicList.UnderscoreTemplatedListItem.prototype._getTemplate = function () {\n    return this._template;\n};\ndynamicList.UnderscoreTemplatedListItem.prototype.processTemplate = function () {\n    var element = jQuery(_.template(this._template, xssUtil.hardEscape(this.getValue())))[0];\n    element.templateClassName = element.className;\n    if (this.tooltipText != null) {\n        new JSTooltip(element, { text: xssUtil.hardEscape(this.tooltipText) });\n    }\n    return element;\n};    ///////////////////////////////////////////////////////\n// List Component\n///////////////////////////////////////////////////////\n/*\n * Dynamically creates items on specified UL element. Supports sorting and ...\n *\n * @param id {String} - ID of the UL element, this id will be used as ID of the list.\n * @param options {JSON Object}\n * <ul>\n * <li>items {Array} - array of {@link dynamicList.ListItem}, which need be shown when object is created</li>\n * </ul>\n */\n///////////////////////////////////////////////////////\n// List Component\n///////////////////////////////////////////////////////\n/*\n * Dynamically creates items on specified UL element. Supports sorting and ...\n *\n * @param id {String} - ID of the UL element, this id will be used as ID of the list.\n * @param options {JSON Object}\n * <ul>\n * <li>items {Array} - array of {@link dynamicList.ListItem}, which need be shown when object is created</li>\n * </ul>\n */\ndynamicList.List = function (id, options) {\n    this._id = id;\n    this._items = [];\n    this._selectedItems = [];\n    this._lastSelectedItem = null;\n    this.cursor = null;\n    this._nextId = 1;    // private static var\n    // private static var\n    this.draggables = [];\n    this._parentList = null;\n    if (options) {\n        // Options with defaults.\n        this._selectionDefaultsToCursor = 'selectionDefaultsToCursor' in options ? options.selectionDefaultsToCursor : true;\n        this._allowSelections = 'allowSelections' in options ? options.allowSelections : true;\n        this._cssClassName = 'cssClassName' in options ? options.cssClassName : '';\n        this._excludeFromEventHandling = 'excludeFromEventHandling' in options ? options.excludeFromEventHandling : false;\n        this._excludeFromSelectionTriggers = 'excludeFromSelectionTriggers' in options ? options.excludeFromSelectionTriggers : false;\n        this._multiSelect = 'multiSelect' in options ? options.multiSelect : false;\n        this._selectOnMousedown = 'selectOnMousedown' in options ? options.selectOnMousedown : true;\n        this._setCursorOnMousedown = 'setCursorOnMousedown' in options ? options.setCursorOnMousedown : true;    // Options with no default other than \"undefined\".\n        // Options with no default other than \"undefined\".\n        this._listTemplateDomId = options.listTemplateDomId;\n        this._itemTemplateDomId = options.itemTemplateDomId;\n        this._itemCssClassName = options.itemCssClassName;\n        this._comparator = options.comparator;\n        this.dragPattern = options.dragPattern;\n        this.scroll = options.scroll;    // An initial set of items may be passed in with the options hash.\n        // An initial set of items may be passed in with the options hash.\n        this.setItems(options.items);\n    }\n    this._createFromTemplate();\n    this._registerCustomScroll();\n    dynamicList.activeListId = this.getId();\n    this._msgNItemsSelected = new Template(dynamicList.messages['listNItemsSelected']);\n    dynamicList.lists[this._id] = this;\n};\ndynamicList.List.addVar('Event', {\n    ITEM_SELECTED: 'item:selected',\n    ITEM_UNSELECTED: 'item:unselected',\n    ITEM_MOUSEUP: 'item:mouseup',\n    ITEM_MOUSEDOWN: 'item:mousedown',\n    ITEM_CLICK: 'item:click',\n    ITEM_DBLCLICK: 'item:dblclick',\n    ITEM_OPEN: 'item:open',\n    ITEM_CLOSED: 'item:closed',\n    ITEM_CONTEXTMENU: 'item:contextmenu',\n    ITEM_BEFORE_SELECT_OR_UNSELECT: 'item:beforeSelectOrUnselect'\n});\ndynamicList.List.addVar('DND_WRAPPER_TEMPLATE', 'column_two');\ndynamicList.List.addVar('DND_ITEM_TEMPLATE', 'column_two:resourceName');    ///////////////////////////////////////////////////////\n// List public methods\n///////////////////////////////////////////////////////\n///////////////////////////////////////////////////////\n// List public methods\n///////////////////////////////////////////////////////\ndynamicList.List.addMethod('getNextItemId', function () {\n    return this._nextId++;\n});    /**\n * Gets ID of the list which can be used to find this list in map {@see dynamicList.lists}\n *\n * @return {String} - ID for the list and DOM element\n */\n/**\n * Gets ID of the list which can be used to find this list in map {@see dynamicList.lists}\n *\n * @return {String} - ID for the list and DOM element\n */\ndynamicList.List.addMethod('getId', function () {\n    return this._id;\n});    /**\n * @return {Array}\n */\n/**\n * @return {Array}\n */\ndynamicList.List.addMethod('getItems', function () {\n    return this._items;\n});    /**\n * Resets list items with new items and sorts items, if comparator is defined.\n * @param items {Array} - new array of {@link dynamicList.ListItem}\n */\n/**\n * Resets list items with new items and sorts items, if comparator is defined.\n * @param items {Array} - new array of {@link dynamicList.ListItem}\n */\ndynamicList.List.addMethod('setItems', function (items) {\n    if (!items) {\n        return;\n    }    // If the list had a cursor, a new cursor will need to be assigned.\n    // Likewise, if focus is lost, focus will need to be reassigned to prevent\n    // missing blur events when elements are dropped.\n    // NOTE: Do NOT use getCursor here, as it will attempt to assign a cursor\n    // if none exists, which in turn may add the cursor to the selection set,\n    // depending on list options.  THAT, in turn, could fire user callbacks\n    // that appear to run on items that are about to be replaced.  That could\n    // (and did) cause Filter problems on the Search Results page.\n    // If the list had a cursor, a new cursor will need to be assigned.\n    // Likewise, if focus is lost, focus will need to be reassigned to prevent\n    // missing blur events when elements are dropped.\n    // NOTE: Do NOT use getCursor here, as it will attempt to assign a cursor\n    // if none exists, which in turn may add the cursor to the selection set,\n    // depending on list options.  THAT, in turn, could fire user callbacks\n    // that appear to run on items that are about to be replaced.  That could\n    // (and did) cause Filter problems on the Search Results page.\n    var oldCursor = this.cursor;\n    var listEl = this._getElement();\n    var hadFocus = false;\n    if (listEl && (listEl === document.activeElement || jQuery.contains(listEl, document.activeElement))) {\n        hadFocus = true;\n    }\n    this._items = [];\n    this.resetSelected();\n    this.addItems(items);\n    var newCursor;\n    if (oldCursor) {\n        // A new cursor will be assigned, if any items exist.\n        newCursor = this.getCursor();\n    }\n    if (hadFocus) {\n        if (newCursor && newCursor._getElement()) {\n            // NOTE: StdNav plugin for dynamicList will auto-promote focus when\n            // available (accessibility extensions are on) and possible (items\n            // exist), but this is more efficient.\n            jQuery(newCursor._getElement()).focus();\n        } else if (listEl) {\n            // No items, no suitable cursor, or cursor has not been rendered\n            // yet-- focus the list itself.\n            jQuery(listEl).focus();\n        }  // FIXME: Enable when logger is added\n        // this.logger.error(\"Focus has been abandoned; region tabindex may be lost\");\n        //console.error(\"Focus has been abandoned; region tabindex may be lost\");\n    }\n});    /**\n * Adds items to array items of list and sorts it, if comparator is defined.\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\n/**\n * Adds items to array items of list and sorts it, if comparator is defined.\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\ndynamicList.List.addMethod('addItems', function (items) {\n    if (!items) {\n        return;\n    }\n    items = _.isArray(items) ? items : [items];\n    items.compact().each(function (item) {\n        this._prepareListItem(item);\n        this._items.push(item);\n    }.bind(this));\n    if (this._comparator) {\n        this._items = this._items.sort(this._comparator);\n    }\n});    /**\n * Inserts items to appropriate position in array items of list.\n *\n * WARNING: Using this function with sortable lists may cause unexpected results\n *\n * @param pos {int} - position of element after which new items will be inserted.\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\n/**\n * Inserts items to appropriate position in array items of list.\n *\n * WARNING: Using this function with sortable lists may cause unexpected results\n *\n * @param pos {int} - position of element after which new items will be inserted.\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\ndynamicList.List.addMethod('insertItems', function (pos, items) {\n    if (!items) {\n        return;\n    }\n    items = _.isArray(items) ? items : [items];\n    items = items.compact();\n    items.each(function (item) {\n        this._prepareListItem(item);\n    }.bind(this));\n    this._items.splice.apply(this._items, [\n        pos,\n        0\n    ].concat(items));\n    if (this._comparator) {\n        this._items = this._items.sort(this._comparator);\n    }\n});    /**\n * Prepare List Item for adding to list. Set List reference, template DOM ID and css class name.\n */\n/**\n * Prepare List Item for adding to list. Set List reference, template DOM ID and css class name.\n */\ndynamicList.List.addMethod('_prepareListItem', function (item) {\n    if (!item) {\n        return;\n    }\n    item.setList(this);\n    if (this._itemTemplateDomId && !item.getTemplateDomId()) {\n        // If list has specified template for all items and there is no other template\n        item.setTemplateDomId(this._itemTemplateDomId);\n    }\n    if (this._itemCssClassName && !item.getCssClassName()) {\n        // If list has specified CSS class for all items and the item don't has CSS class\n        item.setCssClassName(this._itemCssClassName);\n    }\n    if (this._excludeFromEventHandling && !item._excludeFromEventHandling) {\n        item._excludeFromEventHandling = this._excludeFromEventHandling;\n    }\n    if (this._excludeFromSelectionTriggers && !item._excludeFromSelectionTriggers) {\n        item._excludeFromSelectionTriggers = this._excludeFromSelectionTriggers;\n    }\n});    /**\n * Removes specified items from list\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\n/**\n * Removes specified items from list\n * @param items {Array} - array of {@link dynamicList.ListItem}\n */\ndynamicList.List.addMethod('removeItems', function (items) {\n    if (!items || !isArray(items)) {\n        return;\n    }    // The current cursor and/or browser focus may be lost as a result of this\n    // operation.  Deleting the current focus does NOT fire blur events!\n    // Therefore it is critical to MOVE focus prior to deleting the element, if\n    // it is focused.\n    // The current cursor and/or browser focus may be lost as a result of this\n    // operation.  Deleting the current focus does NOT fire blur events!\n    // Therefore it is critical to MOVE focus prior to deleting the element, if\n    // it is focused.\n    var newCursor = this.getCursor();\n    var lostFocus = false;    // Deselect items PRIOR to removal.\n    // Deselect items PRIOR to removal.\n    items.each(function (item) {\n        // Note that _removeItemFromSelected is used instead of deselectItem to\n        // avoid changing the cursor prematurely.  This avoids callers reacting\n        // to selection/deselection events (which occur as a result of the cursor\n        // change on lists with alwaysSelectCursor style) on items that do not\n        // exist by the time they attempt to handle those events.\n        this._removeItemFromSelected(item);\n        if (newCursor === item) {\n            // If we are removing the cursor (or the prospective new cursor),\n            // ensure a new cursor is assigned.\n            newCursor = this.getNextItem(item);\n            if (!newCursor) {\n                newCursor = this.getPreviousItem(item);\n            }\n        }\n    }.bind(this));\n    this._items = this._items.reject(function (item) {\n        return items.include(item);\n    });\n    items.each(function (item) {\n        // Sanity check; remove when tested.\n        if (newCursor === item) {\n        }    // FIXME: Turn this on once the logger is in use.\n        // logger.error(\"Focus has been abandoned\");\n        //console.error(\"Focus has been abandoned\");\n        item.unsetList();\n        item.refresh();\n    });    // Update the cursor, if needed.  Note that lists with NO cursor should\n    // continue to have no cursor.\n    // Update the cursor, if needed.  Note that lists with NO cursor should\n    // continue to have no cursor.\n    if (newCursor !== this.getCursor()) {\n        this.setCursor(newCursor);\n    }    // If focus has been lost, focus the new cursor.\n    // If focus has been lost, focus the new cursor.\n    if (lostFocus) {\n        if (this.getCursor() && this.getCursor()._getElement()) {\n            jQuery(this.getCursor()._getElement().focus());\n        } else if (this._getElement()) {\n            // No cursor, or cursor has not been rendered yet.\n            // Set focus to the list, if possible.\n            jQuery(this._getElement().focus());\n        }\n    }\n});    /**\n * @param comparator {Function} -\n */\n/**\n * @param comparator {Function} -\n */\ndynamicList.List.addMethod('sort', function (comparator) {\n    comparator && (this._comparator = comparator);\n    if (this._comparator) {\n        this.getItems().sort(this._comparator);\n    }\n});    /** Note that it is not possible to set the cursor to null to remove it.  All\n *  lists have cursors, and those cursors need to be set.  You may not think\n *  you need one, but you do-- this is how visually-disabled users read through\n *  your list entries.\n *\n *  If you really want to disable a visual cursor indication for a particular\n *  list, use an ID-based CSS style rule to do so.  If the user tabs into the\n *  list, they will still be able to navigate using the arrow keys, and will\n *  see the usual :focus and .subfocus visual cues when doing so.\n */\n/** Note that it is not possible to set the cursor to null to remove it.  All\n *  lists have cursors, and those cursors need to be set.  You may not think\n *  you need one, but you do-- this is how visually-disabled users read through\n *  your list entries.\n *\n *  If you really want to disable a visual cursor indication for a particular\n *  list, use an ID-based CSS style rule to do so.  If the user tabs into the\n *  list, they will still be able to navigate using the arrow keys, and will\n *  see the usual :focus and .subfocus visual cues when doing so.\n */\ndynamicList.List.addMethod('setCursor', function (newCursor) {\n    // Other parts of the UI may move the cursor without wanting to move focus;\n    // do not grab keyboard focus when this happens.\n    var hadFocus = false;\n    if (document.activeElement && jQuery.contains(this._getElement(), document.activeElement)) {\n        hadFocus = true;\n    }    // The old cursor, if any (and if rendered), needs the CSS class removed.\n    // The old cursor, if any (and if rendered), needs the CSS class removed.\n    if (this.cursor && this.cursor.getList() && this.cursor._getElement()) {\n        jQuery(this.cursor._getElement()).removeClass('cursor');\n    }    // Whether it's been rendered or not, this is the new cursor.\n    // Whether it's been rendered or not, this is the new cursor.\n    this.cursor = newCursor;    // Keep in mind the cursor may not have been assigned to list yet, or\n    // rendered yet.  If it has been, assign the CSS class.\n    // Keep in mind the cursor may not have been assigned to list yet, or\n    // rendered yet.  If it has been, assign the CSS class.\n    if (newCursor && newCursor.getList() && newCursor._getElement()) {\n        this.scrollUpTo(newCursor);\n        if (this._allowSelections && this._selectionDefaultsToCursor) {\n            if (this.getSelectedItems().length < 1) {\n                this.selectItem(newCursor);\n            }\n        }\n        if (hadFocus) {\n            jQuery(this.cursor._getElement()).focus();\n        }\n        jQuery(this.cursor._getElement()).addClass('cursor');\n    }\n});    /**\n */\n/**\n */\ndynamicList.List.addMethod('getCursor', function () {\n    if (this.cursor && this.cursor.getList() && this.cursor._getElement()) {\n        // When filtering results, we can wind up with cursors that aren't\n        // actually visible anymore, because the list has been refreshed with\n        // filtered results.  However, checking for that is deferred until this\n        // point, to avoid interrupting an extended rendering sequence in a\n        // detached subtree that has not yet been appended to the DOM.\n        //\n        // TODO: Evaluate whether this would more appropriately check for the\n        // visibility within the list container itself, rather than the overall\n        // document.  Ensure headless testing does not break, however.\n        if (jQuery(this.cursor._getElement()).closest('BODY').length > 0) {\n            return this.cursor;\n        }\n    }    // No suitable cursor; use the most recently selected item, if any.\n    // No suitable cursor; use the most recently selected item, if any.\n    if (this._selectedItems.length > 0) {\n        if (this._selectedItems[this._selectedItems.length - 1]._getElement()) {\n            this.setCursor(this._selectedItems[this._selectedItems.length - 1]);    // Again, as in the case above, this is only useful if the item has\n            // not been filtered out, although this should not occur.\n            // Again, as in the case above, this is only useful if the item has\n            // not been filtered out, although this should not occur.\n            if (jQuery(this.cursor._getElement()).closest('BODY').length > 0) {\n                return this.cursor;\n            }\n        }\n    }    // No cursor or selected items, or possibly, no items in the list.\n    // Promote the first list item, if one exists.\n    // No cursor or selected items, or possibly, no items in the list.\n    // Promote the first list item, if one exists.\n    if (this._items.length > 0) {\n        this.setCursor(this._items[0]);\n        return this.cursor;\n    }    // No items in the list.\n    // No items in the list.\n    return null;\n});    /**\n * @return {Array}\n */\n/**\n * @return {Array}\n */\ndynamicList.List.addMethod('getCursorElement', function () {\n    // No items in the list, return null.\n    if (this.getCursor()) {\n        return this.getCursor()._getElement();\n    } else {\n        return null;\n    }\n});    /**\n * @return {Array}\n */\n/**\n * @return {Array}\n */\ndynamicList.List.addMethod('getSelectedItems', function () {\n    return this._selectedItems;\n});    /**\n * @param item {dynamicList.ListItem} -\n */\n/**\n * @param item {dynamicList.ListItem} -\n */\ndynamicList.List.addMethod('isItemSelected', function (item) {\n    return this.getSelectedItems().include(item);\n});    /**\n * @param item {dynamicList.ListItem} -\n */\n/**\n * @param item {dynamicList.ListItem} -\n */\ndynamicList.List.addMethod('selectItem', function (item, isCtrlHeld, isShiftKeyHeld, isContextMenu) {\n    var event = this.fire(this.Event.ITEM_BEFORE_SELECT_OR_UNSELECT, { item: item });\n    if (event.stopSelectOrUnselect) {\n        return;\n    }    // Fix for multiple DnD.\n    // If couple items selected and _selectOnMousedown enabled\n    // we need deselect items on mouse up to be able Drag them.\n    // Fix for multiple DnD.\n    // If couple items selected and _selectOnMousedown enabled\n    // we need deselect items on mouse up to be able Drag them.\n    if (this._multiSelect && this._selectedItems.length > 1 && this.isItemSelected(item) && !(isCtrlHeld || isShiftKeyHeld || isContextMenu)) {\n        return;\n    }\n    var isContextMenuOnSelected = this.isItemSelected(item) && isContextMenu;\n    var reset = !(this._multiSelect && isCtrlHeld) && !isContextMenuOnSelected;\n    var deselect = this.isItemSelected(item) && isCtrlHeld && !isContextMenuOnSelected;\n    var selectRange = this._multiSelect && !deselect && isNotNullORUndefined(this._lastSelectedItem) && isShiftKeyHeld;\n    var select = !deselect && !selectRange;\n    if (reset) {\n        this.resetSelected();\n    }\n    if (deselect && !reset) {\n        this._removeItemFromSelected(item);\n    }\n    if (selectRange) {\n        var start = this._items.indexOf(this._lastSelectedItem);\n        var end = this._items.indexOf(item);\n        var min = Math.min(start, end), max = Math.max(start, end);\n        if (min > -1) {\n            for (var i = min; i <= max; i++) {\n                this._addItemToSelected(this._items[i], false);\n            }\n        } else {\n            this._addItemToSelected(this._items[max], false);\n        }\n    }\n    if (select) {\n        this._addItemToSelected(item, !(isShiftKeyHeld && this._multiSelect));\n    }    // Move the cursor to the most recently selected or deselected item.\n    // Move the cursor to the most recently selected or deselected item.\n    this.setCursor(item);\n});    /**\n * @param item {dynamicList.ListItem} -\n */\n/**\n * @param item {dynamicList.ListItem} -\n */\ndynamicList.List.addMethod('deselectItem', function (item) {\n    this._removeItemFromSelected(item);    // Move the cursor to the most recently selected or deselected item.\n    // Move the cursor to the most recently selected or deselected item.\n    this.setCursor(item);\n});\ndynamicList.List.addMethod('deselectOthers', function (item, isCtrlHeld, isShiftKey, isContextMenu) {\n    var event = this.fire(this.Event.ITEM_BEFORE_SELECT_OR_UNSELECT, { item: item });\n    if (event.stopSelectOrUnselect) {\n        return;\n    }    // Fix for multiple DnD.\n    // If couple items selected and _selectOnMousedown enabled\n    // we need deselect items on mouse up to be able Drag them.\n    // Fix for multiple DnD.\n    // If couple items selected and _selectOnMousedown enabled\n    // we need deselect items on mouse up to be able Drag them.\n    if (this._multiSelect && this._selectedItems.length > 1 && this.isItemSelected(item) && !(isCtrlHeld || isShiftKey || isContextMenu)) {\n        var items = this._selectedItems.findAll(function (i) {\n            return i != item;\n        });\n        items.each(function (i) {\n            this._removeItemFromSelected(i);\n        }.bind(this));\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicList.List.addMethod('resetSelected', function (skipParent) {\n    var items = this._selectedItems;\n    this._selectedItems = [];\n    items.each(function (item) {\n        var thatList = item.getList();\n        if (thatList) {\n            if (thatList !== this) {\n                thatList.resetSelected(true);\n            }\n        }\n        item.refreshStyle();\n        this.fire(this.Event.ITEM_UNSELECTED, { item: item });\n    }.bind(this));\n    if (this._parentList && !skipParent) {\n        this._parentList.resetSelected();\n    }\n});    /** Ensure the item is visible in the viewport, to avoid scroll jumps when it\n *  is focused.  If the item is fully visible, regardless of absolute position\n *  on the screen, nothing happens.  If the item is offscreen, or partially\n *  offscreen, the scrollbar position moves down just far enough to fully show\n *  the item.  If the item is actually larger than the viewport (which is\n *  presumed to be possible, if subitems are expanded), than the top of the\n *  item is scrolled to the top of the viewport.\n *\n */\n/** Ensure the item is visible in the viewport, to avoid scroll jumps when it\n *  is focused.  If the item is fully visible, regardless of absolute position\n *  on the screen, nothing happens.  If the item is offscreen, or partially\n *  offscreen, the scrollbar position moves down just far enough to fully show\n *  the item.  If the item is actually larger than the viewport (which is\n *  presumed to be possible, if subitems are expanded), than the top of the\n *  item is scrolled to the top of the viewport.\n *\n */\ndynamicList.List.addMethod('scrollDownTo', function (item) {\n    var scrollEl = this._getElement().parentNode;\n    if (!scrollEl || !item || !item._getElement()) {\n        // Keep the testing framework happy; normally these would never be\n        // detatched from the DOM.\n        return;\n    }\n    var scrollTop = scrollEl.scrollTop;\n    var scrollPortHeight = scrollEl.offsetHeight;\n    var itemYPos = item._getElement().offsetTop;\n    var itemHeight = item._getElement().offsetHeight;    // TODO: more work if the item is actually taller than the scroll viewport\n    // (might happen for expanded items with many subitems).\n    // TODO: more work if the item is actually taller than the scroll viewport\n    // (might happen for expanded items with many subitems).\n    var correction = itemYPos + itemHeight - (scrollTop + scrollPortHeight);\n    if (correction > 0) {\n        scrollEl.scrollTop += correction;\n    }\n});    /** Ensure the item is visible in the viewport, to avoid scroll jumps when it\n *  is focused.  If the item is fully visible, regardless of absolute position\n *  on the screen, nothing happens.  If the item is offscreen, or partially\n *  offscreen, the scrollbar position moves down just far enough to fully show\n *  the item.  If the item is actually larger than the viewport (which is\n *  presumed to be possible, if subitems are expanded), than the top of the\n *  item is scrolled to the top of the viewport.\n */\n/** Ensure the item is visible in the viewport, to avoid scroll jumps when it\n *  is focused.  If the item is fully visible, regardless of absolute position\n *  on the screen, nothing happens.  If the item is offscreen, or partially\n *  offscreen, the scrollbar position moves down just far enough to fully show\n *  the item.  If the item is actually larger than the viewport (which is\n *  presumed to be possible, if subitems are expanded), than the top of the\n *  item is scrolled to the top of the viewport.\n */\ndynamicList.List.addMethod('scrollUpTo', function (item) {\n    var scrollEl = this._getElement().parentNode;\n    if (!scrollEl || !item || !item._getElement()) {\n        // Keep the testing framework happy; normally these would never be\n        // detatched from the DOM.\n        return;\n    }\n    var scrollTop = scrollEl.scrollTop;\n    var itemYPos = item._getElement().offsetTop;  // Hack to try and deal with column headers.  The header should NOT have\n    // been included in the scrollable region.\n    // FIXME-- remove the header from the scrollable region, then remove this\n    // hack.  Note the potentially invalid assumption that the header has the\n    // same height as an item.\n    // Hack to try and deal with column headers.  The header should NOT have\n    // been included in the scrollable region.\n    // FIXME-- remove the header from the scrollable region, then remove this\n    // hack.  Note the potentially invalid assumption that the header has the\n    // same height as an item.\n    var headerHeight = item._getElement().offsetHeight;    // TODO: more work if the item is actually taller than the scroll viewport\n    // (might happen for expanded items with many subitems).\n    // TODO: more work if the item is actually taller than the scroll viewport\n    // (might happen for expanded items with many subitems).\n    var correction = scrollTop + headerHeight - itemYPos;\n    if (correction > 0) {\n        scrollEl.scrollTop -= correction;\n    }\n});    /**\n * @param item - reference item\n */\n/**\n * @param item - reference item\n */\ndynamicList.List.addMethod('getNextItem', function (item) {\n    var items = this.getItems();\n    var currentIndex = items.indexOf(item);\n    return ~currentIndex ? this.getItems()[currentIndex + 1] : null;\n});    /**\n * @param item - reference item\n */\n/**\n * @param item - reference item\n */\ndynamicList.List.addMethod('getPreviousItem', function (item) {\n    var items = this.getItems();\n    var currentIndex = items.indexOf(item);\n    return ~currentIndex ? this.getItems()[currentIndex - 1] : null;\n});    /**\n * @param event\n */\n/**\n * @param event\n */\ndynamicList.List.addMethod('selectNext', function (event) {\n    var baseEvent = event.memo.targetEvent;\n    var item = this.getCursor();\n    var subItem = null, nextItem = null;    // See if there is a sublist open; if so, transfer responsibility there,\n    // unless we were already on the last subitem, in which case, fall through.\n    // See if there is a sublist open; if so, transfer responsibility there,\n    // unless we were already on the last subitem, in which case, fall through.\n    if (item._subList && item._getElement() && jQuery(item._getElement()).hasClass(layoutModule.OPEN_CLASS)) {\n        // If we're moving into the sublist directly from the parent, ensure we\n        // go to the first item.\n        if (!jQuery(item._getElement()).hasClass('supercursor')) {\n            if (item._subList.getItems().length > 0) {\n                nextItem = item._subList.getItems()[0];\n                jQuery(item._getElement()).addClass('supercursor');\n                baseEvent.preventDefault();\n                baseEvent.stopPropagation();\n                item._subList.setCursor(nextItem);\n                jQuery(item._subList.cursor._getElement()).focus();\n                return;\n            }\n        }\n        subItem = item._subList.getCursor();\n        nextItem = subItem.getList().getNextItem(subItem);\n        if (nextItem) {\n            // Yes, another subitem is available.  Go deal with it.\n            return subItem.getList().selectNext(event);\n        }\n    }    // Either no sublist, sublist is closed,  or out of subitems; select next\n    // peer.\n    // Either no sublist, sublist is closed,  or out of subitems; select next\n    // peer.\n    jQuery(item._getElement()).removeClass('supercursor');\n    if (item._subList) {\n        item._subList.cursor = null;\n    }\n    nextItem = item.getList().getNextItem(item);\n    if (nextItem) {\n        if (this._multiSelect && isShiftHeld(baseEvent)) {\n            if (this.isItemSelected(nextItem)) {\n                item.getList().deselectItem(item);\n            } else {\n                this._addItemToSelected(nextItem, false);\n            }\n        } else {\n            this.resetSelected();\n            item.getList().selectItem(nextItem);\n        }    // NOTE: Implies scroll, refresh, and possibly selection.\n        // NOTE: Implies scroll, refresh, and possibly selection.\n        this.setCursor(nextItem);\n    }\n    baseEvent.preventDefault();\n    baseEvent.stopPropagation();\n});    /**\n * @param event\n */\n/**\n * @param event\n */\ndynamicList.List.addMethod('selectPrevious', function (event) {\n    var baseEvent = event.memo.targetEvent;\n    var item = this.getCursor();\n    var subItem = null, previousItem = null;    // See if there is a sublist open; if so, transfer responsibility there,\n    // unless we were already on main item, in which case, fall through; or we\n    // were on the first subitem, in which case, move focus to the main item.\n    // See if there is a sublist open; if so, transfer responsibility there,\n    // unless we were already on main item, in which case, fall through; or we\n    // were on the first subitem, in which case, move focus to the main item.\n    if (jQuery(item._getElement()).hasClass('supercursor')) {\n        subItem = item._subList.getCursor();\n        previousItem = subItem.getList().getPreviousItem(subItem);\n        if (previousItem) {\n            // Yes, a previous subitem is available.  Go deal with it.\n            return subItem.getList().selectPrevious(event);\n        } else {\n            // No previous subitem is available.  Select the main item instead.\n            if (item._subList.cursor) {\n                if (item._subList.cursor._element) {\n                    jQuery(item._subList.cursor._element).removeClass('cursor');\n                }\n                item._subList.cursor = null;\n            }\n            if (!(isShiftHeld(baseEvent) && this._multiSelect)) {\n                item._subList.resetSelected();\n            }\n            jQuery(item._getElement()).removeClass('supercursor');\n            this.setCursor(item);\n            jQuery(item._getElement()).focus();\n        }\n    } else {\n        // Normal case-- no sublist, or main item selected.\n        previousItem = item.getList().getPreviousItem(item);\n        if (previousItem) {\n            if (this._multiSelect && isShiftHeld(baseEvent)) {\n                if (this.isItemSelected(previousItem)) {\n                    item.getList().deselectItem(item);\n                } else {\n                    this._addItemToSelected(previousItem, false);\n                }\n            } else {\n                this.resetSelected();\n                item.getList().selectItem(previousItem);\n            }    // NOTE: Implies scroll, refresh, and possibly selection.\n            // NOTE: Implies scroll, refresh, and possibly selection.\n            this.setCursor(previousItem);\n        }\n    }\n    baseEvent.preventDefault();\n    baseEvent.stopPropagation();\n});    /**\n * @param event\n */\n/**\n * @param event\n */\ndynamicList.List.addMethod('selectPageDown', function (event) {\n    var baseEvent = event.memo.targetEvent;\n    baseEvent.preventDefault();\n    baseEvent.stopPropagation();\n    var item = this.getCursor();    // FIXME-- the header is part of the scrollable region; it shouldn't be.\n    // Use the height of whatever item is handy to stand in for the header.\n    // FIXME-- the header is part of the scrollable region; it shouldn't be.\n    // Use the height of whatever item is handy to stand in for the header.\n    var headerHack = item._getElement().offsetHeight;    // Since items may vary in height, figure out the scroll offset of the next\n    // page disregarding the items, then figure out the most sensible item to\n    // reposition to.\n    // Since items may vary in height, figure out the scroll offset of the next\n    // page disregarding the items, then figure out the most sensible item to\n    // reposition to.\n    var scrollEl = this._getElement().parentNode;\n    var newScrollTop = scrollEl.scrollTop + (scrollEl.offsetHeight - headerHack);\n    if (newScrollTop > scrollEl.offsetHeight) {\n        newScrollTop = scrollEl.offsetHeight;\n    }\n    scrollEl.scrollTop = newScrollTop;\n    var iterItem = item, nextItem = null;\n    while (iterItem && iterItem._getElement().offsetTop + iterItem._getElement().offsetHeight < scrollEl.scrollTop + scrollEl.offsetHeight) {\n        nextItem = iterItem;\n        if (isShiftHeld(baseEvent)) {\n            if (this.isItemSelected(nextItem)) {\n                item.getList().deselectItem(item);\n            } else {\n                this._addItemToSelected(nextItem, false);\n            }\n        }\n        iterItem = nextItem.getList().getNextItem(nextItem);\n    }\n    if (nextItem) {\n        if (!(this._multiSelect && isShiftHeld(baseEvent))) {\n            this.resetSelected();\n            item.getList().selectItem(nextItem);\n        }    // NOTE: Implies scroll, refresh, and possibly selection.\n        // NOTE: Implies scroll, refresh, and possibly selection.\n        this.setCursor(nextItem);\n    }\n});\ndynamicList.List.addMethod('selectPageUp', function (event) {\n    var baseEvent = event.memo.targetEvent;\n    baseEvent.preventDefault();\n    baseEvent.stopPropagation();\n    var item = this.getCursor();    // FIXME-- the header is part of the scrollable region; it shouldn't be.\n    // Use the height of whatever item is handy to stand in for the header.\n    // FIXME-- the header is part of the scrollable region; it shouldn't be.\n    // Use the height of whatever item is handy to stand in for the header.\n    var headerHack = item._getElement().offsetHeight;    // Since items may vary in height, figure out the scroll offset of the next\n    // page disregarding the items, then figure out the most sensible item to\n    // reposition to.\n    // Since items may vary in height, figure out the scroll offset of the next\n    // page disregarding the items, then figure out the most sensible item to\n    // reposition to.\n    var scrollEl = this._getElement().parentNode;\n    var newScrollTop = scrollEl.scrollTop + (scrollEl.offsetHeight - headerHack);\n    if (newScrollTop > scrollEl.offsetHeight) {\n        newScrollTop = scrollEl.offsetHeight;\n    }\n    scrollEl.scrollTop = newScrollTop;\n    var iterItem = item, previousItem = null;\n    while (iterItem && iterItem._getElement().offsetTop > scrollEl.scrollTop - scrollEl.offsetHeight) {\n        previousItem = iterItem;\n        if (this._multiSelect && isShiftHeld(baseEvent)) {\n            if (this.isItemSelected(previousItem)) {\n                item.getList().deselectItem(item);\n            } else {\n                this._addItemToSelected(previousItem, false);\n            }\n        }\n        iterItem = previousItem.getList().getPreviousItem(previousItem);\n    }\n    if (previousItem) {\n        if (!(this._multiSelect && isShiftHeld(baseEvent))) {\n            this.resetSelected();\n            item.getList().selectItem(previousItem);\n        }    // NOTE: Implies scroll, refresh, and possibly selection.\n        // NOTE: Implies scroll, refresh, and possibly selection.\n        this.setCursor(previousItem);\n    }\n});    /**\n * @param event\n */\n/**\n * @param event\n */\ndynamicList.List.addMethod('selectOutwards', function (event) {\n    if (this.getSelectedItems().length < 1) {\n        return;\n    }\n    var item = this.getSelectedItems()[0];\n    var element = item._getElement();\n    var outItem = !baseList.isItemOpen(element) && item.parentItem;\n    if (outItem) {\n        item.deselect();\n        outItem.select();\n        outItem._getElement().focus();\n    } else {\n        baseList.closeItem(element);\n        this.fire(this.Event.ITEM_CLOSED, {\n            targetEvent: event,\n            item: item\n        });\n    }\n});    /**\n * @param event\n */\n/**\n * @param event\n */\ndynamicList.List.addMethod('selectInwards', function (event) {\n    var item = this.cursor;    // If there is no cursor for some reason (possibly during construction?)\n    // then use the first selected item.  If there is neither a cursor nor any\n    // selected items, abort.\n    // If there is no cursor for some reason (possibly during construction?)\n    // then use the first selected item.  If there is neither a cursor nor any\n    // selected items, abort.\n    if (!item) {\n        if (this.getSelectedItems().length < 1) {\n            return;\n        }\n        item = this.getSelectedItems()[0];\n    }\n    if (item.isComposite) {\n        var element = item._getElement();\n        if (baseList.isItemOpen(element)) {\n            var subitem = item.getFirstChild();\n            if (subitem) {\n                item.deselect();\n                subitem.getList().setCursor(subitem);    //subitem.select();\n                //subitem.select();\n                if (item._getElement()) {\n                    var $item = jQuery(item._getElement());\n                    if (jQuery($item).is('.cursor')) {\n                        jQuery($item).removeClass('cursor');\n                        jQuery($item).addClass('supercursor');\n                    }\n                }\n                if (subitem._getElement()) {\n                    jQuery(subitem._getElement()).focus();\n                }\n            }\n        } else {\n            baseList.openItem(element);\n            this.fire(this.Event.ITEM_OPEN, {\n                targetEvent: event,\n                item: item\n            });    // At this point, the contents of the sublist will still need to\n            // load, so we can take no other action.\n        }\n    }\n});    /**\n * Render list items. Use this method when you need to re-render list.\n */\n/**\n * Render list items. Use this method when you need to re-render list.\n */\ndynamicList.List.addMethod('show', function () {\n    dynamicList.activeListId = this.getId();\n    this._getElement().update();\n    var items = this.getItems();\n    var itemsAmount = items.length;\n    items.each(function (item, index) {\n        item.first = index === 0;\n        item.last = index === itemsAmount - 1;\n        item.show(this._getElement());\n    }.bind(this));\n    this.draggables = [];\n    this.scroll && this.scroll.refresh();\n    this._initEvents();\n});    /**\n * Updates UI from value of the item and remove unused DOM elements (li elements)\n */\n/**\n * Updates UI from value of the item and remove unused DOM elements (li elements)\n */\ndynamicList.List.addMethod('refresh', function () {\n    if (!this._getElement()) {\n        // List has not been rendered yet.\n        return;\n    }    // Ensure that the list has a cursor.\n    // Ensure that the list has a cursor.\n    this.getCursor();    // Get the current scroll offset, so it can be sustained after refreshing\n    // the list.\n    // Get the current scroll offset, so it can be sustained after refreshing\n    // the list.\n    var scrollEl = this._getElement().parentNode, scrollTop;\n    if (!scrollEl) {\n        // Keep the testing framework happy; normally these would never be\n        // detatched from the DOM.\n        scrollTop = 0;\n    } else {\n        scrollTop = scrollEl.scrollTop;\n    }\n    this.refreshStyle();\n    var elements = this._getElement().childElements(), itemElements = [], cursor = this.getCursor(), cursorWasFocus = false;\n    if (cursor && cursor.getList() && cursor._getElement()) {\n        if (document.activeElement === cursor._getElement() || jQuery.contains(cursor._getElement(), document.activeElement)) {\n            cursorWasFocus = true;\n        }\n    }\n    this.getItems().each(function (item, index) {\n        item.first = index === 0;\n        item.last = index === this.getItems().length - 1;\n        if (item.isRendered()) {\n            if (item.index() != elements.indexOf(item._getElement())) {\n                var wasOpened = baseList.isItemOpen(item._getElement());\n                item._getElement().remove();\n                item.show(this._getElement());\n                if (wasOpened) {\n                    baseList.openItem(item._getElement());\n                }\n            } else {\n                item.refresh();\n            }\n        } else {\n            item.show(this._getElement());\n        }\n        itemElements.push(item._getElement());\n    }.bind(this));\n    elements.each(function (e) {\n        if (!itemElements.include(e) && e.parentNode) {\n            e.remove();\n        }\n    });    //this.scroll && this.scroll.refresh();\n    //this.scroll && this.scroll.refresh();\n    this.setCursor(cursor);    // Refresh can result in loss of focus under certain circumstances.\n    // Refresh can result in loss of focus under certain circumstances.\n    if (cursorWasFocus) {\n        jQuery(this.getCursorElement())[0].focus();\n    }    // Finally, restore the scroll offset.  This is necessary if the list was\n    // manually scrolled so that the cursor is no longer visible.\n    // Finally, restore the scroll offset.  This is necessary if the list was\n    // manually scrolled so that the cursor is no longer visible.\n    if (scrollEl) {\n        scrollEl.scrollTop = scrollTop;\n    }\n});    /**\n * Refreshing classname of the list\n */\n/**\n * Refreshing classname of the list\n */\ndynamicList.List.addMethod('refreshStyle', function (clean) {\n    var element = this._getElement();\n    if (!element) {\n        // List has not been rendered yet.\n        return;\n    }\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    if (this._cssClassName) {\n        jQuery(element).addClass(this._cssClassName);\n    }\n});    /**\n * Generates custom event of the list.\n *\n * @param eventName\n */\n/**\n * Generates custom event of the list.\n *\n * @param eventName\n */\ndynamicList.List.addMethod('fire', function (eventName, memo) {\n    var element = jQuery(this._getElement())[0];\n    if (element) {\n        return element.fire(eventName, memo);\n    } else {\n        return null;\n    }\n});    /**\n * @param eventName\n */\n/**\n * @param eventName\n */\ndynamicList.List.addMethod('observe', function (eventName, handler) {\n    this._getElement().observe(eventName, handler);\n});    /**\n * @param eventName\n */\n/**\n * @param eventName\n */\ndynamicList.List.addMethod('stopObserving', function (eventName, handler) {\n    this._getElement().stopObserving(eventName, handler);\n});    ///////////////////////////////////////////////////////\n// List private methods\n///////////////////////////////////////////////////////\n/**\n * Gets list container\n * @return {DOMElement}\n */\n///////////////////////////////////////////////////////\n// List private methods\n///////////////////////////////////////////////////////\n/**\n * Gets list container\n * @return {DOMElement}\n */\ndynamicList.List.addMethod('_getElement', function () {\n    if (!this._element) {\n        // TODO: Improve performance by using a jQuery lookup specifically on\n        // the list subdom, rather than the whole page.\n        this._element = jQuery('#' + this.getId())[0];\n    }\n    return this._element;\n});    /**\n * Gets the item from the event in list\n *\n * @paran {Event}\n */\n/**\n * Gets the item from the event in list\n *\n * @paran {Event}\n */\ndynamicList.List.addMethod('getItemByEvent', function (event) {\n    if (event) {\n        var element = Event.element(event);    //event.originalTarget || event.srcElement;\n        //event.originalTarget || event.srcElement;\n        while (element && element.readAttribute && jQuery(element).attr('id') !== this.getId()) {\n            var item = element.listItem;\n            if (item && item.getList() != null) {\n                var itemList = item.getList(), idsAreEqual = itemList.getId() == this.getId(), parentListContainsChild = this._getElement().contains(itemList._getElement());\n                if (idsAreEqual || parentListContainsChild) {\n                    item._label = xssUtil.unescape(item._label);\n                    return item;\n                } else {\n                    break;\n                }\n            } else {\n                element = jQuery( element.parentNode)[0];\n            }\n        }\n    }\n    return null;\n});\ndynamicList.List.addMethod('_createFromTemplate', function () {\n    var tabindex = jQuery(this._getElement()).attr('tabindex');\n    this.tabindex = parseInt(tabindex && tabindex.length > 0 ? tabindex : -1);\n    this._getElement().insert({ after: this._getTemplateElement(this._getElement()) });\n    this._getElement().remove();\n    this._element = null;\n    this._getElement().update();\n    this.tabindex && this.tabindex.length > 0 && jQuery(this._getElement()).attr('tabindex', this.tabindex);\n    disableSelectionWithoutCursorStyle(this._getElement());\n});\ndynamicList.List.addMethod('_getTemplateElement', function (currentElement) {\n    var id = this._listTemplateDomId;\n    if (!dynamicList._templateHash[id]) {\n        dynamicList._templateHash[id] = id;\n    }\n    var clone = document.getElementById(dynamicList._templateHash[id]).clone(true);\n    jQuery(clone).attr('id', this.getId());    //clone.down().writeAttribute(\"tabIndex\", -1);\n    //clone.down().writeAttribute(\"tabIndex\", -1);\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    cloneCustomAttributes(currentElement, clone);\n    return clone;\n});\ndynamicList.List.addMethod('_addItemToSelected', function (item, remember) {\n    if (item && !this.isItemSelected(item)) {\n        this._selectedItems.push(item);\n        if (remember) {\n            this._lastSelectedItem = item;\n        }    //        item.focus();\n        //        item.focus();\n        item.refreshStyle();\n        if (this._parentList) {\n            this._parentList._addItemToSelected(item, remember);\n        } else {\n            this.fire(this.Event.ITEM_SELECTED, { item: item });\n        }\n    }\n});\ndynamicList.List.addMethod('_removeItemFromSelected', function (item) {\n    if (item && this.isItemSelected(item)) {\n        this._selectedItems = this._selectedItems.without(item);\n        item.refreshStyle();\n        if (this._parentList) {\n            this._parentList._removeItemFromSelected(item);\n        } else {\n            this.fire(this.Event.ITEM_UNSELECTED, { item: item });\n        }\n    }\n});\ndynamicList.List.addMethod('_buildDnDOverlay', function (element) {\n    //    var wrapper = $(this.DND_WRAPPER_TEMPLATE).cloneNode(true), template = $(this.DND_ITEM_TEMPLATE).cloneNode(true);\n    element.setStyle({\n        width: null,\n        height: null\n    });\n    if (element.items.length > 1) {\n        element.update(this._msgNItemsSelected.evaluate({ count: element.items.length }));\n    } else if (element.items.length == 1) {\n        element.update(xssUtil.hardEscape(element.items[0].getLabel()));\n    }\n});\ndynamicList.List.addMethod('_registerCustomScroll', function () {\n    if (!this.scroll && this._getElement()) {\n        var scrollBar = this._getElement().up(layoutModule.SWIPE_SCROLL_PATTERN);\n        if (scrollBar) {\n            var scroll = layoutModule.scrolls.get(scrollBar.identify());\n            scroll && (this.scroll = scroll);\n        }\n    }\n});    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// List DnD\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// List DnD\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\ndynamicList.List.addMethod('createDraggableIfNeeded', function (event) {\n    //make draggable - test in this order - for efficiency\n    //test 1) does the tree have any drag patterns?\n    //test 2) is a draggable already created for the clicked element?\n    //test 3) does clicked element or its ancestors match any draggable patterns?\n    //test 4) is a draggable already created for the clicked element or matching ancestor?\n    //5) if it's complex markup then we go up to parent which matching pattern\n    var thisElem = event.element ? event.element() : event.target;\n    if (this.dragPattern && !this.draggables[thisElem.identify()]) {\n        var matchingElem = matchAny(thisElem, [this.dragPattern], true);\n        if (matchingElem) {\n            //matchingElem = matchingElem.up(this.dragPattern);\n            if (!matchingElem || this.draggables[matchingElem.identify()]) {\n                return;\n            }\n            var item = this.getItemByEvent(event);\n            this.draggables[matchingElem.identify()] = new Draggable(matchingElem, {\n                superghosting: true,\n                mouseOffset: true,\n                onStart: this.setDragStartState.bind(this, item),\n                onEnd: this.setDragEndState.bind(this, item)\n            });\n        }\n    }\n});\ndynamicList.List.addMethod('setDragStartState', function (item, draggable, event) {\n    var templateClassName = item._getElement().templateClassName;\n    if (templateClassName) {\n        jQuery(draggable.element).addClass(templateClassName);\n    }\n    jQuery(draggable.element).addClass(layoutModule.DRAGGING_CLASS).addClass(this.getId());\n    draggable.element.items = this.getSelectedItems().slice(0);\n    this._buildDnDOverlay(draggable.element);\n    draggable.options.scroll = this._getElement();\n    draggable.options.scrollSensitivity = layoutModule.SCROLL_SENSITIVITY;\n    Draggables.dragging = this.regionID || true;\n});\ndynamicList.List.addMethod('setDragEndState', function (draggable, event, item) {\n    Draggables.dragging = null;\n});    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// List event handling\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// List event handling\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\ndynamicList.List.addMethod('_mouseupHandler', function (event) {\n    var element = event.target;\n    var item = matchMeOrUp(element, layoutModule.BUTTON_PATTERN) && this.getItemByEvent(event);\n    if (!item || item._isElementInExcluded(event)) {\n        return;\n    }\n    event.listEvent = true;\n    if (item._respondOnItemEvents && !event.isInvoked) {\n        this.fire(this.Event.ITEM_MOUSEUP, {\n            targetEvent: event,\n            item: item\n        });\n        if (!item._isExcludedFromSelectionTriggers(event)) {\n            var isCtrlHeldValue = isMetaHeld(event), isShiftHeldValue = isShiftHeld(event), isContextMenuValue = isRightClick(event);    // NOTE: See also comments and logic for drag-and-drop, as these\n            // functions overlap\n            // NOTE: See also comments and logic for drag-and-drop, as these\n            // functions overlap\n            var isSelect = !this._selectOnMousedown && !TouchController.element_scrolled && (!isSupportsTouch() || event.changedTouches.length >= 1);\n            isSelect && item.getList().selectItem(item, isCtrlHeldValue, isShiftHeldValue, isContextMenuValue);    // Fix for Shift key multiple selection if we change selection inside selected range.\n            // We need to remember the position of current item as last selected even if selectItem method\n            // did not do it. This will help to correctly determine select range start on next selectItem call.\n            // Fix for Shift key multiple selection if we change selection inside selected range.\n            // We need to remember the position of current item as last selected even if selectItem method\n            // did not do it. This will help to correctly determine select range start on next selectItem call.\n            if (!isSelect && this._multiSelect && this._selectedItems.length > 1 && this.isItemSelected(item) && !(isCtrlHeldValue || isShiftHeldValue || isContextMenuValue)) {\n                this._lastSelectedItem = item;\n            }\n            item.getList().deselectOthers(item, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n            if (this.twofingers) {\n                this.twofingers = false;\n                var li = jQuery(element).parents('li:first');\n                li.hasClass('selected') && document.fire(layoutModule.ELEMENT_CONTEXTMENU, {\n                    targetEvent: event,\n                    node: element\n                });\n            }\n        }\n        this.createDraggableIfNeeded(event);\n    }\n    event.isInvoked = true;\n});\ndynamicList.List.addMethod('_mousedownHandler', function (event) {\n    event = event.type == 'dataavailable' ? event.memo.targetEvent : event;\n    var element = event.target;\n    var item = matchMeOrUp(element, layoutModule.BUTTON_PATTERN + ',' + layoutModule.LIST_ITEM_WRAP_PATTERN) && this.getItemByEvent(event);\n    if (!item || item._isElementInExcluded(event)) {\n        return;\n    }\n    event.listEvent = true;\n    let iconEvent = this._itemPreventEvent(item,event);\n    if (event.touches && event.touches.length == 2) {\n        this.twofingers = true;    //var li = jQuery(element).parents('li:first');\n        //li.hasClass('selected') && document.fire(layoutModule.ELEMENT_CONTEXTMENU, {targetEvent: event, node: element});\n        //return;\n    } else {\n        this.twofingers = false;\n    }\n    if (iconEvent){\n        // Do not focus items that have only had their expanders clicked--\n        // this will result in a fixFocus call to the current selection\n        // (clicking on the expander will not change the selection), which\n        // in turn will fix focus on the current selection, which may move\n        // the newly-expanded item out of view.  (Clicking on the actual\n        // item selects it prior to focusing, which avoids the problem.)\n        event.stopPropagation();\n        event.preventDefault();\n    }\n    else {\n        if (item._respondOnItemEvents && !event.isInvoked) {\n            this.fire(this.Event.ITEM_MOUSEDOWN, {\n                targetEvent: event,\n                item: item\n            });\n            if (!item._isExcludedFromSelectionTriggers(event)) {\n                // FIXME: See if this can be moved into setCursor\n                if (this._selectOnMousedown) {\n                    // && (!isSupportsTouch() || event.touches.length == 1);\n                    item.getList().selectItem(item, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n                }\n                if (this._setCursorOnMousedown && !isMetaHeld(event)) {\n                    item.getList().setCursor(item);\n                }\n            }\n            item.focus();\n        }\n    }\n    event.isInvoked = true;\n});\ndynamicList.List.addMethod('_mouseoverHandler', function (event) {\n    matchMeOrUp(event.target, layoutModule.BUTTON_PATTERN) && this.createDraggableIfNeeded(event);\n});\ndynamicList.List.addMethod('_clickHandler', function (event) {\n    var item = matchMeOrUp(event.target, layoutModule.BUTTON_PATTERN) && this.getItemByEvent(event);\n    if (!item || item._isElementInExcluded(event)) {\n        return;\n    }\n    if (!event.isInvoked) {\n        if (item._respondOnItemEvents) {\n            this.fire(this.Event.ITEM_CLICK, {\n                targetEvent: event,\n                item: item\n            });\n        }\n        if (!item.isComposite)\n            return;\n        var element = item._getElement(), source = event.target;\n        if (item._isCloseHandler(source) && baseList.isItemOpen(element)) {\n            baseList.closeItem(element);\n            this.fire(this.Event.ITEM_CLOSED, {\n                targetEvent: event,\n                item: item\n            });\n        } else if (item._isOpenHandler(source) && !baseList.isItemOpen(element)) {\n            baseList.openItem(element);\n            this.fire(this.Event.ITEM_OPEN, {\n                targetEvent: event,\n                item: item\n            });\n        }\n    }\n    event.isInvoked = true;\n});\ndynamicList.List.addMethod('_dblclickHandler', function (event) {\n    var item = matchMeOrUp(event.target, layoutModule.BUTTON_PATTERN) && this.getItemByEvent(event);\n    if (!item || item._isElementInExcluded(event)) {\n        return;\n    }\n    if (item._respondOnItemEvents && !event.isInvoked) {\n        this.fire(this.Event.ITEM_DBLCLICK, {\n            targetEvent: event,\n            item: item\n        });\n    }\n    event.isInvoked = true;\n});\ndynamicList.List.addMethod('_initEvents', function () {\n    var container = this._getElement();\n    this.draggables = [];\n    if (isSupportsTouch()) {\n        container.stopObserving('touchstart').observe('touchstart', this._mousedownHandler.bindAsEventListener(this));    //scriptaculous stopped mousedown event but we made it throw this instead\n        //scriptaculous stopped mousedown event but we made it throw this instead\n        container.stopObserving('drag:touchstart').observe('drag:touchstart', this._mousedownHandler.bindAsEventListener(this));\n        container.stopObserving('touchend').observe('touchend', this._mouseupHandler.bindAsEventListener(this));\n    } else {\n        container.stopObserving('mouseup').observe('mouseup', this._mouseupHandler.bindAsEventListener(this));\n        container.stopObserving('mousedown').observe('mousedown', this._mousedownHandler.bindAsEventListener(this));    //scriptaculous stopped mousedown event but we made it throw this instead\n        //scriptaculous stopped mousedown event but we made it throw this instead\n        container.stopObserving('drag:mousedown').observe('drag:mousedown', this._mousedownHandler.bindAsEventListener(this));\n    }\n    if (!isIPad)\n        container.stopObserving('mouseover').observe('mouseover', this._mouseoverHandler.bindAsEventListener(this));\n    container.stopObserving('click').observe('click', this._clickHandler.bindAsEventListener(this));\n    container.stopObserving('dblclick').observe('dblclick', this._dblclickHandler.bindAsEventListener(this));\n    container.stopObserving('key:down').observe('key:down', this.selectNext.bindAsEventListener(this));\n    container.stopObserving('key:up').observe('key:up', this.selectPrevious.bindAsEventListener(this));\n    container.stopObserving('key:right').observe('key:right', this.selectInwards.bindAsEventListener(this));\n    container.stopObserving('key:left').observe('key:left', this.selectOutwards.bindAsEventListener(this));\n    container.stopObserving('key:pagedown').observe('key:pagedown', this.selectPageDown.bindAsEventListener(this));    /*\n    container.stopObserving('key:pageup').observe('key:pageup', this.selectPageUp.bindAsEventListener(this));\n    container.stopObserving('key:home').observe('key:home', this.selectFirst.bindAsEventListener(this));\n    container.stopObserving('key:end').observe('key:end', this.selectLast.bindAsEventListener(this));\n    */\n});\ndynamicList.List.addMethod('_itemPreventEvent',function(item , event){\n    let isComposite = item.isComposite,\n        isFavIcon = item.isIconClicked,\n        isOpenOrCloseHandler = isComposite && (item._isOpenHandler(event.target) || item._isCloseHandler(event.target)),\n        isFavHandler;\n    if ( event.which !== 3 ) {\n        isFavHandler = item._isFavoriteHandler(event.target);\n    }\n\n    const compositeItemSelectable = isComposite && ( isOpenOrCloseHandler||isFavHandler);\n    const listItemSelectable = isFavIcon && isFavHandler;\n\n    return compositeItemSelectable || listItemSelectable ;\n});\n// List element that is rendered from Underscore template string passed as an option\n// List element that is rendered from Underscore template string passed as an option\ndynamicList.UnderscoreTemplatedList = function (id, options) {\n    if (options) {\n        this._template = 'template' in options ? options.template : '';\n    }\n    dynamicList.List.apply(this, arguments);\n};\nvar temporaryFunc = function () {\n};\ntemporaryFunc.prototype = dynamicList.List.prototype;\ndynamicList.UnderscoreTemplatedList.prototype = new temporaryFunc();\ndynamicList.UnderscoreTemplatedList.prototype.constructor = dynamicList.UnderscoreTemplatedList;\ndynamicList.UnderscoreTemplatedList.prototype._getTemplateElement = function (currentElement) {\n    var element = jQuery(_.template(this._template, {}))[0];\n    jQuery(element).attr('id', this.getId());\n    element.templateClassName = element.className;\n    cloneCustomAttributes(currentElement, element);\n    return element;\n};\n\nexport {dynamicList, baseList};"],"sourceRoot":""}