{"version":3,"sources":["webpack://jrs-ui/./src/core/core.events.bis.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.tree.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.treenode.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.designerBase.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.events.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.treesupport.js","webpack://jrs-ui/./src/dynamicTree/dynamicTree.utils.js"],"names":["document","observe","isSupportsTouch","evt","element","memo","targetEvent","event","treeEvent","listEvent","li","matchMeOrUp","layoutModule","match","buttonManager","listItemElement","jQuery","children","isRightClick","node","fire","Event","stop","isGlobalEventsAllowed","el","data","isIE","body","setAttribute","on","hasDisabledAttributeSet","this","join","type","parentNode","id","primaryNavModule","className","indexOf","preventDefault","attr","siblings","removeClass","each","index","addClass","$anchor","closest","find","tooltipModule","clientX","clientY","addEventListener","e","window","calendar","hide","hidden","TouchController","toggleClass","nextId","dynamicTree","trees","nodes","treeNodeEdited","editaborted","activeTreeId","Tree","options","setRootNode","root","bShowRoot","handleNodeOnDblclick","undefined","multiSelectEnabled","showAllNodesOnStartup","treeClassName","dragPattern","dragClasses","dropClasses","selectOnMousedown","regionID","scroll","templateDomId","DEFAULT_TREE_TEMPLATE_ID","allowHyperlinks","escapeHyperlinks","stateObject","sortNodes","sorters","sortByOrder","sortByName","selectedNodes","TREE_NN_ITEMS_SELECTED","_createFromTemplate","refreshStyle","_registerEvents","_registerCustomScroll","getNextId","getActiveTree","getTreeNode","nodeID","getStorageVal","name","JSON","parse","localStorage","getItem","setStorageVal","value","tree","setItem","stringify","console","log","_templateHash","addVar","addMethod","_element","_getElement","insert","after","_getTemplateElement","remove","update","scrollBar","up","identify","rootNode","treeId","templateClassName","HIDE_ROOT_CLASS_NAME","_prevSelectedNodes","clone","concat","i","length","push","splice","len","resortChilds","childs","resortSubtree","states","key","state","TreeNode","State","CLOSED","newstate","obj","node1","node2","k","readStates","stopWaiting","treeContainer","writeStates","OPEN","showNode","render","refreshScroll","delay","setTimeout","refresh","bind","low","high","mid","Math","round","midNode","comparer","resetSelected","fireUnSelectAllEvent","ctrlHeld","shiftHeld","isContextMenuBtn","min","max","parent","isContextMenu","isSelected","isDeselect","isEdit","isDoEndEdit","isDeselectAll","isRangeSelect","isNotNullORUndefined","_lastSelectedNode","isRangeReduce","isSelect","deselect","_deselectAllNodes","edit","doEndEdit","start","end","select","j","nofocus","findAll","n","invoke","nextNode","isOpen","getFirstChild","nextSibling","getNextUncle","currentNode","prevNode","prevSibling","getLastVisibleDescendant","hasChilds","getLastChild","inNode","handleNode","isHiddenRootNode","outNode","order1","orderNumber","order2","n1","toLowerCase","n2","html","getElementById","TREE_WAIT_TEMPLATE_DOM_ID","currentElement","getId","templateId","cloneCustomAttributes","DEFAULT_NAME","param","Types","Folder","FOLDER_TYPE_NAME","isloaded","delayedRendering","haschilds","editable","isWaiting","isDropTarget","cssClassName","getTreeId","getState","child","isParent","lastNode","_getChildrenElement","isArray","sort","a","b","count","getChildCount","container","NODE_ID_PREFIX","titleHolder","childElements","cleanWhitespace","title","childNodes","nodeName","createTextNode","appendChild","getElementsByTagName","_childrenElement","SUB_NODE_ID_SUFFIX","newName","_getTitle","NODE_CLASS_NAME","LEAF_CLASS_NAME","OPEN_CLASS_NAME","CLOSED_CLASS_NAME","LOADING_CLASS_NAME","SELECTED_CLASS_NAME","cssClass","getType","subElement","templH","_getHeaderTemplateElement","tabIndex","treeNode","wrapper","xssUtil","whiteList","tooltip","img","HANDLER_ID_PREFIX","tip","iconTooltip","templF","_getFooterTemplateElement","_createNode","_createNodeChildren","z","fireOpenEvent","beforeNode","Object","isUndefined","before","_renderChildren","removeNodeFromSelected","fireUnSelectEvent","focus","addNodeToSelected","silent","fireSelectEvent","self","isIPad","isNodeSelected","oldName","input","_getInputTemplateElement","onclick","cancelEventBubbling","ondblclick","onmousedown","onmouseup","onkeydown","keyEvt","keyCode","onblur","bindAsEventListener","fireStartEditEvent","editEnded","fireEndEditEvent","_getTitleInputElement","newValue","fireEditEvent","rootNodeElement","nodeElement","ch","clientHeight","cw","clientWidth","cst","scrollTop","csl","scrollLeft","nt","cumulativeOffset","top","nl","offsetLeft","nh","nw","refreshNode","nodeHeaderTemplateDomId","nodeFooterTemplateDomId","nodeInputTemplateDomId","isInSelection","getTreeNodeByElement","readAttribute","listItem","hasClass","_cleanUpListeners","_registerClickEvents","_registerCustomEvents","_registerKeyEvents","_registerMouseEvents","stopObserving","getTreeNodeByEvent","isIcon","isIconEvent","isNode","isNodeEvent","isLeaf","isLeafEvent","JRS","alert","twofingers","touches","_selectOrEditNode","isMetaHeld","isShiftHeld","designerBase","parents","isEmulatedRightClick","clickid","timeStamp","clicktime","changedTouches","_deselectOthers","Draggables","clearTimeout","timeout_id","openNode","EXPANDING_TIME","createDraggableIfNeeded","isIE7","Droppables","accept","onDrop","dragging","elementDropped","_selectNextNode","_selectPreviousNode","_selectInwards","_selectOutwards","newVal","eventName","handler","thisElem","isCreated","draggables","matchingElem","matchAny","Draggable","superghosting","mouseOffset","onStart","setDragStartState","onEnd","setDragEndState","draggable","setStyle","width","height","Template","evaluate","scrollSensitivity","providerId","hideLoader","rootUri","nodeClass","isFunction","rootObjectModifier","modifyRootObject","resetStatesOnShow","inInit","ajaxBufferId","nodeTextId","urlGetNode","_getFlowUrl","urlGetChildren","urlGetMultipleChildren","urlGetMessage","additionalParams","callback","text","getMessage","_initOpenListener","deepClone","getTreeNodeChildren","methodName","__jrsConfigs__","depth","userCallbackFn","errorCallbackFn","forceHtmlEscape","url","_evaluateAdditionalParams","_showTree","params","_","call","toQueryString","prefetchedListStr","encodeURIComponent","wait","uc","ec","showTreeCallback","ajaxTargettedUpdate","fillLocation","errorHandler","rc","httpErrorHandler","apply","arguments","baseErrorHandler","div","rootObj","evalJSON","processNode","resortTree","resetStates","renderTree","fireTreeLoadedEvent","fireServerErrorEvent","metaNode","uri","extra","localRoot","NodeClassFn","unescapeBackslash","label","order","setHasChilds","chNodeObj","chTreeNode","addChild","ni","getTreeNodeChildrenCallback","ajaxAgent","status","getResponseHeader","parentNodeId","ns","resetChilds","tmpSortNodes","fireChildrenLoadedEvent","parentNodes","ids","getTreeMultipleNodesChildrenCallback","postData","parentNodeIds","setMultipleNodesChilden","fireMultipleChildrenLoadedEvent","nodeHolders","noRender","nn","nodeHolder","pn","tempnode","parentUri","disableSorting","prefetch","ds","nr","getTreeNodeChildrenPrefetchedCallback","fireChildredPrefetchedLoadedEvent","uriStr","fnAction","findFirstChild","processNodePath","selectedNode","getSelectedNode","fnForNode","getRootNode","path","split","oldNode","findNodeChildByMetaName","findNodeFirstNodeChildByAlphabeticalOrder","holder","fn","firstchildName","firstchildIndex","tempChildName","tempChildIndex","loopCount","loopIndex","charCodeAt","nodeId","startNode","_findNodeById","keyNode","found","grandchildren","messageId","getMessageCallback","divEl","trim","metaNodes","SuperRoot","Root","isActiveThemeFolder","ACTIVE_THEME_CLASS","orgMode","organizationId","publicFolderUri","isChildrenCallback","updatedRootObj","publicFolder","newCh","isSuperRoot","isPublic","publicNode","scrollElement","touchController","absolute"],"mappings":"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","file":"_chunks/chunk.2389.js","sourcesContent":["/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n///////////////////////////////////////////////////////////////////////////////////\n// Drag with MouseDown\n///////////////////////////////////////////////////////////////////////////////////\nimport jQuery from 'jquery';\nimport {\n    isSupportsTouch,\n    matchMeOrUp,\n    isRightClick,\n    isIE,\n    hasDisabledAttributeSet,\n} from '../util/utils.common';\nimport layoutModule from '../core/core.layout';\nimport TouchController from '../util/touch.controller';\nimport {tooltipModule} from '../components/components.tooltip';\nimport primaryNavModule from '../actionModel/actionModel.primaryNavigation';\nimport buttonManager from './core.buttonManager';\n\ndocument.observe(isSupportsTouch() ? 'drag:touchstart' : 'drag:mousedown', function (evt) {\n    var element = evt.memo.targetEvent.element();\n    if (!isSupportsTouch() || !(event.treeEvent || event.listEvent)) {\n        var li = matchMeOrUp(element, layoutModule.LIST_ITEM_PATTERN);\n        if (li && !element.match(layoutModule.DISCLOSURE_BUTTON_PATTERN)) {\n            buttonManager.down(li, function (listItemElement) {\n                return jQuery(listItemElement).children(layoutModule.LIST_ITEM_WRAP_PATTERN)[0];\n            });\n        }\n        if (element.match(layoutModule.DISCLOSURE_BUTTON_PATTERN)) {\n            buttonManager.down(element);\n        }\n    }\n});    ///////////////////////////////////////////////////////////////////////////////////\n// Mouse Effects\n///////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////\n// Mouse Effects\n///////////////////////////////////////////////////////////////////////////////////\n// Suppress Default Context Menu\n///////////////////////////////////////////////////////////////////////////////////\n//use this to cancel the default event. Weird behavior on mac Gecko browser\n//see link:http://unixpapa.com/js/mouse.html for more info\n///////////////////////////////////////////////////////////////////////////////////\n// Suppress Default Context Menu\n///////////////////////////////////////////////////////////////////////////////////\n//use this to cancel the default event. Weird behavior on mac Gecko browser\n//see link:http://unixpapa.com/js/mouse.html for more info\ndocument.observe('mouseup', function (evt) {\n    if (isRightClick(evt)) {\n        var node = evt.element();\n        document.fire(layoutModule.ELEMENT_CONTEXTMENU, {\n            targetEvent: evt,\n            node: node\n        });\n    }\n});    // Workaround for IE9 native context menu\n// Workaround for IE9 native context menu\ndocument.observe('contextmenu', function (event) {\n    Event.stop(event);\n    return false;\n});\ndocument.observe('dom:loaded', function (event) {\n    var isGlobalEventsAllowed = function (el) {\n        var $el = jQuery(el);\n        return typeof $el.data('globalEvents') === 'undefined';\n    };\n    isIE() && document.body.setAttribute('oncontextmenu', 'return false');\n    jQuery('body').on('mouseover', layoutModule.BUTTON_PATTERN, function (evt) {\n        if (!hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this))\n            buttonManager.over(this);\n    });\n    jQuery('body').on('mouseout', layoutModule.BUTTON_PATTERN, function (evt) {\n        if (isGlobalEventsAllowed(this))\n            buttonManager.out(this);\n    });\n    jQuery('body').on('focus', layoutModule.BUTTON_PATTERN, function (evt) {\n        if (!hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this))\n            buttonManager.over(this);\n    });\n    jQuery('body').on('blur', layoutModule.BUTTON_PATTERN + '.' + layoutModule.HOVERED_CLASS, function (evt) {\n        if (!hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this))\n            buttonManager.out(this);\n    });\n    jQuery('body').on('mousedown mouseup touchstart touchend', [\n        layoutModule.BUTTON_PATTERN,\n        layoutModule.MENU_LIST_PATTERN,\n        layoutModule.DISCLOSURE_BUTTON_PATTERN,\n        layoutModule.META_LINKS_PATTERN\n    ].join(','), function (evt) {\n        if (evt.type == 'mousedown' || evt.type == 'touchstart') {\n            !hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this) && buttonManager.down(this);\n        } else {\n            !hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this) && buttonManager.up(this);\n        }\n        if (evt.type == 'mouseup' || evt.type == 'touchend') {\n            if (this.parentNode.id == layoutModule.MAIN_NAVIGATION_HOME_ITEM_ID)\n                primaryNavModule.navigationOption('home');\n            if (this.parentNode.id == layoutModule.MAIN_NAVIGATION_LIBRARY_ITEM_ID)\n                primaryNavModule.navigationOption('library');\n        }\n    });\n    jQuery('#frame').on('touchend mouseup', '.minimize', function (evt) {\n        if (this.parentNode.className.indexOf('maximized') >= 0) {\n            layoutModule.minimize(this);\n        } else {\n            layoutModule.maximize(this);\n        }\n        evt.preventDefault();\n    });\n    jQuery('#frame').on('touchend mouseup', layoutModule.TABSET_TAB_PATTERN, function (evt) {\n        if (!hasDisabledAttributeSet(this) && isGlobalEventsAllowed(this) && jQuery(this.parentNode).attr('disableCoreEvents') !== 'true') {\n            jQuery(this).siblings().removeClass(layoutModule.SELECTED_CLASS).each(function (index, element) {\n                jQuery(jQuery(this).attr('tabId')).addClass('hidden');\n            });\n            jQuery(this).addClass(layoutModule.SELECTED_CLASS);\n            jQuery(jQuery(this).attr('tabId')).removeClass('hidden');    // Dirty hack to make anchor bigger when attributes tab is selected.\n            // Dirty hack to make anchor bigger when attributes tab is selected.\n            var $anchor = jQuery(this).closest('.tabs').find('.control.tabSet.anchor');\n            jQuery(this).attr('tabId') === '#attributesTab' ? $anchor.addClass('attributesAnchor') : $anchor.removeClass('attributesAnchor');\n        }\n    });\n    jQuery('#' + layoutModule.META_LINK_LOGOUT_ID).on('mousedown touchstart', function (evt) {\n        evt.preventDefault();\n        primaryNavModule.navigationOption('logOut');\n    });    /*\n     * Tooltips\n     */\n    /*\n     * Tooltips\n     */\n    jQuery('body').on('mouseover mouseout click', '[tooltiptext]', function (evt) {\n        (evt.type == 'mouseout' || evt.type == 'click') && tooltipModule.hideJSTooltip(this);\n        evt.type == 'mouseover' && tooltipModule.showJSTooltip(this, [\n            evt.clientX,\n            evt.clientY\n        ]);\n    });    /*\n     * Top navigation menu\n     */\n    /*\n     * Top navigation menu\n     */\n    jQuery('#mainNavigation').on('mouseover', layoutModule.NAVIGATION_MUTTON_PATTERN, function (evt) {\n        primaryNavModule.showNavButtonMenu(evt, this);\n    });\n    if (isSupportsTouch()) {\n        document.body.addEventListener('touchstart', function (e) {\n            window.calendar && window.calendar.hide && !window.calendar.hidden && window.calendar.hide();\n            if (typeof TouchController !== 'undefined')\n                TouchController.element_scrolled = false;\n        }, false);\n        document.body.addEventListener('touchmove', function (e) {\n            //e.preventDefault();\n        }, false);\n    }    /*\n     * Bug fix 28602.\n     */\n    /*\n     * Bug fix 28602.\n     */\n    jQuery('#filePath').on('mouseenter mouseout', function () {\n        jQuery('#fake_upload_button').toggleClass('over');\n    });\n});\n\nexport default buttonManager;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/**\n * Main namespace for all tree related things\n */\nimport layoutModule from '../core/core.layout';\nimport {isNotNullORUndefined, cloneCustomAttributes} from '../util/utils.common';\nimport jQuery from 'jquery'\n\nvar dynamicTree = {\n    /**\n     * tree map, use to find/store trees, ex: trees['myId']\n     * Tree constructor registers the tree automatically in here\n     */\n    trees: {},\n    /**\n     * node index map, helps to find any node by id\n     * TreeNode constructor registers the node automatically in here\n     */\n    nodes: {},\n    /**\n     * Current edited node\n     */\n    treeNodeEdited: null,\n    /**\n     * If true all changes of node title will be ignored\n     */\n    editaborted: false,\n    /**\n     *  The identifier of active tree.\n     */\n    activeTreeId: null,\n    /*\n     * The Tree Object.\n     *\n     * @param id {String} - tree id.\n     * @param options {JSON Object} - Set of configuration options for tree :\n     * <ul>\n     * <li>root {Tree Node} - Root Node</li>\n     * <li>bShowRoot {Boolean} - true if you want to show tree root node, false otherwise</li>\n     * <li>handleNodeOnDblclick {Boolean} - false if you don't want to handle node on dblclick</li>\n     * <li>multiSelectEnabled {Boolean} - true if you want select more then one node at the same time</li>\n     * <li>showAllNodesOnStartup {Boolean} - Shows/Hides subnodes on startup</li>\n     * <li>treeClassName {String} - a css class to override dynamicTree.Tree.DEFAULT_TREE_CLASS_NAME</li>\n     * <li>dragPattern {String} - cssStyle pattern for which dragging is enabled</li>\n     * <li>dropClasses {Array} - array of class names which can be dropped onto a tree node</li>\n     * <li>dragClasses {String} - string with class names which will be used for modifying ghost of the tree node while dragging</li>\n     * <li>selectOnMousedown (Boolean)</li> - should selection occure on mousedown (otherwise its on mouseup)</li>\n     * <li>regionID (String)</li> - where is this tree located (e.g. AVAILABLE_FIELDS)\n     * </ul>\n     */\n    Tree: function (id, options) {\n        this.id = id;\n        if (options) {\n            this.setRootNode(options.root);\n            this.bShowRoot = !!options.bShowRoot;\n            this.handleNodeOnDblclick = options.handleNodeOnDblclick !== undefined ? options.handleNodeOnDblclick : true;\n            this.multiSelectEnabled = !!options.multiSelectEnabled;\n            this.showAllNodesOnStartup = !!options.showAllNodesOnStartup;\n            this.treeClassName = options.treeClassName ? options.treeClassName : '';\n            this.dragPattern = options.dragPattern;\n            this.dragClasses = options.dragClasses;\n            this.dropClasses = options.dropClasses;\n            this.selectOnMousedown = options.selectOnMousedown;\n            this.regionID = options.regionID;\n            this.scroll = options.scroll;\n            this.templateDomId = options.templateDomId ? options.templateDomId : this.DEFAULT_TREE_TEMPLATE_ID;\n            this.allowHyperlinks = !options.escapeHyperlinks;\n        } else {\n            this.templateDomId = this.DEFAULT_TREE_TEMPLATE_ID;\n            this.handleNodeOnDblclick = true;\n        }\n        this.stateObject = {};\n        this.sortNodes = true;\n        this.sorters = [\n            this.sortByOrder,\n            this.sortByName\n        ];\n        this.selectedNodes = [];\n        this.TREE_NN_ITEMS_SELECTED = '#{count} items selected';    // self-indexing\n        // self-indexing\n        dynamicTree.trees[this.id] = this;\n        this._createFromTemplate();\n        this.refreshStyle();\n        this._registerEvents();\n        this._registerCustomScroll();\n    },\n    /**\n     * Global node id counter.\n     */\n    getNextId: function () {\n        var nextId = 1;    // private static var\n        // private static var\n        return function () {\n            return nextId++;\n        };\n    }(),\n    /**\n     * Returns the lasts tree which was active by mouse down event on tree container.\n     */\n    getActiveTree: function () {\n        return dynamicTree.trees[dynamicTree.activeTreeId];\n    },\n    /**\n     * Returns tree node for the specified node identifier.\n     *\n     * @param nodeID the identifier of the node.\n     */\n    getTreeNode: function (nodeID) {\n        return dynamicTree.nodes[nodeID];\n    },\n    /**\n     * Returns the value from the localStorage by the specified name.\n     *\n     * @param name the name.\n     */\n    getStorageVal: function (name) {\n        var tree = JSON.parse(window.localStorage.getItem('dynamicTree')) || {};\n        return tree[name] || null;\n    },\n    /**\n     * Stores the value in the localStorage using specified name.\n     *\n     * @param name the name.\n     * @param value the value.\n     */\n    setStorageVal: function (name, value) {\n        var localStorage = window.localStorage;\n        var tree = JSON.parse(localStorage.getItem('dynamicTree')) || {};\n        tree[name] = value;\n        try {\n            localStorage.setItem('dynamicTree', JSON.stringify(tree));\n        } catch (e) {\n            // TODO: use our logger\n            /*eslint-disable-next-line no-console*/\n            window.console && console.log(e);\n        }\n    },\n    _templateHash: {}\n};    /**\n *  Name(s) of CSS class(es) for the default tree.\n */\n/**\n *  Name(s) of CSS class(es) for the default tree.\n */\ndynamicTree.Tree.addVar('DEFAULT_TREE_TEMPLATE_ID', 'list_responsive_collapsible');    /**\n * The name of the CSS class which is used to hide the root.\n */\n/**\n * The name of the CSS class which is used to hide the root.\n */\ndynamicTree.Tree.addVar('HIDE_ROOT_CLASS_NAME', 'hideRoot');    /**\n * Returns the identifier of the tree.\n */\n/**\n * Returns the identifier of the tree.\n */\ndynamicTree.Tree.addMethod('getId', function () {\n    return this.id;\n});    /**\n * Returns the tree DOM element.\n */\n/**\n * Returns the tree DOM element.\n */\ndynamicTree.Tree.addMethod('_getElement', function () {\n    if (!this._element) {\n        this._element = jQuery('#' + this.id)[0];\n    }\n    return this._element;\n});    /**\n * Returns the tree DOM element.\n */\n/**\n * Returns the tree DOM element.\n */\ndynamicTree.Tree.addMethod('_createFromTemplate', function () {\n    if (this._getElement()) {\n        this._getElement().insert({ after: this._getTemplateElement(this._getElement()) });\n        this._getElement().remove();\n        this._element = null;\n        this._getElement() && this._getElement().update();\n    }    //disableSelectionWithoutCursorStyle(this._getElement());\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerCustomScroll', function () {\n    if (!this.scroll && this._getElement()) {\n        var scrollBar = this._getElement().up(layoutModule.SWIPE_SCROLL_PATTERN);\n        if (scrollBar) {\n            var scroll = layoutModule.scrolls.get(scrollBar.identify());\n            scroll && (this.scroll = scroll);    //            if (this.scroll /*&& this.scroll.tree != this*/) {\n            //                this.scroll.tree = this;\n            //\n            //                var onScrollStart = this.scroll.options.onScrollStart;\n            //\n            //                this.scroll.options.onScrollStart = function(e) {\n            //                    onScrollStart && onScrollStart();\n            //                    this.tree.revertSelection(e);\n            //                }\n            //            }\n        }\n    }    //disableSelectionWithoutCursorStyle(this._getElement());\n});    /**\n *  Sets root node.\n *\n * @param rootNode the root node to be set.\n */\n/**\n *  Sets root node.\n *\n * @param rootNode the root node to be set.\n */\ndynamicTree.Tree.addMethod('setRootNode', function (rootNode) {\n    this.rootNode = rootNode;\n    if (this.rootNode) {\n        this.rootNode.treeId = this.id;\n    }\n});    /**\n * Returns the root node.\n */\n/**\n * Returns the root node.\n */\ndynamicTree.Tree.addMethod('getRootNode', function () {\n    return this.rootNode;\n});    /**\n * Refresh the style of the tree.\n */\n/**\n * Refresh the style of the tree.\n */\ndynamicTree.Tree.addMethod('refreshStyle', function () {\n    var element = this._getElement();\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    this.treeClassName && jQuery(element).addClass(this.treeClassName);\n    if (this.bShowRoot) {\n        jQuery(element).removeClass(this.HIDE_ROOT_CLASS_NAME);\n    } else {\n        jQuery(element).addClass(this.HIDE_ROOT_CLASS_NAME);\n    }\n});    /**\n *  Resets the list of selected nodes.\n */\n/**\n *  Resets the list of selected nodes.\n */\ndynamicTree.Tree.addMethod('resetSelected', function () {\n    this._prevSelectedNodes = this.selectedNodes.clone();\n    this.selectedNodes = [];\n});\ndynamicTree.Tree.addMethod('revertSelection', function (evt) {\n    //console.log(\"Revert\");\n    var nodes = this._prevSelectedNodes.clone();\n    nodes = nodes.concat(this.selectedNodes);\n    this.selectedNodes = this._prevSelectedNodes.clone();\n    for (var i = 0; i < nodes.length; i++) {\n        nodes[i].refreshStyle();\n    }\n});    /**\n * Returns the first selected node from the list of selected nodes. If no nodes were selected then null returned.\n */\n/**\n * Returns the first selected node from the list of selected nodes. If no nodes were selected then null returned.\n */\ndynamicTree.Tree.addMethod('getSelectedNode', function () {\n    return this.selectedNodes.length === 0 ? null : this.selectedNodes[0];\n});    /**\n * Adds the specified node to the list of selected nodes.\n *\n * @param node the node.\n */\n/**\n * Adds the specified node to the list of selected nodes.\n *\n * @param node the node.\n */\ndynamicTree.Tree.addMethod('addNodeToSelected', function (node) {\n    this.selectedNodes.push(node);\n    this._prevSelectedNodes = this.selectedNodes.clone();\n});    /**\n * Removes the specified node from the list of selected nodes.\n *\n * @param the node.\n */\n/**\n * Removes the specified node from the list of selected nodes.\n *\n * @param the node.\n */\ndynamicTree.Tree.addMethod('removeNodeFromSelected', function (node) {\n    for (var i = 0; i < this.selectedNodes.length; i++) {\n        if (this.selectedNodes[i] == node) {\n            this._prevSelectedNodes = this.selectedNodes.clone();\n            this.selectedNodes.splice(i, 1);\n            return;\n        }\n    }\n});    /**\n * Returns <code>true</code> if specified node is selected, <code>false</code> otherwise.\n *\n * @param node the node.\n */\n/**\n * Returns <code>true</code> if specified node is selected, <code>false</code> otherwise.\n *\n * @param node the node.\n */\ndynamicTree.Tree.addMethod('isNodeSelected', function (node) {\n    var len = this.selectedNodes && this.selectedNodes.length;\n    if (len) {\n        for (var i = 0; i < len; i++) {\n            if (this.selectedNodes[i] == node) {\n                return true;\n            }\n        }\n    }\n    return false;\n});    /**\n * Resorts the sub-tree for the specified parent node.\n *\n * @param parentNode the parent node.\n */\n/**\n * Resorts the sub-tree for the specified parent node.\n *\n * @param parentNode the parent node.\n */\ndynamicTree.Tree.addMethod('resortSubtree', function (parentNode) {\n    if (parentNode) {\n        parentNode.resortChilds();\n        for (var i = 0; i < parentNode.childs.length; i++) {\n            this.resortSubtree(parentNode.childs[i]);\n        }\n    }\n});    /**\n * Resorts all the tree.\n */\n/**\n * Resorts all the tree.\n */\ndynamicTree.Tree.addMethod('resortTree', function () {\n    if (this.sortNodes) {\n        this.resortSubtree(this.rootNode);\n    }\n});    /**\n * Reads states from the localStorage.\n */\n/**\n * Reads states from the localStorage.\n */\ndynamicTree.Tree.addMethod('readStates', function () {\n    var states = dynamicTree.getStorageVal('tree' + this.id);\n    if (states) {\n        for (var key in states) {\n            this.stateObject[key] = states[key];\n        }\n    }\n});    /**\n * Returns the state of the specified node.\n *\n * @param nodeID the identifier of the state to be returned.\n */\n/**\n * Returns the state of the specified node.\n *\n * @param nodeID the identifier of the state to be returned.\n */\ndynamicTree.Tree.addMethod('getState', function (nodeID) {\n    var state;\n    var stateObject = this.stateObject;\n    if (stateObject[nodeID]) {\n        state = stateObject[nodeID];\n        if (state === null || state === '') {\n            state = dynamicTree.TreeNode.State.CLOSED;\n        }\n        return state;\n    }\n    return dynamicTree.TreeNode.State.CLOSED;\n});    /**\n *  Writes new state of the specified node to the localStorage.\n *\n * @param nodeID the identifier of the node.\n * @param newstate is a new state.\n */\n/**\n *  Writes new state of the specified node to the localStorage.\n *\n * @param nodeID the identifier of the node.\n * @param newstate is a new state.\n */\ndynamicTree.Tree.addMethod('writeStates', function (nodeID, newstate) {\n    var obj = {};\n    var stateObject = this.stateObject;\n    for (var key in stateObject) {\n        obj[key] = stateObject[key];\n    }\n    stateObject[nodeID] = newstate;\n    if (newstate != null) {\n        obj[nodeID] = newstate;\n    }\n    dynamicTree.setStorageVal('tree' + this.id, obj);\n});    /**\n * Resets states.\n */\n/**\n * Resets states.\n */\ndynamicTree.Tree.addMethod('resetStates', function () {\n    this.stateObject = {};\n    dynamicTree.setStorageVal('tree' + this.id, '');\n});    /*\n * Comparer for sorting.\n * Calls sorters on order they appear in tree.sorters array until sorter returns non-zero value\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Comparer for sorting.\n * Calls sorters on order they appear in tree.sorters array until sorter returns non-zero value\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('comparer', function (node1, node2) {\n    var i, k;\n    if (this.sorters && this.sorters.length) {\n        for (i = 0; i < this.sorters.length; i++) {\n            k = this.sorters[i](node1, node2);\n            if (k !== 0) {\n                return k;\n            }\n        }\n    }\n    return 0;\n});    /**\n * Renders tree into a container.\n */\n/**\n * Renders tree into a container.\n */\ndynamicTree.Tree.addMethod('renderTree', function () {\n    this.readStates();\n    this.stopWaiting();\n    this.refreshStyle();    /* Setting event handlers */\n    /* Setting event handlers */\n    var treeContainer = this._getElement();\n    if (this.rootNode) {\n        this.writeStates(this.rootNode.id, dynamicTree.TreeNode.State.OPEN);\n        this.rootNode.showNode();\n        this.rootNode.render(treeContainer);\n        this.refreshScroll();\n    }    //TODO Removed for now - lack of available event causes issues\n    //var selected = this.getSelectedNode() || (this.bShowRoot ? this.rootNode : this.rootNode.getFirstChild()) ;\n    //selected && selected.select();\n});\ndynamicTree.Tree.addMethod('refreshScroll', function (delay) {\n    if (delay) {\n        setTimeout(function () {\n            this.scroll && this.scroll.refresh();\n        }.bind(this), delay);\n    } else {\n        this.scroll && this.scroll.refresh();\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.Tree.addMethod('binarySearchOfNode', function (nodes, node) {\n    var low = 0;\n    var high = nodes.length - 1;\n    while (low <= high) {\n        var mid = Math.round((low + high) / 2);\n        var midNode = nodes[mid];\n        if (this.comparer(midNode, node) < 0) {\n            low = mid + 1;\n        } else if (this.comparer(midNode, node) > 0) {\n            high = mid - 1;\n        } else {\n            return mid;    // key found\n        }\n    }\n    return -(low + 1);    // key not found.\n});    /**\n * Deselects all the nodes.\n */\n/**\n * Deselects all the nodes.\n */\ndynamicTree.Tree.addMethod('_deselectAllNodes', function (event) {\n    if (this.selectedNodes.length > 0) {\n        var nodes = this.selectedNodes.clone();\n        this.resetSelected();\n        for (var i = 0; i < nodes.length; i++) {\n            nodes[i].refreshStyle();\n        }\n        if (event) {\n            var tree = dynamicTree.trees[this.id];\n            tree.fireUnSelectAllEvent(event);\n        }\n    }\n});\ndynamicTree.Tree.addMethod('_selectOrEditNode', function (evt, node, ctrlHeld, shiftHeld, isContextMenuBtn, options) {\n    var min, max, parent;\n    var isContextMenu = node.isSelected() && isContextMenuBtn;\n    var isDeselect = this.multiSelectEnabled && node.isSelected() && ctrlHeld && !isContextMenu;\n    var isEdit = node.isSelected() && dynamicTree.treeNodeEdited !== node && !this.multiSelectEnabled && !ctrlHeld && !isContextMenu;\n    var isDoEndEdit = dynamicTree.treeNodeEdited != null && (isDeselectAll || isDeselect);\n    var isRangeSelect = this.multiSelectEnabled && !node.isSelected() && shiftHeld && isNotNullORUndefined(this._lastSelectedNode) && this._lastSelectedNode.parent === node.parent;\n    var isRangeReduce = this.multiSelectEnabled && node.isSelected() && shiftHeld && isNotNullORUndefined(this._lastSelectedNode) && this._lastSelectedNode.parent === node.parent;\n    var isDeselectAll = !this.multiSelectEnabled && !node.isSelected() || this.multiSelectEnabled && !ctrlHeld && !node.isSelected();\n    var isSelect = !node.isSelected() || isDeselectAll && this.selectedNodes.length > 1;\n    if (!shiftHeld || !this._lastSelectedNode) {\n        this._lastSelectedNode = node;\n    }\n    if (isDeselect) {\n        node.deselect(evt);\n    }\n    if (isDeselectAll) {\n        this._deselectAllNodes(evt);\n    }\n    if (isEdit) {\n        node.edit(evt);\n        return;\n    }\n    if (isDoEndEdit) {\n        dynamicTree.treeNodeEdited.doEndEdit(evt);\n    }\n    if (isRangeSelect || isRangeReduce) {\n        parent = node.parent;\n        var start = parent.childs.indexOf(this._lastSelectedNode);\n        var end = parent.childs.indexOf(node);\n        min = Math.min(start, end);\n        max = Math.max(start, end);\n    }\n    if (isRangeSelect) {\n        if (min > -1) {\n            for (var i = min; i <= max; i++) {\n                parent.childs[i].select(evt);\n            }\n        } else {\n            parent.childs[max].select(evt);\n        }\n        return;\n    }\n    if (isRangeReduce) {\n        for (var j = 0; j < min; j++) {\n            parent.childs[j].deselect(evt);\n        }\n        for (var k = max + 1; k < parent.childs.length; k++) {\n            parent.childs[k].deselect(evt);\n        }\n        return;\n    }\n    if (isSelect) {\n        node.select(evt, node.nofocus, options);\n    }\n});\ndynamicTree.Tree.addMethod('_deselectOthers', function (evt, node, ctrlHeld, shiftHeld, isContextMenuBtn) {\n    var isDeselectOther = this.multiSelectEnabled && this.selectedNodes.length > 1 && node.isSelected() && !(ctrlHeld || shiftHeld || isContextMenuBtn);\n    isDeselectOther && this.selectedNodes.findAll(function (n) {\n        return n != node;\n    }.bind(this)).invoke('deselect', evt);\n});    /**\n * find the next node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\n/**\n * find the next node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\ndynamicTree.Tree.addMethod('_selectNextNode', function (node, event) {\n    //recurse up the parent chain until we get a parent with a next sibling\n    function getNextUncle(currentNode) {\n        currentNode = currentNode.parent;\n        if (!currentNode) {\n            return null;\n        } else if (currentNode.nextSibling) {\n            return currentNode.nextSibling;\n        }\n        return getNextUncle(currentNode);\n    }\n    var nextNode = node.isOpen() && node.getFirstChild() || node.nextSibling || getNextUncle(node);\n    nextNode && (node.deselect() && nextNode.select(event));\n});    /**\n * find the previous node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\n/**\n * find the previous node in the tree (ignoring hierachy) and select it\n * @param {Object} node - current node\n */\ndynamicTree.Tree.addMethod('_selectPreviousNode', function (node, event) {\n    function getLastVisibleDescendant(currentNode) {\n        return !(currentNode.isOpen() && currentNode.hasChilds()) && currentNode || getLastVisibleDescendant(currentNode.getLastChild());\n    }\n    var prevNode = node.prevSibling && getLastVisibleDescendant(node.prevSibling) || node.parent;\n    prevNode && (node.deselect() && prevNode.select(event));\n});    /**\n * if open go to first child node, otherwise open node\n * @param {Object} node\n */\n/**\n * if open go to first child node, otherwise open node\n * @param {Object} node\n */\ndynamicTree.Tree.addMethod('_selectInwards', function (node, event) {\n    var inNode = node.isOpen() && node.getFirstChild();\n    inNode ? node.deselect() && inNode.select(event) : node.handleNode(event);\n});    /**\n * if closed or leaf go to parent, otherwise close node\n * @param {Object} node\n */\n/**\n * if closed or leaf go to parent, otherwise close node\n * @param {Object} node\n */\ndynamicTree.Tree.addMethod('_selectOutwards', function (node, event) {\n    if (!node.isHiddenRootNode()) {\n        var outNode = node.isOpen() ? null : node.parent;\n        outNode ? node.deselect() && outNode.select(event) : node.handleNode(event);\n    }\n});    /*\n * Sorter by order value assigned to nodes.\n * Order has to be a number. Node that has some order is considered to be\n * LESS than node that does not have any order (order=null)\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Sorter by order value assigned to nodes.\n * Order has to be a number. Node that has some order is considered to be\n * LESS than node that does not have any order (order=null)\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('sortByOrder', function (node1, node2) {\n    var order1 = node1.orderNumber;\n    var order2 = node2.orderNumber;\n    if (order1 == null && order2 == null) {\n        return 0;\n    }\n    if (order1 == null) {\n        return 1;\n    }\n    if (order2 == null) {\n        return -1;\n    }\n    return order1 - order2;\n});    /*\n * Sorter alphabetically by node names\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\n/*\n * Sorter alphabetically by node names\n * @param {Object} node1 first node\n * @param {Object} node2 second node\n * @returns negative number if node1<node2, positive number if node1>node2, 0 otherwise\n */\ndynamicTree.Tree.addMethod('sortByName', function (node1, node2) {\n    var n1 = node1.name.toLowerCase();\n    var n2 = node2.name.toLowerCase();\n    return n1 > n2 ? 1 : n1 < n2 ? -1 : 0;\n});    /**\n * DOM identifier of the tree wait template.\n */\n/**\n * DOM identifier of the tree wait template.\n */\ndynamicTree.Tree.addVar('TREE_WAIT_TEMPLATE_DOM_ID', 'list_responsive_collapsible:loading');    /**\n * Makes visual effect of wait for tree loading.\n */\n/**\n * Makes visual effect of wait for tree loading.\n */\ndynamicTree.Tree.addMethod('wait', function () {\n    jQuery('#' + this.id).html(document.getElementById(this.TREE_WAIT_TEMPLATE_DOM_ID).clone(true))[0];\n});    /**\n * Removes visual effect of wait for tree loading.\n */\n/**\n * Removes visual effect of wait for tree loading.\n */\ndynamicTree.Tree.addMethod('stopWaiting', function () {\n    jQuery('#' + this.id).html('')[0];\n});\ndynamicTree.Tree.addMethod('_getTemplateElement', function (currentElement) {\n    var id = this.templateDomId;    /**\n      * @see comment in _getHeaderTemplateElement in dynamicTree.treenode.js for an explanation of the commented below\n      */\n    //    if (!dynamicTree._templateHash[id]) {\n    //        dynamicTree._templateHash[id] = $(id);\n    //    }\n    //    var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n      * @see comment in _getHeaderTemplateElement in dynamicTree.treenode.js for an explanation of the commented below\n      */\n    //    if (!dynamicTree._templateHash[id]) {\n    //        dynamicTree._templateHash[id] = $(id);\n    //    }\n    //    var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    jQuery(clone).attr('id', this.getId());\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    cloneCustomAttributes(currentElement, clone);\n    return clone;\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/*\n * The TreeNode Object\n *\n * @param options {JSON Object} - Set of configuration options for tree node :\n * <ul>\n * <li>name {String} - The title of this node</li>\n * <li>param {JSON Object} - A parameter, this can be pretty much anything. (eg. an array with information).</li>\n * <li>orderNumber {String} - If one is given the nodes will be sorted by this (else they`ll be sorted alphabetically (If sorting is on).</li>\n * </ul>\n */\n\nimport dynamicTree from './dynamicTree.tree';\nimport {isArray, isIPad, cancelEventBubbling} from '../util/utils.common';\nimport layoutModule from '../core/core.layout';\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\n\ndynamicTree.TreeNode = function (options) {\n    this.id = dynamicTree.getNextId();\n    this.treeId = null;    // tree sets it\n    // tree sets it\n    this.name = options.name != null ? options.name : this.DEFAULT_NAME;\n    this.param = options.param != null ? options.param : {};\n    this.orderNumber = options.orderNumber != null ? options.orderNumber : null;\n    this.childs = [];\n    this.parent = null;    // default types\n    // used to separate folders from leaves\n    // default types\n    // used to separate folders from leaves\n    this.Types = { Folder: new dynamicTree.TreeNode.Type(this.FOLDER_TYPE_NAME) };\n    this.isloaded = false;\n    this.delayedRendering = true;\n    this.haschilds = false;\n    this.editable = false;\n    this.isWaiting = false;\n    this.hidden = false;\n    this.isDropTarget = false;    // self-indexing\n    // self-indexing\n    dynamicTree.nodes[this.id] = this;\n};    /**\n *\n * @param name\n * @param cssClassName\n * @param templateDomId\n */\n/**\n *\n * @param name\n * @param cssClassName\n * @param templateDomId\n */\ndynamicTree.TreeNode.Type = function (name, options) {\n    this.name = name;\n    if (options) {\n        this.cssClassName = options.cssClassName;\n        this.templateDomId = options.templateDomId;\n    }\n};    /**\n *\n */\n/**\n *\n */\ndynamicTree.TreeNode.State = {\n    OPEN: 'open',\n    CLOSED: 'closed'\n};\ndynamicTree.TreeNode.addVar('FOLDER_TYPE_NAME', 'com.jaspersoft.jasperserver.api.metadata.common.domain.Folder');\ndynamicTree.TreeNode.addVar('DEFAULT_NAME', 'unset name');\ndynamicTree.TreeNode.addVar('NODE_ID_PREFIX', 'node');\ndynamicTree.TreeNode.addVar('SUB_NODE_ID_SUFFIX', 'sub');\ndynamicTree.TreeNode.addVar('HANDLER_ID_PREFIX', 'handler');\ndynamicTree.TreeNode.addVar('NODE_CLASS_NAME', 'node').addVar('LEAF_CLASS_NAME', 'leaf').addVar('OPEN_CLASS_NAME', 'open').addVar('CLOSED_CLASS_NAME', 'closed').addVar('SELECTED_CLASS_NAME', 'selected').addVar('LOADING_CLASS_NAME', 'loading').addVar('ROOTS_CLASS_NAME', 'roots');    //\n// Templates for tree UI\n//\n//\n// Templates for tree UI\n//\ndynamicTree.TreeNode.addVar('nodeHeaderTemplateDomId', 'list_responsive_collapsible:leaf');\ndynamicTree.TreeNode.addVar('nodeFooterTemplateDomId', 'list_responsive_collapsible');\ndynamicTree.TreeNode.addVar('nodeInputTemplateDomId', 'list_responsive_collapsible:input');    //selectable - defaults to false\n//selectable - defaults to false\ndynamicTree.TreeNode.addVar('isSelectable', false);    /**\n * Gets ID of the tree to which this node belongs.\n *\n * @return {String}\n */\n/**\n * Gets ID of the tree to which this node belongs.\n *\n * @return {String}\n */\ndynamicTree.TreeNode.addMethod('getTreeId', function () {\n    return this.treeId || this.parent && this.parent.getTreeId();\n});    /**\n * Gets state of the node, that is saved in cookies.\n * All possible values of the state are defined in {@see dynamicTree.TreeNode.State}.\n *\n * @return {String} -\n */\n/**\n * Gets state of the node, that is saved in cookies.\n * All possible values of the state are defined in {@see dynamicTree.TreeNode.State}.\n *\n * @return {String} -\n */\ndynamicTree.TreeNode.addMethod('getState', function () {\n    return dynamicTree.trees[this.getTreeId()].getState(this.id);\n});    /**\n * Use this method to distinguish node from leaf. Override it if you have changed supported Types by this node.\n */\n/**\n * Use this method to distinguish node from leaf. Override it if you have changed supported Types by this node.\n */\ndynamicTree.TreeNode.addMethod('isParent', function () {\n    return this.param.type == this.Types.Folder.name;\n});    /**\n * Adds child to the node. New child will be shown if disabled delayed rendering.\n *\n * @param childNode {dynamicTree.TreeNode} - the node which should be added as child\n */\n/**\n * Adds child to the node. New child will be shown if disabled delayed rendering.\n *\n * @param childNode {dynamicTree.TreeNode} - the node which should be added as child\n */\ndynamicTree.TreeNode.addMethod('addChild', function (child) {\n    if (!this.isParent()) {\n        return;\n    }\n    var lastNode = this.childs[this.childs.length - 1];\n    if (lastNode) {\n        lastNode.nextSibling = child;\n        child.prevSibling = lastNode;\n    }\n    this.childs.push(child);\n    child.parent = this;\n    this.resortChilds();\n    if (this.delayedRendering) {\n        return;\n    }\n    child.showNode();\n    child.render(this._getChildrenElement(), child.nextSibling);\n});    /**\n * Removes the node from the children of this node\n *\n * @param childNode {dynamicTree.TreeNode}\n */\n/**\n * Removes the node from the children of this node\n *\n * @param childNode {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('removeChild', function (child) {\n    for (var i = 0; i < this.childs.length; i++) {\n        if (this.childs[i] == child) {\n            this.childs.splice(i, 1);\n            break;\n        }\n    }\n    child.deselect();\n    if (this.delayedRendering) {\n        return;\n    }\n    var element = child._getElement();\n    if (element) {\n        element.remove();\n    }\n});    /**\n * Resort all children of this node and updates prevSibling and nextSibling\n */\n/**\n * Resort all children of this node and updates prevSibling and nextSibling\n */\ndynamicTree.TreeNode.addMethod('resortChilds', function () {\n    var treeId = this.getTreeId();\n    var tree = dynamicTree.trees[treeId];\n    if (tree && tree.sortNodes && isArray(this.childs)) {\n        this.childs.sort(function (a, b) {\n            return tree.comparer(a, b);\n        });\n        var count = this.childs.length;\n        while (count--) {\n            var node = this.childs[count];\n            node.prevSibling = this.childs[count - 1];\n            node.nextSibling = this.childs[count + 1];\n        }\n    }\n});    /**\n * Removes all children of this node\n */\n/**\n * Removes all children of this node\n */\ndynamicTree.TreeNode.addMethod('resetChilds', function () {\n    this.childs = [];\n});    /**\n * Set to true if node has children.\n *\n * @param {Boolean}\n */\n/**\n * Set to true if node has children.\n *\n * @param {Boolean}\n */\ndynamicTree.TreeNode.addMethod('setHasChilds', function (hasChilds) {\n    this.haschilds = hasChilds;\n});    /**\n * Returns true if node has children.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if node has children.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('hasChilds', function () {\n    if (this.haschilds) {\n        return true;\n    }\n    return this.getChildCount() > 0;\n});    /**\n * Gets count of children of the node.\n *\n * @return {Number}\n */\n/**\n * Gets count of children of the node.\n *\n * @return {Number}\n */\ndynamicTree.TreeNode.addMethod('getChildCount', function () {\n    return this.childs.length;\n});    /**\n * Gets first child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\n/**\n * Gets first child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('getFirstChild', function () {\n    if (this.hasChilds()) {\n        return this.childs[0];\n    }\n    return null;\n});    /**\n * Gets last child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\n/**\n * Gets last child of the node.\n *\n * @return {dynamicTree.TreeNode}\n */\ndynamicTree.TreeNode.addMethod('getLastChild', function () {\n    if (this.hasChilds()) {\n        return this.childs[this.childs.length - 1];\n    }\n    return null;\n});\ndynamicTree.TreeNode.addMethod('_getElement', function (container) {\n    if (!this._element) {\n        this._element = jQuery('#' + this.NODE_ID_PREFIX + this.id)[0];\n    }\n    return this._element;\n});\ndynamicTree.TreeNode.addMethod('_getTitle', function () {\n    var titleHolder = this._getElement().childElements()[0];\n    titleHolder.cleanWhitespace();\n    var title = titleHolder.childNodes[titleHolder.childNodes.length - 1];\n    if (title.nodeName !== '#text') {\n        title = document.createTextNode('');\n        titleHolder.appendChild(title);\n    }\n    return title;\n});\ndynamicTree.TreeNode.addMethod('_getTitleInputElement', function () {\n    return jQuery(this._getElement().getElementsByTagName('input')[0])[0];\n});\ndynamicTree.TreeNode.addMethod('_getChildrenElement', function () {\n    if (!this._childrenElement) {\n        this._childrenElement = jQuery('#' + this.NODE_ID_PREFIX + this.id + this.SUB_NODE_ID_SUFFIX)[0];\n    }\n    return this._childrenElement;\n});    /**\n * Returns true if the node is open.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if the node is open.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isOpen', function () {\n    return this.getState() === dynamicTree.TreeNode.State.OPEN;\n});    /**\n * Change display name of the node.\n *\n * @param newName {String}\n */\n/**\n * Change display name of the node.\n *\n * @param newName {String}\n */\ndynamicTree.TreeNode.addMethod('changeName', function (newName) {\n    this.name = newName;\n    this._getTitle().data = this.name;\n});    /**\n * Gets the type of the node. All possible value ara defined in Types.\n *\n * @return {dynamicTree.TreeNode.Type}\n */\n/**\n * Gets the type of the node. All possible value ara defined in Types.\n *\n * @return {dynamicTree.TreeNode.Type}\n */\ndynamicTree.TreeNode.addMethod('getType', function () {\n    for (var type in this.Types) {\n        if (this.param.type === this.Types[type].name) {\n            return this.Types[type];\n        }\n    }\n    return undefined;\n});    /**\n * Updates CSS classes of markup of the node .\n */\n/**\n * Updates CSS classes of markup of the node .\n */\ndynamicTree.TreeNode.addMethod('refreshStyle', function (element) {\n    element = jQuery(element)[0] || this._getElement();\n    if (!element) {\n        return;\n    }\n    if (element.templateClassName) {\n        element.className = element.templateClassName;\n    }\n    if (this.isParent()) {\n        jQuery(element).addClass(this.NODE_CLASS_NAME).removeClass(this.LEAF_CLASS_NAME);\n        if (!this.isWaiting) {\n            if (this.isOpen()) {\n                jQuery(element).addClass(this.OPEN_CLASS_NAME).removeClass(this.CLOSED_CLASS_NAME);\n            } else {\n                jQuery(element).addClass(this.CLOSED_CLASS_NAME).removeClass(this.OPEN_CLASS_NAME);\n            }\n        }\n    } else {\n        jQuery(element).addClass(this.LEAF_CLASS_NAME).removeClass(this.NODE_CLASS_NAME);\n    }\n    if (this.isWaiting) {\n        jQuery(element).addClass(this.LOADING_CLASS_NAME);\n    } else {\n        jQuery(element).removeClass(this.LOADING_CLASS_NAME);\n    }\n    if (this.isSelected()) {\n        jQuery(element).addClass(this.SELECTED_CLASS_NAME);\n    } else {\n        jQuery(element).removeClass(this.SELECTED_CLASS_NAME);\n    }\n    if (this.hidden) {\n        jQuery(element).addClass(layoutModule.HIDDEN_CLASS);\n    } else {\n        jQuery(element).removeClass(layoutModule.HIDDEN_CLASS);\n    }\n    if (this.param.cssClass) {\n        jQuery(element).addClass(this.param.cssClass);\n    }\n    var type = this.getType();\n    if (type && type.cssClassName) {\n        jQuery(element).addClass(type.cssClassName);\n    }\n    var subElement = jQuery(element).children();\n    this.isDropTarget && subElement && jQuery(subElement).addClass(layoutModule.DROP_TARGET_CLASS);\n    !this.isDropTarget && subElement && jQuery(subElement).removeClass(layoutModule.DROP_TARGET_CLASS);\n});\ndynamicTree.TreeNode.addMethod('_createNode', function () {\n    var id = this.id;\n    var tree = dynamicTree.trees[this.getTreeId()];\n    var templH = this._getHeaderTemplateElement();\n    templH.id = this.NODE_ID_PREFIX + id;\n    templH.tabIndex = -1;\n    this.refreshStyle(templH);\n    this.treeId = tree.id;    // DOM element link on this tree node\n    // DOM element link on this tree node\n    templH.treeNode = this;\n    var wrapper = templH.childElements()[0];\n\n    if (tree.allowHyperlinks){\n        wrapper.insert(xssUtil.softHtmlEscape(this.name, {\n            whiteList: ['a']\n        }));\n    } else {\n        wrapper.insert(xssUtil.hardEscape(this.name));\n    }\n\n    if (this.tooltip != null && this.tooltip.length > 0) {\n        wrapper.title = this.tooltip;\n    }\n    wrapper.childElements().each(function (img, index) {\n        if (index === 0) {\n            img.id = this.HANDLER_ID_PREFIX + id;\n        }\n        var tip = this.iconTooltip;\n        if (tip) {\n            img.title = isArray(tip) ? tip[index] : tip;\n        }    //    img.onselectstart = function() { return false; }\n    }.bind(this));\n    this._element = templH;\n});\ndynamicTree.TreeNode.addMethod('_createNodeChildren', function () {\n    var templF = this._getFooterTemplateElement();\n    templF.id = this.NODE_ID_PREFIX + this.id + this.SUB_NODE_ID_SUFFIX;\n    this._childrenElement = templF;\n});    /**\n * Shows the given node, and subnodes.\n */\n/**\n * Shows the given node, and subnodes.\n */\ndynamicTree.TreeNode.addMethod('showNode', function (container) {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    this._createNode();\n    if (this.isParent()) {\n        var showChildren = this.isOpen() || tree.showAllNodesOnStartup;\n        if (showChildren) {\n            this._createNodeChildren();\n            for (var z = 0; z < this.getChildCount(); z++) {\n                this.childs[z].showNode(this._getChildrenElement());\n            }\n            this.delayedRendering = false;\n            tree.fireOpenEvent(this);\n        }\n    }\n    this.render(container);\n});    /**\n * Adds the node template to the DOM.\n */\n/**\n * Adds the node template to the DOM.\n */\ndynamicTree.TreeNode.addMethod('render', function (container, beforeNode) {\n    if (Object.isUndefined(container)) {\n        return;\n    }\n    var element = jQuery(container)[0];\n    if (element) {\n        if (this._getChildrenElement()) {\n            this._getElement().insert(this._getChildrenElement());\n        }\n        if (beforeNode) {\n            element.insert(this._getElement(), { before: beforeNode._getElement() });\n        } else {\n            element.insert(this._getElement());\n        }\n    }\n});\ndynamicTree.TreeNode.addMethod('_renderChildren', function () {\n    var element = this._getElement();\n    if (element && this._getChildrenElement()) {\n        element.insert(this._getChildrenElement());\n    }\n});    /**\n *\n */\n/**\n *\n */\ndynamicTree.TreeNode.addMethod('refreshNode', function () {\n    this.refreshStyle();\n    if (this.isParent() && this.isOpen() && this.isloaded) {\n        if (this.delayedRendering) {\n            this._createNodeChildren();\n            this._renderChildren();\n        } else {\n            this._getChildrenElement().update('');\n        }\n        for (var z = 0; z < this.getChildCount(); z++) {\n            this.childs[z].showNode(this._getChildrenElement());\n        }\n        this.delayedRendering = false;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    tree.refreshScroll();\n});    /**\n * Shows wait icon on the node.\n */\n/**\n * Shows wait icon on the node.\n */\ndynamicTree.TreeNode.addMethod('wait', function () {\n    this.isWaiting = true;\n    this.refreshStyle();\n});    /**\n * Hides wait icon on the node.\n */\n/**\n * Hides wait icon on the node.\n */\ndynamicTree.TreeNode.addMethod('stopWaiting', function () {\n    this.isWaiting = false;\n    this.refreshStyle();\n});    /**\n * Am I a root node and are we hiding root nodes\n *\n * @return {Boolean}\n */\n/**\n * Am I a root node and are we hiding root nodes\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isHiddenRootNode', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    return tree.rootNode == this && !tree.bShowRoot;\n});    /**\n * Deselect this node in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Deselect this node in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('deselect', function (event) {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (tree && this.isSelected()) {\n        tree.removeNodeFromSelected(this);\n        this.refreshStyle();\n        if (event) {\n            tree.fireUnSelectEvent(this, event);\n        }\n        return true;\n    } else {\n        return false;\n    }\n});    /**\n * Select this node in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Select this node in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('select', function (event, focus, options) {\n    options = options || {};\n    !focus && this.focus();    // Commented out to fix bug http://bugzilla.jaspersoft.com/show_bug.cgi?id=19047\n    // Commented out to fix bug http://bugzilla.jaspersoft.com/show_bug.cgi?id=19047\n    if (!this.isSelected()) {\n        var tree = dynamicTree.trees[this.getTreeId()];\n        tree.addNodeToSelected(this);\n        this.refreshStyle();\n        !options.silent && tree.fireSelectEvent(this, event);\n        return true;\n    } else {\n        return false;\n    }\n});    /**\n * focus on this node's element\n */\n/**\n * focus on this node's element\n */\ndynamicTree.TreeNode.addMethod('focus', function () {\n    var self = this;\n    if (!isIPad() && this._getElement()) {\n        setTimeout(function () {\n            self._getElement().focus();\n        }, 100);\n    }\n});    /**\n * Returns true if this node is selected in the tree.\n *\n * @return {Boolean}\n */\n/**\n * Returns true if this node is selected in the tree.\n *\n * @return {Boolean}\n */\ndynamicTree.TreeNode.addMethod('isSelected', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    return tree && tree.isNodeSelected(this);\n});\ndynamicTree.TreeNode.addMethod('_removeTitle', function () {\n    var title = this._getTitle();\n    title.data = '';\n    jQuery('#' + title.parentNode)[0].cleanWhitespace();\n});    /**\n * Begins inline edit of the node.\n *\n */\n/**\n * Begins inline edit of the node.\n *\n */\ndynamicTree.TreeNode.addMethod('edit', function (evt) {\n    if (this.editable) {\n        if (dynamicTree.treeNodeEdited == this) {\n            return;\n        }\n        dynamicTree.treeNodeEdited = this;\n        var oldName = this.name;\n        var titleHolder = jQuery(this._getTitle().parentNode)[0];\n        var input = this._getInputTemplateElement();\n        this._getTitle().data = '';\n        titleHolder.cleanWhitespace();\n        titleHolder.insert(input);\n        input.value = xssUtil.unescape(this.name);\n        input.focus();\n        jQuery(input).find(evt);\n        input.onclick = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.ondblclick = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onmousedown = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onmouseup = function (e) {\n            cancelEventBubbling(e);\n        };\n        input.onkeydown = function (keyEvt) {\n            var e = window.event ? window.event : keyEvt;\n            if (e.keyCode == 13) {\n                input.onblur = null;\n                this.doEndEdit(e);\n            } else if (e.keyCode == 27) {\n                input.onblur = null;\n                input.value = oldName;\n                this.doEndEdit(e);\n            }\n        }.bindAsEventListener(this);\n        input.onblur = function (event) {\n            this.doEndEdit(event);\n        }.bindAsEventListener(this);\n        dynamicTree.trees[this.getTreeId()].fireStartEditEvent(this, input);\n    }\n});    /**\n * Fires end of inline edit of the node.\n */\n/**\n * Fires end of inline edit of the node.\n */\ndynamicTree.TreeNode.addMethod('doEndEdit', function (evt) {\n    this.editEnded();\n    dynamicTree.trees[this.getTreeId()].fireEndEditEvent(this);\n});    /**\n * Ends the edit of the node.\n */\n/**\n * Ends the edit of the node.\n */\ndynamicTree.TreeNode.addMethod('editEnded', function () {\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (dynamicTree.treeNodeEdited != null) {\n        var input = this._getTitleInputElement();\n        var newValue = input.value;\n        if (newValue == dynamicTree.treeNodeEdited.name) {\n            input.remove();\n            this._getTitle().data = dynamicTree.treeNodeEdited.name;\n            dynamicTree.treeNodeEdited = null;\n            return;\n        }\n        tree.fireEditEvent(dynamicTree.treeNodeEdited, newValue);\n        if (!dynamicTree.editaborted) {\n            dynamicTree.treeNodeEdited.name = newValue;\n            input.remove();\n            this._getTitle().data = newValue;\n        }\n        dynamicTree.treeNodeEdited = null;\n    }\n});    /**\n * Scrolls to the position of the node.\n */\n/**\n * Scrolls to the position of the node.\n */\ndynamicTree.TreeNode.addMethod('scroll', function (element) {\n    var rootNodeElement = dynamicTree.trees[this.getTreeId()].rootNode._getElement();\n    var container = element ? jQuery(element)[0] : jQuery(rootNodeElement.parentNode)[0];\n    var nodeElement = this._getElement();\n    if (container) {\n        var ch = container.clientHeight;\n        var cw = container.clientWidth;\n        var cst = container.scrollTop;\n        var csl = container.scrollLeft;\n        var nt = nodeElement.cumulativeOffset().top - container.cumulativeOffset().top;\n        var nl = nodeElement.offsetLeft;\n        var nh = nodeElement.clientHeight;\n        var nw = nodeElement.clientWidth;\n        if (nt > cst + ch) {\n            // node is below\n            container.scrollTop = nt - (ch / 2 - nh / 2);\n        } else if (nt + nh < cst) {\n            // node is above\n            container.scrollTop = nt - (ch / 2 - nh / 2);\n        }\n        if (nl > csl + cw) {\n            // node is out left\n            container.scrollLeft = nl - (cw / 2 - nw / 2);\n        } else if (nl + nw < csl) {\n            // node is out right\n            container.scrollTop = nl - (cw / 2 - nw / 2);\n        }\n    }\n});    /**\n * Opens the node.\n */\n/**\n * Opens the node.\n */\ndynamicTree.TreeNode.addMethod('handleNode', function (event) {\n    if (!this.isParent()) {\n        // No reason to handle a node without childs.\n        return;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (this.isOpen()) {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.CLOSED);\n    } else {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.OPEN);\n        tree.fireOpenEvent(this, event);\n    }\n    this.refreshNode();\n});\ndynamicTree.TreeNode.addMethod('openNode', function (event) {\n    if (!this.isParent()) {\n        // No reason to handle a node without childs.\n        return;\n    }\n    var tree = dynamicTree.trees[this.getTreeId()];\n    if (!this.isOpen()) {\n        tree.writeStates(this.id, dynamicTree.TreeNode.State.OPEN);\n        tree.fireOpenEvent(this, event);\n    }\n    this.refreshNode();\n});\ndynamicTree.TreeNode.addMethod('_getHeaderTemplateElement', function () {\n    var type = this.getType();\n    var id = type && type.templateDomId ? type.templateDomId : this.nodeHeaderTemplateDomId;    /**\n     * The commented out section is actually the preferred way to do this however, IE seems to pick up the wrong template\n     * The scenario is when ever you are in ad hoc and switch to presentation mode and back again the tree is not rendered\n     * simply because the cloned node doesn't have any sub nodes/children. In our current implementation, the LI node contains\n     * a <span> and a <p>. These get left out.\n     *\n     * Note: Switching to the implementation where we simply create the clone from the id instead of using the hash may and is going to have\n     * a performance issue.... (papanii)\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * The commented out section is actually the preferred way to do this however, IE seems to pick up the wrong template\n     * The scenario is when ever you are in ad hoc and switch to presentation mode and back again the tree is not rendered\n     * simply because the cloned node doesn't have any sub nodes/children. In our current implementation, the LI node contains\n     * a <span> and a <p>. These get left out.\n     *\n     * Note: Switching to the implementation where we simply create the clone from the id instead of using the hash may and is going to have\n     * a performance issue.... (papanii)\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    clone.templateClassName = clone.className;\n    return clone;\n});\ndynamicTree.TreeNode.addMethod('_getFooterTemplateElement', function () {\n    var id = this.nodeFooterTemplateDomId;    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    clone.update('');\n    return clone;\n});\ndynamicTree.TreeNode.addMethod('_getInputTemplateElement', function () {\n    var id = this.nodeInputTemplateDomId;    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    /**\n     * @see comment in _getHeaderTemplateElement above\n     */\n    //if (!dynamicTree._templateHash[id]) {\n    //\tdynamicTree._templateHash[id] = $(id);\n    //}\n    //var clone = dynamicTree._templateHash[id].clone(true);\n    var clone = document.getElementById(id).clone(true);\n    clone.templateId = id;\n    return clone;\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\nexport default {\n    isInSelection: function () {}\n}","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\n\n/* global alert*/\nimport {Draggables, Draggable, Droppables} from 'dragdropextra';\nimport {Template} from 'prototype';\nimport dynamicTree from './dynamicTree.treenode';\nimport layoutModule from '../core/core.layout';\nimport designerBase from './dynamicTree.designerBase';\nimport {\n    matchMeOrUp,\n    isSupportsTouch,\n    isIPad,\n    isMetaHeld,\n    isShiftHeld,\n    isRightClick,\n    isIE7,\n    isIE,\n    matchAny\n} from '../util/utils.common';\nimport TouchController from '../util/touch.controller';\nimport {JRS} from \"../namespace/namespace\";\nimport jQuery from 'jquery';\n\ndynamicTree.Tree.\n    addVar('NODE_PATTERN', \".node\").                //node itself\n    addVar('NODE_WRAPPER_PATTERN', \".node > .wrap\").\n    addVar('NODE_ICON_PATTERN', \".node > .wrap .icon\").\n    addVar('NODE_CUSTOM_PATTERNS', []);\n\ndynamicTree.Tree.\n    addVar('LEAF_PATTERN', \".leaf\").                //leaf itself\n    addVar('LEAF_WRAPPER_PATTERN', \".leaf > .wrap\").\n    addVar('LEAF_ICON_PATTERN', \".leaf > .wrap .icon\").\n    addVar('LEAF_CUSTOM_PATTERNS', []);\n\ndynamicTree.Tree.addVar('EXPANDING_TIME', 1000);\n\ndynamicTree.Tree.addVar('draggables', []);\n/**\n *\n */\ndynamicTree.Tree.addMethod('getTreeNodeByEvent', function(event) {\n    var element = Event.element(event); //event.originalTarget || event.srcElement;\n    return this.getTreeNodeByElement(element);\n});\ndynamicTree.Tree.addMethod('getTreeNodeByElement', function(element) {\n    while(element && element.readAttribute && jQuery(element).attr('id') !== this.id) {\n        var node = element.treeNode;\n        if (node && node.getTreeId() === this.getId()) {\n            return node;\n        } else {\n            element = jQuery(element.parentNode)[0];\n        }\n    }\n    return null;\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('isNodeEvent', function(event) {\n    //var element = Event.element(event);//event.originalTarget || event.srcElement;\n\n    //var patterns = [this.NODE_PATTERN, this.NODE_WRAPPER_PATTERN, this.NODE_ICON_PATTERN];\n    //if (isArray(this.NODE_CUSTOM_PATTERNS)) { patterns = patterns.concat(this.NODE_CUSTOM_PATTERNS); }\n\n    var listItem = matchMeOrUp(event.element().parentNode,'LI');\n    return listItem && jQuery(listItem).hasClass(layoutModule.NODE_CLASS);\n});\n\n/**\n *\n */\ndynamicTree.Tree.addMethod('isLeafEvent', function(event) {\n//    var element = Event.element(event);//event.originalTarget || event.srcElement;\n//\n//    var patterns = [this.LEAF_PATTERN, this.LEAF_WRAPPER_PATTERN, this.LEAF_ICON_PATTERN];\n//    if (isArray(this.LEAF_CUSTOM_PATTERNS)) { patterns = patterns.concat(this.LEAF_CUSTOM_PATTERNS); }\n//\n//    return matchAny(element, patterns) != null;\n\n    var listItem = matchMeOrUp(event.element().parentNode,'LI');\n    return listItem && jQuery(listItem).hasClass(layoutModule.LEAF_CLASS);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('isIconEvent', function(event) {\n//    var element = Event.element(event);//event.originalTarget || event.srcElement;\n//\n//    return matchAny(element,[this.NODE_ICON_PATTERN, this.LEAF_ICON_PATTERN], true) != null;\n    return jQuery(event.element()).hasClass(layoutModule.ICON_CLASS);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerEvents', function() {\n    this._cleanUpListeners();\n    this._registerClickEvents();\n    this._registerCustomEvents(); // focus and blur\n    this._registerKeyEvents();\n    this._registerMouseEvents();\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_cleanUpListeners', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.stopObserving('click');\n    treeContainer.stopObserving('dblclick');\n\n    if (isSupportsTouch()) {\n        treeContainer.stopObserving('touchstart');\n        treeContainer.stopObserving('drag:touchstart');\n        treeContainer.stopObserving('touchend');\n    } else {\n        treeContainer.stopObserving('mousedown');\n        treeContainer.stopObserving('drag:mousedown');\n        treeContainer.stopObserving('mouseup');\n    }\n    treeContainer.stopObserving('mouseover');\n    treeContainer.stopObserving('mouseout');\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('_registerClickEvents', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.observe('click', function(event) {\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        var isIcon = this.isIconEvent(event);\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if (isNode) {\n            isIcon && treeContainer.fire('nodeIcon:click', {targetEvent: event, node: node});\n            treeContainer.fire('node:click', {targetEvent: event, node: node});\n        } else if (isLeaf) {\n            isIcon && treeContainer.fire('nodeIcon:click', {targetEvent: event, node: node});\n            treeContainer.fire('leaf:click', {targetEvent: event, node: node});\n        }\n\n        if (!isIPad() && isNode && isIcon) {\n            node.handleNode(event);\n        }\n\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('dblclick', function(event) {\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        var isIcon = this.isIconEvent(event);\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if (isNode) {\n            isIcon && treeContainer.fire('nodeIcon:dblclick', {targetEvent: event, node: node});\n            treeContainer.fire('node:dblclick', {targetEvent: event, node: node})\n        } else if (isLeaf) {\n            isIcon && treeContainer.fire('leafIcon:dblclick', {targetEvent: event, node: node});\n            treeContainer.fire('leaf:dblclick', {targetEvent: event, node: node})\n        }\n\n        if (this.handleNodeOnDblclick && (isNode || isLeaf) && !isIcon) {\n            node.handleNode(event);\n        }\n    }.bindAsEventListener(this));\n\n});\n\ndynamicTree.Tree.addMethod('_registerMouseEvents', function() {\n    var treeContainer = this._getElement();\n    treeContainer.observe(isSupportsTouch() ? 'touchstart' : 'mousedown', function(event) {\n    \tvar element = event.element();\n\n        var node = matchMeOrUp(element, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) return;\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event);\n        var isNode = this.isNodeEvent(event);\n        var isLeaf = this.isLeafEvent(event);\n\n        if(isSupportsTouch()){\n        \tif(!JRS.vars.ajax_in_progress){\n\t            this.twofingers = false;\n\t            if(event.touches.length == 2) {\n\t            \tthis.twofingers = true;\n\t            \tthis._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n\t            \tif(node.isSelected() || (designerBase && designerBase.isInSelection(node))){\n\t\t            \tvar li = jQuery(element).parents('li:first');\n                        jQuery(li).hasClass('selected') && document.fire(layoutModule.ELEMENT_CONTEXTMENU, {targetEvent: event, node: element});\n\t\t            \treturn;\n\t            \t}\n\t            }\n        \t} else {\n            \talert('please wait');\n            }\n        }\n\n        if(!isSupportsTouch() || !JRS.vars.ajax_in_progress) {\n            if (this.selectOnMousedown && (!isSupportsTouch() || event.touches.length == 1)) {\n                this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n            }\n\n            if (isNode) {\n                isIcon && treeContainer.fire('nodeIcon:mousedown', {targetEvent: event, node: node});\n                treeContainer.fire('node:mousedown', {targetEvent: event, node: node})\n            } else if (isLeaf) {\n                isIcon && treeContainer.fire('leafIcon:mousedown', {targetEvent: event, node: node});\n                treeContainer.fire('leaf:mousedown', {targetEvent: event, node: node})\n            }\n        }\n\n    }.bindAsEventListener(this));\n\n    //scriptaculous stopped mousedown event but we made it throw this instead\n    treeContainer.observe(isSupportsTouch() ? 'drag:touchstart' :'drag:mousedown', function(e) {\n        var event = e.memo.targetEvent;\n\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event), isNode = this.isNodeEvent(event), isLeaf = this.isLeafEvent(event);\n\n        if (this.selectOnMousedown && !isRightClick(event)) {\n            this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n        }\n\n        //var eventNames = [];\n\n        if (isNode) {\n            isIcon && treeContainer.fire('nodeIcon.drag:mousedown', {targetEvent: event, node: node});\n            treeContainer.fire('node.drag:mousedown', {targetEvent: event, node: node})\n        } else if (isLeaf) {\n            isIcon && treeContainer.fire('leafIcon.drag:mousedown', {targetEvent: event, node: node});\n            treeContainer.fire('leaf.drag:mousedown', {targetEvent: event, node: node})\n        }\n\n    }.bindAsEventListener(this));\n\n    treeContainer.observe(isSupportsTouch() ? 'touchend' : 'mouseup', function(event) {\n        var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n        if (!node) {return;}\n\n        event.treeEvent = true;\n\n        var isIcon = this.isIconEvent(event), isNode = this.isNodeEvent(event), isLeaf = this.isLeafEvent(event);\n\n        if(this.twofingers) {\n            event.isEmulatedRightClick = true;\n        }\n        if(isSupportsTouch() && !this.twofingers) {\n\t    \tif(this.clickid == node.id) {\n\t    \t\tif(!JRS.vars.ajax_in_progress && event.timeStamp - this.clicktime < 700) {\n\t    \t\t\tif (isNode) {\n\t    \t            isIcon && treeContainer.fire('nodeIcon:dblclick', {targetEvent: event, node: node});\n\t    \t            treeContainer.fire('node:dblclick', {targetEvent: event, node: node})\n\t    \t        } else if (isLeaf) {\n\t    \t            isIcon && treeContainer.fire('leafIcon:dblclick', {targetEvent: event, node: node});\n\t    \t            treeContainer.fire('leaf:dblclick', {targetEvent: event, node: node})\n\t    \t        }\n\n\t    \t        if (this.handleNodeOnDblclick && (isNode || isLeaf) && !isIcon) {\n\t    \t            node.handleNode(event);\n\t    \t        }\n\t    \t\t}\n\t    \t}\n\t        this.clicktime = event.timeStamp;\n\t        this.clickid = node.id;\n    \t}\n        if(!isSupportsTouch() || !JRS.vars.ajax_in_progress) {\n        \tif (!this.selectOnMousedown && !TouchController.element_scrolled && (!isSupportsTouch() || event.changedTouches.length == 1)) {\n                this._selectOrEditNode(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n            }\n            this._deselectOthers(event, node, isMetaHeld(event), isShiftHeld(event), isRightClick(event));\n\n            if (isNode) {\n                isIcon && treeContainer.fire('nodeIcon:mouseup', {targetEvent: event, node: node});\n                treeContainer.fire('node:mouseup', {targetEvent: event, node: node})\n            } else if (isLeaf) {\n                isIcon && treeContainer.fire('leafIcon:mouseup', {targetEvent: event, node: node});\n                treeContainer.fire('leaf:mouseup', {targetEvent: event, node: node})\n            }\n\n            if (isSupportsTouch() && isNode && isIcon && !TouchController.element_scrolled) {\n                node.handleNode(event);\n            }\n        }\n\n    }.bindAsEventListener(this));\n\n    if ('createTouch' in document) {\n    \t/*_*\\\n        document.observe('touchmove', function(e) {\n            var event = e.targetEvent ? e.targetEvent : e;\n            var touch =  event.changedTouches[0];\n            var element = $(document.elementFromPoint(touch.pageX, touch.pageY));\n            var node = matchMeOrUp(element, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByElement(element);\n            if (node) {\n                var draggable = this.createDraggableIfNeeded(event, node);\n                draggable && draggable.initDrag(event);\n                if (node != treeContainer.lastHoveredNode) {\n                    treeContainer.lastHoveredNode && treeContainer.fire('tree:mouseout', { targetEvent: event, node: node });\n                    treeContainer.lastHoveredNode = node;\n                    treeContainer.fire('tree:mouseover', {targetEvent: event, node: node});\n                }\n            }\n        }.bindAsEventListener(this));\n        */\n    } else {\n        treeContainer.observe('mouseover', function(event) {\n        \tvar el = event.element();\n            var node = matchMeOrUp(el, layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n\n            if (!node) {return;}\n\n            if (Draggables.dragging){\n                clearTimeout(this.timeout_id);\n                this.timeout_id = setTimeout(function (evt) { node.openNode(evt) }, this.EXPANDING_TIME);\n            }\n\n            this.createDraggableIfNeeded(event, node);\n            !isIE7() && treeContainer.fire('tree:mouseover', {targetEvent: event, node: node});\n        }.bindAsEventListener(this));\n\n        if (!isIE7()) {\n            treeContainer.observe('mouseout', function(event){\n                var node = matchMeOrUp(event.element(), layoutModule.BUTTON_PATTERN) && this.getTreeNodeByEvent(event);\n                if (!node) {return;}\n                treeContainer.fire('tree:mouseout', {\n                    targetEvent: event,\n                    node: node\n                });\n            }.bindAsEventListener(this));\n        }\n    }\n\n    //register default drop zone on tree\n    Droppables.add(treeContainer,{\n        accept: this.dropClasses,\n        onDrop: (function(dragging){\n            this.elementDropped = dragging;\n        }).bind(this)\n    });\n});\n\ndynamicTree.Tree.addMethod('_registerKeyEvents', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.observe('key:down', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectNextNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:up', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectPreviousNode(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:right', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectInwards(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('key:left', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n        if (dynamicTree.treeNodeEdited === node) {\n            return;\n        }\n        node && this._selectOutwards(node, event.memo.targetEvent);\n    }.bindAsEventListener(this));\n});\n\n\ndynamicTree.Tree.addMethod('_registerCustomEvents', function() {\n    var treeContainer = this._getElement();\n\n    treeContainer.observe('mousedown', function(event) {\n        if (!dynamicTree.activeTreeId || dynamicTree.activeTreeId !== this.getId()) {\n            treeContainer.fire('tree:blur', {targetEvent: event, tree: dynamicTree.getActiveTree()});\n\n            dynamicTree.activeTreeId = this.getId();\n            treeContainer.fire('tree:focus', {targetEvent: event, tree: dynamicTree.getActiveTree()});\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('mouseover', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n\n        if (!node) {\n            treeContainer.fire('tree:mouseover', {targetEvent: event, tree: this});\n        }\n    }.bindAsEventListener(this));\n\n    treeContainer.observe('mouseout', function(event) {\n        var node = this.getTreeNodeByEvent(event);\n\n        if (!node) {\n            treeContainer.fire('tree:mouseout', {targetEvent: event, tree: this});\n        }\n    }.bindAsEventListener(this));\n});\n\n\ndynamicTree.Tree.addMethod('fireOpenEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire('node:open', {node: node, targetEvent: event});\n});\n\ndynamicTree.Tree.addMethod('fireSelectEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:selected' : 'leaf:selected', {node: node, targetEvent: event});\n});\n\n\ndynamicTree.Tree.addMethod('fireUnSelectEvent', function(node, event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:unselected' : 'leaf:unselected', {node: node, targetEvent: event});\n});\n\n\ndynamicTree.Tree.addMethod('fireUnSelectAllEvent', function(event) {\n    var treeContainer = this._getElement();\n    treeContainer.fire('items:unselected', {targetEvent: event});\n});\n\ndynamicTree.Tree.addMethod('fireEditEvent', function(node, newVal) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:edit' : 'leaf:edit', {node: node, newValue: newVal})\n});\n\ndynamicTree.Tree.addMethod('fireStartEditEvent', function(node, input) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:startEdit' : 'leaf:startEdit', {node: node, input: input})\n});\n\ndynamicTree.Tree.addMethod('fireEndEditEvent', function(node) {\n    var treeContainer = this._getElement();\n    treeContainer.fire(node.isParent() ? 'node:endEdit' : 'leaf:endEdit', {node: node})\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('observe', function(eventName, handler) {\n    this._getElement().observe(eventName, handler);\n});\n/**\n *\n */\ndynamicTree.Tree.addMethod('stopObserving', function(eventName, handler) {\n    this._getElement().stopObserving(eventName, handler);\n});\ndynamicTree.Tree.addMethod('createDraggableIfNeeded', function(event, node) {\n    /*\n    Make draggable - test in this order - for efficiency\n    test 1) does the tree have any drag patterns?\n    test 2) is a draggable already created for the clicked element?\n    test 3) does clicked element or its ancestors match any draggable patterns?\n    test 4) is a draggable already created for the clicked element or matching ancestor?\n    */\n    var thisElem = event ? event.element() : node._getElement().children(this.dragPattern);\n    var isCreated = this.draggables[thisElem.identify()];\n\n    if (this.dragPattern && !isCreated) {\n        var matchingElem = matchAny(thisElem, [this.dragPattern], true);\n        if (matchingElem && thisElem.className.toLowerCase().indexOf('icon') < 0 && !this.draggables[matchingElem.identify()]) {\n            this.draggables[matchingElem.identify()] =\n            new Draggable(thisElem, {\n                superghosting: true,\n                mouseOffset: true,\n                delay: (isIE() || isSupportsTouch() ? 200 : 0),\n                onStart: this.setDragStartState.bind(this, node),\n                onEnd: this.setDragEndState.bind(this, node)\n            });\n\n            return this.draggables[matchingElem.identify()];\n        }\n    }\n\n    return null;\n});\n\ndynamicTree.Tree.addMethod('setDragStartState', function(node, draggable, event) {\n    var templateClassName = node._getElement().templateClassName;\n    if (templateClassName) { jQuery(draggable.element).addClass(templateClassName); }\n\n    draggable.element.setStyle({width: null, height: null});\n    jQuery(draggable.element).addClass(layoutModule.DRAGGING_CLASS).addClass(this.getId());\n    // Customize draggable style\n    if (this.dragClasses) {\n        jQuery(draggable.element).addClass(this.dragClasses);\n    }\n\n    if (this.selectedNodes.length > 1) {\n        draggable.element.update(new Template(this.TREE_NN_ITEMS_SELECTED).evaluate({count: this.selectedNodes.length}));\n    }\n\n    draggable.element.node = node;\n    draggable.element.nodes = this.selectedNodes;\n\n    draggable.options.scroll = this._getElement();\n    draggable.options.scrollSensitivity = layoutModule.SCROLL_SENSITIVITY;\n    Draggables.dragging = this.regionID || true;\n});\n\ndynamicTree.Tree.addMethod('setDragEndState', function(node, draggable, event) {\n    Draggables.dragging = null;\n});\n\nexport default dynamicTree;\n","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @version: $Id$\n */\n/*\n * TreeSupport is extend Tree to use it with JasperServer.\n * You can extend it to change parameters and/or look and feel\n *\n * @param id {String} - unique ID for the tree on the page\n * @param options {JSON Object} - Set of configuration options for tree :\n * <ul>\n * <li>rootUri {String} - uri for the root of this tree\n *   (usually '/' but could be something like '/area/node' if this tree is supposed\n *   to show only particular branch from the data structure)\n * </li>\n * <li>providerId {String} - Data Provider ID</li>\n * <li>resetStatesOnShow {Boolean} - If false tree state will be restored from cookies</li>\n * <li>nodeClass {@link dynamicTree.TreeNode} - function that will be used to create instances of tree node</li>\n * <li>rootObjectModifier {Function} - modifies root object</li>\n * <li>urlGetNode {String} - server url for 'getNode' method</li>\n * <li>urlGetChildren {String} - server url for 'getChildren' method</li>\n * <li>urlGetMultipleChildren {String} - server url for 'getMultipleChildren' method</li>\n * <li>urlGetMessage {String} - server url for 'getMessage' method</li>\n * </ul>\n *\n * See {@link dynamicTree.Tree} for more options.\n */\n\nimport dynamicTree from './dynamicTree.events';\nimport {deepClone, trim, unescapeBackslash} from \"../util/utils.common\";\nimport __jrsConfigs__ from 'js-sdk/src/jrs.configs';\nimport {ajaxTargettedUpdate} from \"../core/core.ajax\";\nimport {baseErrorHandler} from \"../core/core.ajax.utils\";\nimport xssUtil from 'js-sdk/src/common/util/xssUtil';\nimport jQuery from 'jquery';\nimport _ from 'underscore';\n\ndynamicTree.TreeSupport = function (id, options) {\n    dynamicTree.Tree.call(this, id, options);    // instance variables\n    // instance variables\n    this.providerId = options.providerId;\n    this.hideLoader = options.hideLoader;\n    this.rootUri = Object.isUndefined(options.rootUri) ? '/' : options.rootUri;\n    this.nodeClass = options.nodeClass && Object.isFunction(options.nodeClass) ? options.nodeClass : dynamicTree.TreeNode;\n    if (options.rootObjectModifier) {\n        this.modifyRootObject = options.rootObjectModifier;\n    }\n    this.resetStatesOnShow = Object.isUndefined(options.resetStatesOnShow) || options.resetStatesOnShow;\n    this.inInit = true;    // default ajax related values\n    // default ajax related values\n    this.ajaxBufferId = 'ajaxbuffer';    // id of a DIV elements that receives server response\n    // id of a DIV elements that receives server response\n    this.nodeTextId = 'treeNodeText';    // id of a text element that contains JSONized tree\n    // id of a text element that contains JSONized tree\n    this.urlGetNode = options.urlGetNode ? options.urlGetNode : this._getFlowUrl('getNode');    // server url for 'getNode' method\n    // server url for 'getNode' method\n    this.urlGetChildren = options.urlGetChildren ? options.urlGetChildren : this._getFlowUrl('getChildren');    // server url for 'getChildren' method\n    // server url for 'getChildren' method\n    this.urlGetMultipleChildren = options.urlGetMultipleChildren ? options.urlGetMultipleChildren : this._getFlowUrl('getMultipleChildren');    // server url for 'getMultipleChildren' method\n    // server url for 'getMultipleChildren' method\n    this.urlGetMessage = options.urlGetMessage ? options.urlGetMessage : this._getFlowUrl('getMessage');    // server url for 'getMessage' method\n    // server url for 'getMessage' method\n    this.additionalParams = options.additionalParams ? options.additionalParams : {};    /////////////////////////////////////\n    // dragging related variables\n    // (if you require drag support, please pass treeDragSupport argument in ctor and include drag.js)\n    /////////////////////////////////////\n    /////////////////////////////////////\n    // dragging related variables\n    // (if you require drag support, please pass treeDragSupport argument in ctor and include drag.js)\n    /////////////////////////////////////\n    if (this.TREE_NN_ITEMS_SELECTED == null) {\n        var callback = function (text) {\n            this.TREE_NN_ITEMS_SELECTED = text;\n        }.bind(this);\n        this.getMessage('TREE_NN_ITEMS_SELECTED', callback, null);\n    }\n    this._initOpenListener();\n};\ndynamicTree.TreeSupport.prototype = deepClone(dynamicTree.Tree.prototype);    /////////////////////////////////////\n// methods\n/////////////////////////////////////\n/**\n *  Adding handler of 'node:open' event. If event occurred, handler will loads children of node from server.\n */\n/////////////////////////////////////\n// methods\n/////////////////////////////////////\n/**\n *  Adding handler of 'node:open' event. If event occurred, handler will loads children of node from server.\n */\ndynamicTree.TreeSupport.addMethod('_initOpenListener', function () {\n    this.observe('node:open', function (event) {\n        var node = event.memo.node;\n        if (node && !node.isloaded) {\n            this.getTreeNodeChildren(node);\n        }\n    }.bindAsEventListener(this));\n});    /**\n * Remove all or specified handler from event and adding default handler on 'node:open' event.\n *\n * @param eventName {String} event, from which should be removed handlers.\n * @param handler {Function} handler function, which should be removed\n */\n/**\n * Remove all or specified handler from event and adding default handler on 'node:open' event.\n *\n * @param eventName {String} event, from which should be removed handlers.\n * @param handler {Function} handler function, which should be removed\n */\ndynamicTree.TreeSupport.addMethod('stopObserving', function (eventName, handler) {\n    this._getElement().stopObserving(eventName, handler);\n    if (eventName === 'node:open' && !handler) {\n        this._initOpenListener();\n    }\n});\ndynamicTree.TreeSupport.addMethod('_getFlowUrl', function (methodName) {\n    return __jrsConfigs__.contextPath + '/flow.html?_flowId=treeFlow&method=' + methodName;\n});    /*\n * Loads tree from server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param depth {Number} controls how many levels of children to prefetch at this load\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n * @param forceHtmlEscape {Boolean} asks server to  escape response as html before putting it into tree div\n */\n/*\n * Loads tree from server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param depth {Number} controls how many levels of children to prefetch at this load\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n * @param forceHtmlEscape {Boolean} asks server to  escape response as html before putting it into tree div\n */\ndynamicTree.TreeSupport.addMethod('showTree', function (depth, userCallbackFn, errorCallbackFn, forceHtmlEscape) {\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + this.rootUri + '&depth=' + depth;\n    forceHtmlEscape && (url += '&forceHtmlEscape=true');\n    url += '&' + this._evaluateAdditionalParams();\n    this._showTree(url, userCallbackFn, errorCallbackFn);\n});\ndynamicTree.TreeSupport.addMethod('_evaluateAdditionalParams', function () {\n    var params = this.additionalParams;\n    if (_.isFunction(params)) {\n        params = params.call(null);\n    }\n    if (_.isObject(params)) {\n        return Object.toQueryString(params);\n    }\n    return null;\n});    /*\n * Loads tree from the server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param prefetchedListStr {String} comma separated uris to prefetch (example: '/reports/samples,/adhoc/topics').\n * Controls which tree branches to prefetch at this load.\n * @param userCallbackFn {Function} optional user function object to call after tree gets loaded and rendered\n * @param errorCallbackFn {Function} optional user error handler function to call if error occured\n */\n/*\n * Loads tree from the server and renders it into given container.\n * Generates \"tree:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @type Asynchronous method\n * @param prefetchedListStr {String} comma separated uris to prefetch (example: '/reports/samples,/adhoc/topics').\n * Controls which tree branches to prefetch at this load.\n * @param userCallbackFn {Function} optional user function object to call after tree gets loaded and rendered\n * @param errorCallbackFn {Function} optional user error handler function to call if error occured\n */\ndynamicTree.TreeSupport.addMethod('showTreePrefetchNodes', function (prefetchedListStr, userCallbackFn, errorCallbackFn) {\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + this.rootUri;\n    if (prefetchedListStr) {\n        url += '&prefetch=' + encodeURIComponent(prefetchedListStr);\n    }\n    url += '&' + this._evaluateAdditionalParams();\n    this._showTree(url, userCallbackFn, errorCallbackFn);\n});\ndynamicTree.TreeSupport.addMethod('_showTree', function (url, userCallbackFn, errorCallbackFn) {\n    var self = this;\n    this.inInit = true;\n    this.wait();\n    var callback = function (obj, uc, ec) {\n        return function () {\n            return obj.showTreeCallback(uc, ec);\n        };\n    }(this, userCallbackFn, errorCallbackFn);\n    var httpErrorHandler = function () {\n        var rc = false;\n        if (self.httpErrorHandler) {\n            rc = self.httpErrorHandler.apply(window, arguments);\n        }\n        if (rc === false) {\n            rc = baseErrorHandler.apply(window, arguments);\n        }\n        return rc;\n    };\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: httpErrorHandler,\n        hideLoader: this.hideLoader\n    });\n});\ndynamicTree.TreeSupport.addMethod('showTreeCallback', function (userCallbackFn, errorCallbackFn) {\n    // get JSONized Node\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }    //as this data was escaped before adding to DOM to prevent XSS (core.ajax.js:246)\n    //here it should be unescaped for further use\n    //as this data was escaped before adding to DOM to prevent XSS (core.ajax.js:246)\n    //here it should be unescaped for further use\n    var json = xssUtil.unescape(jQuery(div).text());\n    var rootObj = json.evalJSON();\n    if (this.modifyRootObject) {\n        rootObj = this.modifyRootObject(rootObj, false);\n    }    // clean AJAX buffer\n    // clean AJAX buffer\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');    // build the tree\n    // build the tree\n    this.setRootNode(this.processNode(rootObj));\n    this.resortTree();\n    if (this.resetStatesOnShow) {\n        this.resetStates();\n    }\n    this.renderTree();\n    this.inInit = false;\n    if (userCallbackFn) {\n        userCallbackFn();\n    } else {\n        this.fireTreeLoadedEvent({ tree: this });\n    }\n});    /*\n * internally used method to turn server model into javascript tree model\n * Be advised of the power of 'extra' property of server node object.\n * You can set there pretty much anything and therefore customize you tree behaviour.\n * TreeNode is available in node handlers which you may assign as callback functions to your code\n *\n * @param metaNode {JSON Object} server node\n */\n/*\n * internally used method to turn server model into javascript tree model\n * Be advised of the power of 'extra' property of server node object.\n * You can set there pretty much anything and therefore customize you tree behaviour.\n * TreeNode is available in node handlers which you may assign as callback functions to your code\n *\n * @param metaNode {JSON Object} server node\n */\ndynamicTree.TreeSupport.addMethod('processNode', function (metaNode) {\n    var param = {};\n    param.id = metaNode.id;\n    param.type = metaNode.type;\n    param.uri = metaNode.uri;\n    param.extra = deepClone(metaNode.extra);\n    if (metaNode.cssClass) {\n        param.cssClass = metaNode.cssClass;\n    }\n    var NodeClassFn = this.nodeClass;\n    var localRoot = new NodeClassFn({\n        name: unescapeBackslash(metaNode.label),\n        param: param,\n        orderNumber: metaNode.order\n    });\n    if (metaNode.tooltip) {\n        localRoot.tooltip = metaNode.tooltip;\n    }    //    localRoot.iconTooltip = this.getIconTooltip(localRoot);\n    //    localRoot.iconTooltip = this.getIconTooltip(localRoot);\n    var ch = metaNode.children;\n    if (ch != null) {\n        var len = ch.length;\n        if (len === 0) {\n            localRoot.setHasChilds(false);\n        } else {\n            for (var i = 0; i < len; i++) {\n                var chNodeObj = ch[i];\n                if (chNodeObj) {\n                    var chTreeNode = this.processNode(chNodeObj);\n                    localRoot.addChild(chTreeNode);\n                }\n            }\n        }\n        localRoot.isloaded = true;\n    }\n    return localRoot;\n});    /*\n * Dynamically loads children for the node\n * Generates \"children:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @param parentNode {{@link dynamicTree.TreeNode}} the node, for which children should be loaded\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Dynamically loads children for the node\n * Generates \"children:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n *\n * @param parentNode {{@link dynamicTree.TreeNode}} the node, for which children should be loaded\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildren', function (parentNode, userCallbackFn, errorCallbackFn) {\n    var uri = parentNode.param.uri;\n    var callback = function (obj, ni, uc, ec) {\n        return function () {\n            return obj.getTreeNodeChildrenCallback(ni, uc, ec);\n        };\n    }(this, parentNode.id, userCallbackFn, errorCallbackFn);\n    var treeErrorHandler = function (ajaxAgent) {\n        if (ajaxAgent.status == 500 || ajaxAgent.getResponseHeader('JasperServerError')) {\n            parentNode.stopWaiting();\n        }\n        baseErrorHandler(ajaxAgent);\n    };\n    ajaxTargettedUpdate(this.urlGetChildren + '&provider=' + this.providerId + '&uri=' + encodeURIComponent(encodeURIComponent(uri)) + '&' + this._evaluateAdditionalParams(), {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: treeErrorHandler,\n        hideLoader: this.hideLoader\n    });\n    if (!this.inInit) {\n        parentNode.wait();\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenCallback', function (parentNodeId, userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var ns = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    var parentNode = dynamicTree.nodes[parentNodeId];\n    if (this.modifyRootObject) {\n        ns = this.modifyRootObject(ns, true, parentNode);\n    }\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    parentNode.resetChilds();\n    parentNode.stopWaiting();\n    var len = ns.length;\n    if (len === 0) {\n        parentNode.setHasChilds(false);\n    } else {\n        var treeId = parentNode.getTreeId();\n        var tree = treeId ? dynamicTree.trees[treeId] : null;\n        var tmpSortNodes = tree ? tree.sortNodes : null;\n        if (tree) {\n            tree.sortNodes = false;\n        }\n        for (var i = 0; i < len; i++) {\n            var node = this.processNode(ns[i]);\n            parentNode.addChild(node);\n        }\n        if (tree) {\n            tree.sortNodes = tmpSortNodes;\n            parentNode.resortChilds();\n        }\n    }\n    parentNode.isloaded = true;\n    parentNode.refreshNode();\n    if (userCallbackFn) {\n        userCallbackFn(parentNode.childs);\n    } else {\n        this.fireChildrenLoadedEvent(parentNode.childs);\n    }\n});    /*\n * Loads children for several given nodes\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNodes {Array<{@link dynamicTree.TreeNode}>} array of TreeNode instances\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Loads children for several given nodes\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNodes {Array<{@link dynamicTree.TreeNode}>} array of TreeNode instances\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeMultipleNodesChildren', function (parentNodes, userCallbackFn, errorCallbackFn) {\n    var uri = '';\n    var ids = [];\n    var i;\n    if (parentNodes && parentNodes.length) {\n        for (i = 0; i < parentNodes.length; i++) {\n            if (i > 0) {\n                uri += ',';\n            }\n            uri += encodeURIComponent(encodeURIComponent(parentNodes[i].param.uri));\n            ids[i] = parentNodes[i].id;\n        }\n    }\n    if (!uri.length) {\n        // no nodes requested - just return\n        return;\n    }\n    var callback = function (obj, ni, uc, ec) {\n        return function () {\n            return obj.getTreeMultipleNodesChildrenCallback(ni, uc, ec);\n        };\n    }(this, ids, userCallbackFn, errorCallbackFn);\n    ajaxTargettedUpdate(this.urlGetMultipleChildren + '&provider=' + this.providerId, // + '&uris=' + uri,\n        {\n            fillLocation: this.ajaxBufferId,\n            callback: callback,\n            postData: 'uris=' + uri,\n            errorHandler: baseErrorHandler,\n            hideLoader: this.hideLoader\n        });\n    if (!this.inInit) {\n        for (i = 0; i < parentNodes.length; i++) {\n            parentNodes[i].wait();\n        }\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeMultipleNodesChildrenCallback', function (parentNodeIds, userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var ns = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    if (userCallbackFn) {\n        userCallbackFn(parentNodeIds, ns);\n    } else {\n        this.setMultipleNodesChilden(parentNodeIds, ns);\n        this.fireMultipleChildrenLoadedEvent(parentNodeIds, ns);\n    }\n});    /*\n * Default processor for getTreeMultipleNodesChildren\n *\n * @param parentNodeIds {Array<String>} parent node IDs for which server was requested\n * @param nodeHolders {Array<JSON Object>} processed server response object\n * @param noRender {Boolean} if true nodes which loaded from server will not be displayed\n */\n/*\n * Default processor for getTreeMultipleNodesChildren\n *\n * @param parentNodeIds {Array<String>} parent node IDs for which server was requested\n * @param nodeHolders {Array<JSON Object>} processed server response object\n * @param noRender {Boolean} if true nodes which loaded from server will not be displayed\n */\ndynamicTree.TreeSupport.addMethod('setMultipleNodesChilden', function (parentNodeIds, nodeHolders, noRender) {\n    if (parentNodeIds && nodeHolders) {\n        for (var nn = 0; nn < nodeHolders.length; nn++) {\n            var nodeHolder = nodeHolders[nn];\n            var ns = nodeHolder.children;    // find a parentNode\n            // find a parentNode\n            var parentNode = null;\n            for (var pn = 0; pn < parentNodeIds.length; pn++) {\n                var tempnode = dynamicTree.nodes[parentNodeIds[pn]];\n                if (tempnode.param.uri == nodeHolder.parentUri) {\n                    parentNode = tempnode;\n                    break;\n                }\n            }\n            if (parentNode) {\n                parentNode.resetChilds();\n                parentNode.stopWaiting();\n                var len = ns.length;\n                if (len === 0) {\n                    parentNode.setHasChilds(false);\n                } else {\n                    var treeId = parentNode.getTreeId();\n                    var tree = treeId ? dynamicTree.trees[treeId] : null;\n                    var tmpSortNodes = tree ? tree.sortNodes : null;\n                    if (tree) {\n                        tree.sortNodes = false;\n                    }\n                    for (var i = 0; i < len; i++) {\n                        var node = this.processNode(ns[i]);\n                        parentNode.addChild(node);\n                    }\n                    if (tree) {\n                        tree.sortNodes = tmpSortNodes;\n                        parentNode.resortChilds();\n                    }\n                }\n                parentNode.isloaded = true;\n                if (!noRender) {\n                    parentNode.refreshNode();\n                }\n            }\n        }\n    }\n});    /*\n * Dynamically loads children for a given node.\n * Makes sure that all requested nodes get prefetched.\n * Nodes to be prefetched have to have parentNode as a common (grand*)parent\n *\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNode {{@link dynamicTree.TreeNode}} the node for which children should be loaded\n * @param prefetchedListStr {String} comma separated URIs to be prefetched\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\n/*\n * Dynamically loads children for a given node.\n * Makes sure that all requested nodes get prefetched.\n * Nodes to be prefetched have to have parentNode as a common (grand*)parent\n *\n * Generates \"multipleChildren:loaded\" event, if request was successful and userCallbackFn isn't specified.\n * Generates \"server:error\" event, if request was unsuccessful and errorCallbackFn isn't specified.\n\n * @param parentNode {{@link dynamicTree.TreeNode}} the node for which children should be loaded\n * @param prefetchedListStr {String} comma separated URIs to be prefetched\n * @param userCallbackFn {Function} optional callback function, that will be called if request was successful\n * @param errorCallbackFn {Function} optional callback function, that will be called if request was unsuccessful\n */\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenPrefetched', function (parentNode, prefetchedListStr, userCallbackFn, errorCallbackFn, depth, disableSorting, noRender) {\n    var uri = parentNode.param.uri;\n    var url = this.urlGetNode + '&provider=' + this.providerId + '&uri=' + uri;\n    var prefetch = '';\n    if (prefetchedListStr) {\n        //            url += '&prefetch=' + prefetchedListStr;\n        prefetch = '&prefetch=' + prefetchedListStr;\n    }\n    if (depth) {\n        url += '&depth=' + depth;\n    }\n    var callback = function (obj, ni, uc, ec, ds, nr) {\n        return function () {\n            return obj.getTreeNodeChildrenPrefetchedCallback(ni, uc, ec, ds, nr);\n        };\n    }(this, parentNode.id, userCallbackFn, errorCallbackFn, disableSorting, noRender);\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        postData: prefetch,\n        errorHandler: baseErrorHandler,\n        hideLoader: this.hideLoader\n    });\n    if (!this.inInit) {\n        parentNode.wait();\n    }\n});\ndynamicTree.TreeSupport.addMethod('getTreeNodeChildrenPrefetchedCallback', function (parentNodeId, userCallbackFn, errorCallbackFn, disableSorting, noRender) {\n    var div = document.getElementById(this.nodeTextId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        } else {\n            this.fireServerErrorEvent();\n        }\n        return;\n    }\n    var n = xssUtil.unescape(jQuery(div).text()).evalJSON();\n    div = document.getElementById(this.ajaxBufferId);\n    jQuery(div).html('');\n    var parentNode = dynamicTree.nodes[parentNodeId];\n    parentNode.resetChilds();\n    parentNode.stopWaiting();\n    if (n.children) {\n        var treeId = parentNode.getTreeId();\n        var tree = treeId ? dynamicTree.trees[treeId] : null;\n        var tmpSortNodes = tree ? tree.sortNodes : null;\n        if (tree) {\n            tree.sortNodes = false;\n        }\n        for (var i = 0; i < n.children.length; i++) {\n            var node = this.processNode(n.children[i]);\n            parentNode.addChild(node);\n        }\n        if (tree) {\n            tree.sortNodes = tmpSortNodes;\n            disableSorting || parentNode.resortChilds();\n        }\n    }\n    parentNode.isloaded = true;\n    if (!noRender) {\n        parentNode.refreshNode();\n    }\n    if (userCallbackFn) {\n        userCallbackFn();\n    } else {\n        this.fireChildredPrefetchedLoadedEvent(parentNode.childs);\n    }\n});    /**\n * Expands the tree up to a given node, and then select it\n *\n * @param uriStr {String} path to the node\n * @param fnAction {Function} optional action to be called\n * @param findFirstChild {Boolean} optional parameter, if true first child of the node will be open\n */\n/**\n * Expands the tree up to a given node, and then select it\n *\n * @param uriStr {String} path to the node\n * @param fnAction {Function} optional action to be called\n * @param findFirstChild {Boolean} optional parameter, if true first child of the node will be open\n */\ndynamicTree.TreeSupport.addMethod('openAndSelectNode', function (uriStr, fnAction, findFirstChild, options) {\n    var fn = function (node) {\n        var tree = dynamicTree.trees[node.getTreeId()];\n        if (node.parent) {\n            if (tree && tree.rootNode != node.parent && tree.getState(node.parent.id) == dynamicTree.TreeNode.State.CLOSED) {\n                node.parent.handleNode();\n            }\n        }\n        if (node && jQuery('#dataChooserSource').length)\n            node.nofocus = true;\n        tree._selectOrEditNode(undefined, node, false, false, false, options);\n    };\n    this.processNodePath(uriStr, fn, findFirstChild);    // scroll tree container to make selected node visible\n    // scroll tree container to make selected node visible\n    var selectedNode = this.getSelectedNode();\n    if (selectedNode) {\n        selectedNode.scroll();\n    }\n    if (fnAction) {\n        fnAction();\n    }\n});\ndynamicTree.TreeSupport.addMethod('processNodePath', function (uriStr, fnForNode, findFirstChild) {\n    var node = this.getRootNode();\n    if (uriStr === '/') {\n        fnForNode(node);\n    } else {\n        var path = uriStr.split('/');\n        var i;\n        for (i = 0; i < path.length; i++) {\n            if (!path[i]) {\n                continue;\n            }\n            var oldNode = node;\n            node = this.findNodeChildByMetaName(node, path[i]);\n            if (!node) {\n                if (findFirstChild) {\n                    node = this.findNodeFirstNodeChildByAlphabeticalOrder(oldNode);\n                    if (!node) {\n                        return;\n                    }\n                } else {\n                    return;\n                }\n            }\n            fnForNode(node);\n        }\n    }\n});    /**\n * Returns TreeNode which is last node in node hierarchical chain for a given uri\n * If returned node corresponds to uriStr, it means no more server requests needed\n * If it corresponds to parent (grand-parent, etc.), the value shows existing root\n * from which the rest should be requested from server\n * Example: uriStr='/area/subarea/dept/prod1', return is TreeNode with uri '/area/subarea'.\n * It means, we need to load children of 'subarea' and children of 'dept' from server\n *\n * @param uriStr {String}\n */\n/**\n * Returns TreeNode which is last node in node hierarchical chain for a given uri\n * If returned node corresponds to uriStr, it means no more server requests needed\n * If it corresponds to parent (grand-parent, etc.), the value shows existing root\n * from which the rest should be requested from server\n * Example: uriStr='/area/subarea/dept/prod1', return is TreeNode with uri '/area/subarea'.\n * It means, we need to load children of 'subarea' and children of 'dept' from server\n *\n * @param uriStr {String}\n */\ndynamicTree.TreeSupport.addMethod('findLastLoadedNode', function (uriStr) {\n    var nodeHolder = { node: null };\n    var fn = function (holder) {\n        return function (node) {\n            holder.node = node;\n        };\n    }(nodeHolder);\n    this.processNodePath(uriStr, fn);\n    return nodeHolder.node;\n});\ndynamicTree.TreeSupport.addMethod('findNodeChildByMetaName', function (node, name) {\n    if (node.hasChilds()) {\n        for (var i = 0; i < node.childs.length; i++) {\n            if (node.childs[i].param.id == name) {\n                return node.childs[i];\n            }\n        }\n    }\n    return null;\n});    /*\n * This function gets the first child based on alphabetical order.\n * For e.g. if the node contains children: {topic, mail, apple, orange}, apple will be returned..\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\n/*\n * This function gets the first child based on alphabetical order.\n * For e.g. if the node contains children: {topic, mail, apple, orange}, apple will be returned..\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\ndynamicTree.TreeSupport.addMethod('findNodeFirstNodeChildByAlphabeticalOrder', function (node) {\n    var firstchildName = null;\n    var firstchildIndex = null;\n    if (node.childs.length > 0) {\n        firstchildName = node.childs[0].param.id;\n        firstchildIndex = 0;\n        var tempChildName = null;\n        var tempChildIndex = null;\n        for (var index = 1; index < node.childs.length; index++) {\n            tempChildName = node.childs[index].param.id;\n            tempChildIndex = index;\n            var loopCount = tempChildName.length < firstchildName.length ? tempChildName.length : firstchildName.length;\n            for (var loopIndex = 0; loopIndex < loopCount; loopIndex++) {\n                if (tempChildName.charCodeAt(loopIndex) < firstchildName.charCodeAt(loopIndex)) {\n                    firstchildName = tempChildName;\n                    firstchildIndex = tempChildIndex;\n                    break;\n                } else if (tempChildName.charCodeAt(loopIndex) > firstchildName.charCodeAt(loopIndex)) {\n                    //we break out.\n                    break;\n                }\n            }\n        }\n        return node.childs[firstchildIndex];\n    } else {\n        return null;\n    }\n});    /**\n * Recursively searching for node by node identifier starting from root node.\n * @param nodeId Node identifier.\n */\n/**\n * Recursively searching for node by node identifier starting from root node.\n * @param nodeId Node identifier.\n */\ndynamicTree.TreeSupport.addMethod('findNodeById', function (nodeId, startNode) {\n    return function _findNodeById(keyNode, node) {\n        if (!node || !keyNode) {\n            return null;\n        }\n        if (node.param.id === keyNode) {\n            return node;\n        }\n        if (node.hasChilds()) {\n            for (var i = 0; i < node.childs.length; ++i) {\n                var found = _findNodeById(keyNode, node.childs[i]);\n                if (found) {\n                    return found;\n                }\n            }\n        }\n        return null;\n    }(nodeId, startNode ? startNode : this.getRootNode());\n});    /*\n * Checks that node has child folders that are loaded and open\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\n/*\n * Checks that node has child folders that are loaded and open\n *\n * @param node {{@link dynamicTree.TreeNode}} parent node\n */\ndynamicTree.TreeSupport.addMethod('hasVisibleFolders', function (rootObj) {\n    if (this.bShowRoot) {\n        return true;\n    }\n    var children = rootObj.children;\n    if (children) {\n        for (var i = 0; i < children.length; i++) {\n            var grandchildren = rootObj.children[i].children;\n            if (grandchildren && grandchildren.length > 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n});    ///////////////////////////////////////////\n// Message system support\n///////////////////////////////////////////\n///////////////////////////////////////////\n// Message system support\n///////////////////////////////////////////\ndynamicTree.TreeSupport.addMethod('getMessage', function (messageId, userCallbackFn, errorCallbackFn) {\n    var url = this.urlGetMessage + '&messageId=' + messageId;\n    var callback = function (obj, uc, ec) {\n        return function () {\n            return obj.getMessageCallback(uc, ec);\n        };\n    }(this, userCallbackFn, errorCallbackFn);\n    ajaxTargettedUpdate(url, {\n        fillLocation: this.ajaxBufferId,\n        callback: callback,\n        errorHandler: baseErrorHandler,\n        hideLoader: this.hideLoader\n    });\n});\ndynamicTree.TreeSupport.addMethod('getMessageCallback', function (userCallbackFn, errorCallbackFn) {\n    var div = document.getElementById(this.ajaxBufferId);\n    if (div == null) {\n        if (errorCallbackFn) {\n            errorCallbackFn();\n        }\n        return;\n    }    // clean AJAX buffer\n    // clean AJAX buffer\n    var divEl = jQuery(div);\n    var text = trim(divEl.html());\n    divEl.html('');\n    if (userCallbackFn) {\n        userCallbackFn(text);\n    }\n});    ////////////////////////////////////////////////////////\n// Message system support\n////////////////////////////////////////////////////////\n/**\n * Generates \"server:error\" event.\n */\n////////////////////////////////////////////////////////\n// Message system support\n////////////////////////////////////////////////////////\n/**\n * Generates \"server:error\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireServerErrorEvent', function () {\n    this._getElement().fire('server:error', {});\n});    /**\n * Generates \"tree:loaded\" event.\n */\n/**\n * Generates \"tree:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireTreeLoadedEvent', function (tree) {\n    this._getElement().fire('tree:loaded', { tree: tree });\n});    /**\n * Generates \"children:loaded\" event.\n */\n/**\n * Generates \"children:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireChildrenLoadedEvent', function (nodes) {\n    this._getElement().fire('children:loaded', { nodes: nodes });\n});    /**\n * Generates \"multipleChildren:loaded\" event.\n */\n/**\n * Generates \"multipleChildren:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireMultipleChildrenLoadedEvent', function (parentNodeIds, metaNodes) {\n    this._getElement().fire('multipleChildren:loaded', {\n        parentNodeIds: parentNodeIds,\n        metaNodes: metaNodes\n    });\n});    /**\n * Generates \"childredPrefetched:loaded\" event.\n */\n/**\n * Generates \"childredPrefetched:loaded\" event.\n */\ndynamicTree.TreeSupport.addMethod('fireChildredPrefetchedLoadedEvent', function (nodes) {\n    this._getElement().fire('childredPrefetched:loaded', { nodes: nodes });\n});\n\nexport default dynamicTree;","/*\n * Copyright (C) 2005 - 2022 TIBCO Software Inc. All rights reserved.\n * http://www.jaspersoft.com.\n *\n * Unless you have purchased a commercial license agreement from Jaspersoft,\n * the following license terms apply:\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n\n/**\n * @version: $Id$\n */\nimport jQuery from 'jquery';\nimport dynamicTree from './dynamicTree.treesupport';\nimport {deepClone, isIPad} from '../util/utils.common';\nimport TouchController from '../util/touch.controller';\n\n// Creating RepositoryFolder class.\ndynamicTree.RepositoryFolder = function(options) {\n    dynamicTree.TreeNode.call(this, options);\n\n    this.Types = {\n        Folder : new dynamicTree.TreeNode.Type('com.jaspersoft.jasperserver.api.metadata.common.domain.Folder'),\n        SuperRoot : new dynamicTree.TreeNode.Type('superroot'),\n        Root : new dynamicTree.TreeNode.Type('root')\n    };\n    this.nodeHeaderTemplateDomId = \"list_responsive_collapsible_folders:folders\";\n\n    if (this.param.extra && this.param.extra.isActiveThemeFolder) {\n        this.param.cssClass = this.ACTIVE_THEME_CLASS;\n    }\n};\nif(dynamicTree.TreeNode) {\n    dynamicTree.RepositoryFolder.prototype = deepClone(dynamicTree.TreeNode.prototype);\n}\n\ndynamicTree.RepositoryFolder.addVar('ACTIVE_THEME_CLASS', \"activeTheme\");\n\ndynamicTree.RepositoryFolder.addMethod('isParent', function() {\n    return this.param.type == this.Types.Folder.name ||\n        this.param.type == this.Types.SuperRoot.name ||\n        this.param.type == this.Types.Root.name;\n});\n\ndynamicTree.RepositoryFolder.addMethod('isSuperRoot', function() {\n    return this.param.type == this.Types.SuperRoot.name;\n});\n\ndynamicTree.RepositoryFolder.addMethod('isPublic', function() {\n    return this.param.id === 'public';\n});\n\ndynamicTree.createRepositoryTree = function(id, options) {\n    // Creating of TreeSupport instance and replacing its method for repository usage.\n    var orgMode = (options.organizationId != null && options.organizationId !== \"\");\n\n    //enable override for showing root node.\n    if((options.bShowRoot ==  null)){\n        options.bShowRoot = !orgMode;\n    }\n\n    if (!options.nodeClass) {\n        options.nodeClass = dynamicTree.RepositoryFolder;\n    }\n\n    options.templateDomId = \"list_responsive_collapsible_folders\";\n\n    var tree = new dynamicTree.TreeSupport(id, options);\n\n    tree.organizationId = options.organizationId;\n    tree.publicFolderUri = options.publicFolderUri;\n    tree.orgMode = orgMode;\n\n    tree.modifyRootObject = function (rootObj, isChildrenCallback, parentNode) {\n        var updatedRootObj;\n        if (isChildrenCallback) {\n            updatedRootObj = [];\n            for (var i=0; i<rootObj.length; i++) {\n                if (rootObj[i].uri != this.publicFolderUri || (!parentNode || parentNode.param.uri == \"/\")) {\n                    updatedRootObj.push(rootObj[i]);\n                }\n            }\n        } else {\n            if (this.orgMode && rootObj.children != null) {\n                var publicFolder;\n                var ch = rootObj.children;\n                var newCh = [];\n                for (var j=0; j<ch.length; j++) {\n                    if (ch[j].uri == this.publicFolderUri) {\n                        publicFolder = ch[j];\n                    } else {\n                        newCh.push(ch[j]);\n                    }\n                }\n                rootObj.children = newCh;\n\n                updatedRootObj = {\n                    type: 'superroot',\n                    label: '',\n                    extra: {}\n                };\n\n                updatedRootObj.children = publicFolder ? [rootObj, publicFolder] : [rootObj];\n            } else {\n                updatedRootObj = rootObj;\n            }\n        }\n        return updatedRootObj;\n    };\n\n    tree.getRootNode = function() {\n        var rootNode = this.rootNode;\n\n        if (rootNode.isSuperRoot()) {\n            return (rootNode.childs[0].isPublic() && rootNode.childs.length > 1) ? rootNode.childs[1] : rootNode.childs[0];\n        }\n\n        return rootNode;\n    };\n\n    tree.findNodeChildByMetaName = function(node, name) {\n        if (node.isSuperRoot()) {\n            var publicNode;\n            var rootNode;\n            if (node.childs[0].isPublic()) {\n                publicNode = node.childs[0];\n                rootNode = node.childs[1];\n            } else {\n                publicNode = node.childs[1];\n                rootNode = node.childs[0];\n            }\n\n            if (name === 'public') {\n                return publicNode;\n            } else {\n                node = rootNode;\n            }\n        }\n\n        if (node.hasChilds()) {\n            for (var i = 0; i < node.childs.length; i++) {\n                if (node.childs[i].param.id == name) {\n                    return node.childs[i];\n                }\n            }\n        }\n\n        if (name == 'public' && node.parent && node.parent.isSuperRoot()) {\n            return tree.findNodeChildByMetaName(node.parent, name);\n        }\n\n        return null;\n    };\n\n    if(isIPad()){\n        var scrollElement = jQuery('#' + id)[0];\n        tree.touchController = new TouchController(scrollElement, jQuery(scrollElement).parent(1), {\n            absolute: true\n        });\n    }\n\n    return tree;\n};\n\nexport default dynamicTree;"],"sourceRoot":""}